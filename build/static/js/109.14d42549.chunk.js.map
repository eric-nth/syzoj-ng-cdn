{"version":3,"sources":["utils/CodeFormatter.ts"],"names":["failedMessage","ready","a","wastyle","astyleBinaryUrl","console","error","toString","defaultOptions","join","languageToModeMap","CodeLanguage","Cpp","C","Java","CSharp","isLanguageSupported","language","format","code","options","trim","result","replace","match","p1","p2"],"mappings":"0UAKIA,EAAwB,KACfC,EAAQ,sBAAC,sBAAAC,EAAA,+EAEZC,OAAaC,KAFD,sDAIlBC,QAAQC,MAAR,uCACAN,EAAgB,KAAEO,WALA,uDAAD,GASRC,EAAiB,CAC5B,aACA,oBACA,iBACA,iBACA,kBACA,uBACA,uBACA,eACA,WACA,YACA,aACA,cACA,qBACA,yBACA,qBACA,0BACA,eACA,kBACA,sBACA,uBACAC,KAAK,KAEDC,GAAiB,mBACpBC,IAAaC,IAAM,KADC,cAEpBD,IAAaE,EAAI,KAFG,cAGpBF,IAAaG,KAAO,QAHA,cAIpBH,IAAaI,OAAS,MAJF,GAOhB,SAASC,EAAoBC,GAClC,QAASP,EAAkBO,GAGtB,SAASC,EAAOC,EAAcF,GAA8E,IAAtDG,EAAqD,uDAAnCZ,EAC7E,GAAIR,EAAe,MAAO,EAAC,EAAOA,GAElC,IAAKU,EAAkBO,GAAW,MAAO,EAAC,EAAO,wBAH+D,MAK1Fd,SAAegB,EAAf,UAAwBC,EAAQC,OAAhC,iBAA+CX,EAAkBO,KALyB,mBAK3GX,EAL2G,KAKpGgB,EALoG,KAUhH,MAAO,CAAChB,EAFRgB,EAASA,EAAOC,QAAQ,mCAAmC,SAACC,EAAOC,EAAIC,GAAZ,iBAAuBD,EAAvB,YAA6BC","file":"static/js/109.14d42549.chunk.js","sourcesContent":["import * as wastyle from \"wastyle\";\nimport astyleBinaryUrl from \"wastyle/dist/astyle.wasm\";\n\nimport { CodeLanguage } from \"@/interfaces/CodeLanguage\";\n\nlet failedMessage: string = null;\nexport const ready = (async () => {\n  try {\n    await wastyle.init(astyleBinaryUrl);\n  } catch (e) {\n    console.error(`Failed to load code formatter:`, e);\n    failedMessage = e.toString();\n  }\n})();\n\nexport const defaultOptions = [\n  \"style=java\",\n  \"attach-namespaces\",\n  \"attach-classes\",\n  \"attach-inlines\",\n  \"attach-extern-c\",\n  \"attach-closing-while\",\n  \"indent-col1-comments\",\n  \"break-blocks\",\n  \"pad-oper\",\n  \"pad-comma\",\n  \"pad-header\",\n  \"unpad-paren\",\n  \"align-pointer=name\",\n  \"break-one-line-headers\",\n  \"attach-return-type\",\n  \"attach-return-type-decl\",\n  \"convert-tabs\",\n  \"close-templates\",\n  \"max-code-length=110\",\n  \"break-after-logical\"\n].join(\" \");\n\nconst languageToModeMap = {\n  [CodeLanguage.Cpp]: \"c\",\n  [CodeLanguage.C]: \"c\",\n  [CodeLanguage.Java]: \"java\",\n  [CodeLanguage.CSharp]: \"cs\"\n};\n\nexport function isLanguageSupported(language: CodeLanguage) {\n  return !!languageToModeMap[language];\n}\n\nexport function format(code: string, language: CodeLanguage, options: string = defaultOptions): [boolean, string] {\n  if (failedMessage) return [false, failedMessage];\n\n  if (!languageToModeMap[language]) return [false, \"Unsupported language\"];\n\n  let [error, result] = wastyle.format(code, `${options.trim()} mode=${languageToModeMap[language]}`);\n\n  // The space in \"#include <file>\"\n  result = result.replace(/^#(include|import)[\\t ]*(<|\")/gm, (match, p1, p2) => `#${p1} ${p2}`);\n\n  return [error, result];\n}\n"],"sourceRoot":""}