{"version":3,"sources":["utils/formatFileSize.ts"],"names":["formatFileSize","size","precision","unit","Math","round","toString","toFixed"],"mappings":"qHAAe,SAASA,EAAeC,EAAcC,GAInD,IAHA,IAEIC,EAAO,IACX,MAHc,CAAC,IAAK,IAAK,IAAK,KAG9B,eAA8B,CACxBF,EAAO,OACTA,GAAQ,KACRE,EAHe,MAQnB,OADcF,IAASG,KAAKC,MAAMJ,GAAQA,EAAKK,WAAaL,EAAKM,QAAQL,IAC1D,IAAMC,EAZvB","file":"static/js/18.fc004ee9.chunk.js","sourcesContent":["export default function formatFileSize(size: number, precision: number) {\n  const units = [\"K\", \"M\", \"G\", \"T\"];\n\n  let unit = \"B\";\n  for (const currUnit of units) {\n    if (size > 1024) {\n      size /= 1024;\n      unit = currUnit;\n    }\n  }\n\n  const fixed = size === Math.round(size) ? size.toString() : size.toFixed(precision);\n  return fixed + \" \" + unit;\n}\n"],"sourceRoot":""}