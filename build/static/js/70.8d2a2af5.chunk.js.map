{"version":3,"sources":["pages/discussion/view/LoadMoreBackground.svg","pages/discussion/view/DiscussionViewPage.tsx"],"names":["fetchData","discussionId","a","pagination","appState","serverPreference","api","discussion","getDiscussionAndReplies","locale","queryRepliesType","getDiscussion","headTakeCount","discussionRepliesHead","tailTakeCount","discussionReplies","requestError","response","RouteError","showRefresh","showBack","error","makeToBeLocalizedText","Emoji","React","memo","props","className","style","emoji","dangerouslySetInnerHTML","__html","twemoji","parse","getTwemojiOptions","ReactionEmojiPicker","_","useLocalizer","custom","misc","discussionReactionAllowCustomEmojis","emojis","discussionReactionEmojis","count","length","columns","rows","Math","floor","emojiGrid","Array","fill","map","i","j","emojiPicker","emojiRow","currentUserReactions","includes","selected","onClick","onSelectEmoji","Input","customEmoji","placeholder","fluid","onKeyPress","onEnterPress","e","target","value","trim","observer","DiscussionItem","isMobile","useScreenWidthWithin","isWideScreen","Infinity","emojisAndCount","Object","entries","reactions","filter","sort","emoji1","emoji2","emojiToKey","indexOf","String","fromCodePoint","useState","pendingEmojis","setPendingEmojis","concat","onReaction","then","s","useAsyncCallbackPending","onSetPublic","onDelete","pendingDelete","emojiPopupOpen","setEmojiPopupOpen","actionDropdownOpen","setActionDropdownOpen","confirmSetPublicPopupOpen","setConfirmSetPublicPopupOpen","confirmDeletePopupOpen","setConfirmDeletePopupOpen","confirmDeleteDialog","useDialog","basic","Header","icon","content","Button","inverted","negative","loading","disabled","close","refActionsMenuIcon","setRefActionsMenuIcon","actions","permission","onEnterEdit","Dropdown","Item","text","as","Link","href","type","currentUser","onQuote","onManagePermission","Popup","trigger","isPublic","positive","open","onOpen","onClose","context","on","position","delete","undefined","Fragment","label","publisher","id","problem","meta","ownerId","Label","color","item","element","avatar","UserLink","user","UserAvatar","imageSize","userAvatar","bubble","pending","block","attached","header","headerContents","left","triangle","username","commentedOn","TimeAgo","time","publishTime","editTime","edited","title","formatDateTime","labelDivider","right","actionIcon","active","emojiPickerPopup","Icon","name","Ref","innerRef","direction","Menu","Segment","MarkdownContent","emojiList","emojiListWrapper","emojiItem","PseudoLink","link","DiscussionEditor","ref","onSubmit","result","setModified","pendingSubmit","preview","setPreview","useFocusWithin","editorFocused","setEditor","isDiscussion","isUpdate","isNew","isRaw","useConfirmNavigation","modified","setModifiedReal","isEmpty","submitDisabled","noSubmitPermission","edit","new","raw","onChange","onChangeTitle","editTab","tabular","mainSegment","ctrlKey","Form","display","TextArea","TextAreaAutoSize","editor","getMarkdownEditorFontClass","maxRows","onChangeContent","noOverflowCutFix","onCancel","forwardRef","DiscussionViewPage","navigation","useNavigationChecked","useEffect","enterNewPage","getDiscussionDisplayTitle","styleElement","document","createElement","innerHTML","loadMore","loadMoreBackground","head","appendChild","removeChild","recaptcha","useRecaptcha","repliesHead","reply","tail","repliesTail","loadMoreCount","repliesTotalCount","afterId","beforeId","items","setItems","mergeLoadMoreItem","callbackOrItem","assign","idRangeTakeCount","min","discussionRepliesMore","toast","newItems","keys","repliesCountInRange","repliesInRange","push","loadedCount","setDiscussion","mergeDiscussion","callback","mergeItem","mergeReplyItem","reaction","toggleReaction","processReactions","Number","setDiscussionPublic","setDiscussionReplyPublic","deleteDiscussion","deleteDiscussionReply","navigate","pathname","query","problemId","newReplyContent","setNewReplyContent","createDiscussionReply","updateDiscussionReply","discussionReplyId","refNewReply","useRef","refOpenPermissionManager","permissionManager","objectDescription","permissionsLevelDetails","1","2","refOpen","onGetInitialPermissions","getDiscussionPermissions","owner","userPermissions","permissions","groupPermissions","haveSubmitPermission","haveManagePermissionsPermission","onSubmitPermissions","setDiscussionPermissions","permissionCreateNewDiscussion","primary","getNewDiscussionUrl","getBreadcrumb","titleAndActions","EmojiRenderer","size","replyCount","mobile","Date","current","editReplyContent","onUpdateReply","endsWith","slice","trimEnd","split","line","trimRight","join","scrollIntoView","onLoadMore","dividerBeforeAddReply","defineRoute","request","params","uuid"],"mappings":"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","file":"static/js/70.8d2a2af5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"074a8b32bffa183dcb423d68f0ef4f46.svg\";","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Button,\n  Dropdown,\n  Form,\n  Header,\n  Icon,\n  Input,\n  Label,\n  Menu,\n  Popup,\n  Ref,\n  Segment,\n  TextArea\n} from \"semantic-ui-react\";\nimport { observer } from \"mobx-react\";\nimport twemoji from \"twemoji\";\nimport TextAreaAutoSize from \"react-textarea-autosize\";\nimport { v4 as uuid } from \"uuid\";\n\nimport style from \"./DiscussionViewPage.module.less\";\nimport loadMoreBackground from \"./LoadMoreBackground.svg\";\n\nimport { defineRoute, RouteError } from \"@/AppRouter\";\nimport { appState } from \"@/appState\";\nimport api from \"@/api\";\nimport {\n  useAsyncCallbackPending,\n  useLocalizer,\n  useDialog,\n  useFocusWithin,\n  useConfirmNavigation,\n  useRecaptcha,\n  useScreenWidthWithin,\n  useNavigationChecked,\n  Link\n} from \"@/utils/hooks\";\nimport { getDiscussionDisplayTitle } from \"../utils\";\nimport toast from \"@/utils/toast\";\nimport UserLink from \"@/components/UserLink\";\nimport formatDateTime from \"@/utils/formatDateTime\";\nimport UserAvatar from \"@/components/UserAvatar\";\nimport MarkdownContent from \"@/markdown/MarkdownContent\";\nimport PseudoLink from \"@/components/PseudoLink\";\nimport { onEnterPress } from \"@/utils/onEnterPress\";\nimport PermissionManager from \"@/components/LazyPermissionManager\";\nimport { getBreadcrumb, getNewDiscussionUrl } from \"../discussions/DiscussionsPage\";\nimport { makeToBeLocalizedText } from \"@/locales\";\nimport { EmojiRenderer, getTwemojiOptions } from \"@/components/EmojiRenderer\";\nimport TimeAgo from \"@/components/TimeAgo\";\nimport { getMarkdownEditorFontClass } from \"@/misc/fonts\";\n\nasync function fetchData(discussionId: number) {\n  const pagination = appState.serverPreference.pagination;\n  const { requestError, response } = await api.discussion.getDiscussionAndReplies({\n    locale: appState.locale,\n    queryRepliesType: \"HeadTail\",\n    discussionId,\n    getDiscussion: true,\n    headTakeCount: pagination.discussionRepliesHead,\n    tailTakeCount: pagination.discussionReplies - pagination.discussionRepliesHead\n  });\n\n  if (requestError) throw new RouteError(requestError, { showRefresh: true, showBack: true });\n  else if (response.error) throw new RouteError(makeToBeLocalizedText(`discussion.errors.${response.error}`));\n\n  return response;\n}\n\ninterface EmojiProps extends React.HTMLAttributes<HTMLDivElement> {\n  emoji: string;\n}\n\nconst Emoji: React.FC<EmojiProps> = React.memo(props => (\n  <div\n    {...props}\n    className={style.emoji + (props.className ? \" \" + props.className : \"\")}\n    dangerouslySetInnerHTML={{\n      __html: twemoji.parse(props.emoji, getTwemojiOptions(false))\n    }}\n  />\n));\n\ninterface ReactionEmojiPickerProps {\n  currentUserReactions: string[];\n  onSelectEmoji: (emoji: string) => void;\n}\n\nlet ReactionEmojiPicker: React.FC<ReactionEmojiPickerProps> = props => {\n  const _ = useLocalizer(\"discussion\");\n\n  const custom = appState.serverPreference.misc.discussionReactionAllowCustomEmojis;\n  const emojis = appState.serverPreference.misc.discussionReactionEmojis;\n\n  const count = emojis.length;\n  const columns = count % 5 == 0 ? 5 : count % 4 == 0 ? 4 : count % 3 == 0 ? 3 : count % 2 == 0 ? 2 : 1;\n  const rows = Math.floor(count / columns);\n  const emojiGrid = Array(rows)\n    .fill(null)\n    .map((_, i) =>\n      Array(columns)\n        .fill(null)\n        .map((_, j) => emojis[i * columns + j])\n    );\n\n  return (\n    <div className={style.emojiPicker}>\n      <div className={style.emojiGrid}>\n        {emojiGrid.map((emojiRow, i) => (\n          <div className={style.emojiRow} key={i}>\n            {emojiRow.map(emoji => (\n              <Emoji\n                key={emoji}\n                className={props.currentUserReactions.includes(emoji) && style.selected}\n                emoji={emoji}\n                onClick={() => props.onSelectEmoji(emoji)}\n              />\n            ))}\n          </div>\n        ))}\n      </div>\n      {custom && (\n        <Input\n          className={style.customEmoji}\n          placeholder={_(\".custom_emoji\")}\n          fluid\n          onKeyPress={onEnterPress(e => props.onSelectEmoji((e.target as HTMLInputElement).value.trim()))}\n        />\n      )}\n    </div>\n  );\n};\n\nReactionEmojiPicker = observer(ReactionEmojiPicker);\n\ninterface DiscussionItemProps {\n  type: \"Discussion\" | \"Reply\";\n  discussion: ApiTypes.DiscussionDto;\n\n  content: string;\n  isPublic: boolean;\n  reactions: ApiTypes.DiscussionOrReplyReactionsDto;\n  publisher: ApiTypes.UserMetaDto;\n  publishTime: Date;\n  editTime: Date;\n  permission: ApiTypes.DiscussionDto[\"permissions\"];\n\n  onReaction: (emoji: string, reaction: boolean) => Promise<void>;\n  onQuote?: () => void;\n  onSetPublic: () => Promise<void>;\n  onManagePermission?: () => void;\n  onEnterEdit: string | (() => void);\n  onDelete: () => Promise<void>;\n}\n\nlet DiscussionItem: React.FC<DiscussionItemProps> = props => {\n  const _ = useLocalizer(\"discussion.item\");\n\n  const isMobile = useScreenWidthWithin(0, 768);\n  const isWideScreen = useScreenWidthWithin(1210, Infinity);\n\n  const emojisAndCount = (Object.entries(props.reactions.count) as [string, number][])\n    .filter(([, count]) => count)\n    .sort(([emoji1], [emoji2]) => {\n      function emojiToKey(emoji: string) {\n        const i = appState.serverPreference.misc.discussionReactionEmojis.indexOf(emoji);\n        if (i !== -1) return String.fromCodePoint(i);\n        return emoji;\n      }\n\n      return emojiToKey(emoji1) < emojiToKey(emoji2) ? -1 : 1;\n    });\n\n  const [pendingEmojis, setPendingEmojis] = useState<string[]>([]);\n  function onSelectEmoji(emoji: string) {\n    if (pendingEmojis.includes(emoji)) return;\n\n    setPendingEmojis(pendingEmojis.concat(emoji));\n    props.onReaction(emoji, !props.reactions.currentUserReactions.includes(emoji)).then(() => {\n      setPendingEmojis(pendingEmojis => pendingEmojis.filter(s => s !== emoji));\n    });\n  }\n\n  const [pendingSetPublic, onSetPublic] = useAsyncCallbackPending(props.onSetPublic);\n  const [pendingDelete, onDelete] = useAsyncCallbackPending(props.onDelete);\n\n  const [emojiPopupOpen, setEmojiPopupOpen] = useState(false);\n  const [actionDropdownOpen, setActionDropdownOpen] = useState(false);\n  const [confirmSetPublicPopupOpen, setConfirmSetPublicPopupOpen] = useState(false);\n\n  // Delete a reply -- popup confirm\n  // Delete a discussion -- full page dialog confirm\n  const [confirmDeletePopupOpen, setConfirmDeletePopupOpen] = useState(false);\n  const confirmDeleteDialog = useDialog(\n    {\n      basic: true\n    },\n    () => (\n      <>\n        <Header icon=\"delete\" content={_(\".actions.confirm_delete_dialog_title\")} />\n      </>\n    ),\n    () => _(\".actions.confirm_delete_dialog_content\"),\n    () => (\n      <>\n        <Button\n          basic\n          inverted\n          negative\n          content={_(\".actions.confirm_delete_dialog_confirm\")}\n          loading={pendingDelete}\n          onClick={onDelete}\n        />\n        <Button\n          basic\n          inverted\n          content={_(\".actions.confirm_delete_dialog_cancel\")}\n          disabled={pendingDelete}\n          onClick={() => confirmDeleteDialog.close()}\n        />\n      </>\n    )\n  );\n\n  const [refActionsMenuIcon, setRefActionsMenuIcon] = useState<HTMLElement>();\n\n  const actions = [\n    props.permission.includes(\"Modify\") &&\n      (typeof props.onEnterEdit === \"string\" ? (\n        <Dropdown.Item icon=\"edit\" text={_(\".actions.edit\")} as={Link} href={props.onEnterEdit} />\n      ) : (\n        <Dropdown.Item icon=\"edit\" text={_(\".actions.edit\")} onClick={props.onEnterEdit} />\n      )),\n    props.type === \"Reply\" && appState.currentUser && (\n      <Dropdown.Item icon=\"quote left\" text={_(\".actions.quote\")} onClick={props.onQuote} />\n    ),\n    props.permission.includes(\"ManagePermission\") && (\n      <Dropdown.Item icon=\"key\" text={_(\".actions.permission_manage\")} onClick={props.onManagePermission} />\n    ),\n    props.permission.includes(\"ManagePublicness\") && (\n      <Popup\n        trigger={\n          <Dropdown.Item\n            icon={props.isPublic ? \"eye slash\" : \"eye\"}\n            text={props.isPublic ? _(\".actions.set_non_public\") : _(\".actions.set_public\")}\n          />\n        }\n        content={\n          <Button\n            positive={!props.isPublic}\n            content={props.isPublic ? _(\".actions.confirm_set_non_public\") : _(\".actions.confirm_set_public\")}\n            onClick={() => {\n              setConfirmSetPublicPopupOpen(false);\n              onSetPublic();\n            }}\n          />\n        }\n        open={confirmSetPublicPopupOpen}\n        onOpen={() => setConfirmSetPublicPopupOpen(true)}\n        onClose={() => setConfirmSetPublicPopupOpen(false)}\n        context={refActionsMenuIcon}\n        on=\"click\"\n        position=\"top center\"\n      />\n    ),\n    props.permission.includes(\"Delete\") && (\n      <Popup\n        trigger={\n          <Dropdown.Item\n            className={style.delete}\n            icon=\"delete\"\n            text={_(\".actions.delete\")}\n            onClick={props.type === \"Discussion\" ? confirmDeleteDialog.open : undefined}\n          />\n        }\n        content={\n          <Button\n            negative\n            content={_(\".actions.confirm_delete\")}\n            onClick={() => {\n              setConfirmDeletePopupOpen(false);\n              onDelete();\n            }}\n          />\n        }\n        disabled={props.type === \"Discussion\"}\n        open={confirmDeletePopupOpen}\n        onOpen={() => setConfirmDeletePopupOpen(true)}\n        onClose={() => setConfirmDeletePopupOpen(false)}\n        context={refActionsMenuIcon}\n        on=\"click\"\n        position=\"top center\"\n      />\n    )\n  ]\n    .filter(e => e)\n    .map((e, i) => <React.Fragment key={i}>{e}</React.Fragment>);\n\n  const label = !props.isPublic ? (\n    <Label className={style.label} icon=\"eye slash\" color=\"red\" content={_(\".label.nonpublic\")} basic />\n  ) : props.publisher.id === props.discussion.problem?.meta?.ownerId ? (\n    <Label className={style.label} content={_(\".label.problem_owner\")} basic />\n  ) : props.publisher.id === props.discussion.publisher.id && props.type === \"Reply\" ? (\n    <Label className={style.label} content={_(\".label.discussion_publisher\")} basic />\n  ) : null;\n\n  return (\n    <div\n      className={\n        style.item +\n        (props.type === \"Discussion\" ? \" \" + style.discussion : \"\") +\n        (props.publisher.id === appState.currentUser?.id ? \" \" + style.currentUser : \"\")\n      }\n    >\n      {confirmDeleteDialog.element}\n      {!isMobile && (\n        <div className={style.avatar}>\n          <UserLink user={props.publisher}>\n            <UserAvatar imageSize={40} userAvatar={props.publisher.avatar} />\n          </UserLink>\n        </div>\n      )}\n      <div className={style.bubble + (pendingDelete ? \" \" + style.pending : \"\")}>\n        <Header block attached=\"top\" className={style.header}>\n          <div className={style.headerContents}>\n            <div className={style.left}>\n              {!isMobile && <div className={style.triangle} />}\n              {isMobile && (\n                <div className={style.avatar}>\n                  <UserLink user={props.publisher}>\n                    <UserAvatar imageSize={20} userAvatar={props.publisher.avatar} />\n                  </UserLink>\n                </div>\n              )}\n              <div className={style.username}>\n                <span>\n                  <UserLink user={props.publisher} />\n                </span>\n              </div>\n              <span className={style.commentedOn}>\n                {_(\".commented_on\")}\n                <TimeAgo time={props.publishTime} />\n                {props.editTime && (\n                  <>\n                    <span className={style.edited} title={formatDateTime(props.editTime)[1]}>\n                      {_(\".edited\")}\n                    </span>\n                  </>\n                )}\n              </span>\n              {label && (\n                <>\n                  <div className={style.labelDivider} />\n                  {label}\n                </>\n              )}\n            </div>\n            <div className={style.right}>\n              {appState.currentUser && (\n                <div className={style.actionIcon + (emojiPopupOpen ? \" \" + style.active : \"\")}>\n                  <Popup\n                    className={style.emojiPickerPopup}\n                    trigger={<Icon name=\"smile outline\" />}\n                    content={\n                      <ReactionEmojiPicker\n                        currentUserReactions={props.reactions.currentUserReactions}\n                        onSelectEmoji={emoji => {\n                          onSelectEmoji(emoji);\n                          setEmojiPopupOpen(false);\n                        }}\n                      />\n                    }\n                    open={emojiPopupOpen}\n                    onOpen={() => setEmojiPopupOpen(true)}\n                    onClose={() => setEmojiPopupOpen(false)}\n                    on=\"click\"\n                    position={isWideScreen ? \"bottom center\" : \"right center\"}\n                  />\n                </div>\n              )}\n              {actions.length > 0 && (\n                <Ref innerRef={setRefActionsMenuIcon}>\n                  <Dropdown\n                    direction={isMobile ? \"left\" : \"right\"}\n                    className={style.actionIcon + (actionDropdownOpen ? \" \" + style.active : \"\")}\n                    icon=\"ellipsis horizontal\"\n                    open={actionDropdownOpen}\n                    // Click event issue\n                    onOpen={() => !confirmSetPublicPopupOpen && !confirmDeletePopupOpen && setActionDropdownOpen(true)}\n                    onClose={() => setActionDropdownOpen(false)}\n                  >\n                    <Dropdown.Menu>{actions}</Dropdown.Menu>\n                  </Dropdown>\n                </Ref>\n              )}\n            </div>\n          </div>\n        </Header>\n        <Segment attached className={style.content}>\n          <MarkdownContent content={props.content} />\n        </Segment>\n        {emojisAndCount.length > 0 && (\n          <Segment attached=\"bottom\" className={style.emojiList}>\n            <div className={style.emojiListWrapper}>\n              {emojisAndCount.map(([emoji, count]) => (\n                <div\n                  className={\n                    style.emojiItem +\n                    (props.reactions.currentUserReactions.includes(emoji) ? \" \" + style.selected : \"\") +\n                    (!appState.currentUser ? \" \" + style.disabled : \"\")\n                  }\n                  key={emoji}\n                  onClick={() => onSelectEmoji(emoji)}\n                >\n                  <Emoji emoji={emoji} />\n                  <PseudoLink className={style.link}>{count}</PseudoLink>\n                </div>\n              ))}\n            </div>\n          </Segment>\n        )}\n      </div>\n    </div>\n  );\n};\n\nDiscussionItem = observer(DiscussionItem);\n\ninterface DiscussionEditorProps {\n  className?: string;\n\n  publisher?: ApiTypes.UserMetaDto;\n  content: string;\n  type: \"UpdateReply\" | \"NewReply\" | \"UpdateDiscussion\" | \"NewDiscussion\" | \"RawEditor\";\n  onChangeContent: (content: string) => void;\n  onCancel?: () => void;\n  onSubmit?: (content: string) => Promise<boolean | (() => void)>;\n\n  // Only for new/update discussion\n  title?: string;\n  onChangeTitle?: (title: string) => void;\n  noSubmitPermission?: boolean;\n\n  // Only for raw markdown editor\n  placeholder?: string;\n}\n\nexport let DiscussionEditor = observer<DiscussionEditorProps, HTMLDivElement>(\n  (props, ref) => {\n    const _ = useLocalizer(\"discussion.edit\");\n\n    const isMobile = useScreenWidthWithin(0, 768);\n    const [pendingSubmit, onSubmit] = useAsyncCallbackPending(async () => {\n      if (props.onSubmit) {\n        const result = await props.onSubmit(props.content);\n        if (result) setModified(false);\n        if (typeof result === \"function\") result();\n      }\n    });\n\n    const [preview, setPreview] = useState(false);\n\n    const [editorFocused, setEditor] = useFocusWithin();\n\n    const isDiscussion = props.type === \"NewDiscussion\" || props.type === \"UpdateDiscussion\";\n    const isUpdate = props.type === \"UpdateDiscussion\" || props.type === \"UpdateReply\";\n    const isNew = props.type === \"NewDiscussion\" || props.type === \"NewReply\";\n    const isRaw = props.type === \"RawEditor\";\n\n    const [modified, setModifiedReal] = useConfirmNavigation();\n    const setModified = isRaw ? () => {} : setModifiedReal;\n\n    const isEmpty = props.content.length === 0 || (isDiscussion && props.title.length === 0);\n    const submitDisabled = props.noSubmitPermission || isEmpty;\n\n    return (\n      <div\n        ref={ref}\n        className={\n          style.item +\n          \" \" +\n          style.edit +\n          (props.publisher?.id === appState.currentUser?.id ? \" \" + style.currentUser : \"\") +\n          (isNew ? \" \" + style.new : \"\") +\n          (isDiscussion ? \" \" + style.discussion : \"\") +\n          (isRaw ? \" \" + style.raw : \"\") +\n          (props.className ? \" \" + props.className : \"\")\n        }\n      >\n        {!isMobile && !isRaw && (\n          <div className={style.avatar}>\n            <UserLink user={props.publisher}>\n              <UserAvatar imageSize={40} userAvatar={props.publisher.avatar} />\n            </UserLink>\n          </div>\n        )}\n        <div className={style.bubble + (editorFocused ? \" \" + style.editorFocused : \"\")}>\n          <Header block attached=\"top\" className={style.header}>\n            {!isMobile && !isRaw && <div className={style.triangle} />}\n            {isDiscussion && (\n              <Input\n                className={style.title}\n                placeholder={_(\".placeholder.title\")}\n                value={props.title}\n                onChange={(e, { value }) => {\n                  if (!pendingSubmit) {\n                    setModified(true);\n                    props.onChangeTitle(value);\n                  }\n                }}\n              />\n            )}\n            <div className={style.headerContents}>\n              <Menu attached=\"top\" className={style.editTab} tabular>\n                <Menu.Item active={!preview} onClick={() => setPreview(false)}>\n                  {_(\".tabs.edit\")}\n                </Menu.Item>\n                <Menu.Item active={preview} onClick={() => setPreview(true)}>\n                  {_(\".tabs.preview\")}\n                </Menu.Item>\n              </Menu>\n            </div>\n          </Header>\n          <Segment\n            attached\n            className={style.mainSegment}\n            onKeyPress={onEnterPress(e => !submitDisabled && e.ctrlKey && onSubmit(), false)}\n          >\n            <Form style={preview ? { display: \"none\" } : {}}>\n              <Ref innerRef={setEditor}>\n                <TextArea\n                  as={TextAreaAutoSize}\n                  className={style.editor + \" \" + getMarkdownEditorFontClass()}\n                  maxRows={999}\n                  placeholder={\n                    isUpdate\n                      ? isDiscussion\n                        ? _(\".placeholder.update_discussion\")\n                        : _(\".placeholder.update_reply\")\n                      : isNew\n                      ? isDiscussion\n                        ? _(\".placeholder.add_discussion\")\n                        : _(\".placeholder.add_reply\")\n                      : props.placeholder\n                  }\n                  value={props.content}\n                  onChange={(e, { value }) => {\n                    if (!pendingSubmit) {\n                      setModified(true);\n                      props.onChangeContent(String(value));\n                    }\n                  }}\n                />\n              </Ref>\n            </Form>\n            {preview && (\n              <>\n                <MarkdownContent className={style.preview} content={props.content} noOverflowCutFix />\n              </>\n            )}\n            {!isRaw && (\n              <div className={style.actions}>\n                {isNew ? (\n                  <>\n                    <Button\n                      positive\n                      content={_(isDiscussion ? \".actions.add_discussion\" : \".actions.add_reply\")}\n                      onClick={onSubmit}\n                      disabled={submitDisabled}\n                      loading={pendingSubmit}\n                    />\n                  </>\n                ) : (\n                  <>\n                    <Popup\n                      trigger={<Button content={_(\".actions.cancel\")} onClick={() => !modified && props.onCancel()} />}\n                      content={\n                        <Button\n                          negative\n                          content={_(\".actions.confirm_cancel\")}\n                          onClick={() => (setModified(false), props.onCancel())}\n                        />\n                      }\n                      disabled={!modified}\n                      position=\"bottom center\"\n                      on=\"click\"\n                    />\n                    <Button\n                      positive\n                      content={_(\n                        isDiscussion\n                          ? props.noSubmitPermission\n                            ? \".actions.update_discussion_no_submit_permission\"\n                            : \".actions.update_discussion\"\n                          : \".actions.update_reply\"\n                      )}\n                      onClick={onSubmit}\n                      loading={pendingSubmit}\n                      disabled={submitDisabled}\n                    />\n                  </>\n                )}\n              </div>\n            )}\n          </Segment>\n        </div>\n      </div>\n    );\n  },\n  { forwardRef: true }\n);\n\ninterface ReplyOrLoadMore {\n  type: \"Reply\" | \"LoadMore\" | \"EditReply\";\n  loadMore?: {\n    afterId: number;\n    beforeId: number;\n    count: number;\n    loading?: boolean;\n  };\n  reply?: ApiTypes.DiscussionReplyDto;\n  editReplyContent?: string;\n}\n\ninterface DiscussionViewPageProps {\n  response: ApiTypes.GetDiscussionAndRepliesResponseDto;\n}\n\nlet DiscussionViewPage: React.FC<DiscussionViewPageProps> = props => {\n  const _ = useLocalizer(\"discussion\");\n  const navigation = useNavigationChecked();\n\n  useEffect(() => {\n    appState.enterNewPage(\n      `${getDiscussionDisplayTitle(props.response.discussion.meta.title, _)} - ${_(\".title\")}`,\n      \"discussion\"\n    );\n  }, [appState.locale, props.response]);\n\n  // Load LoadMore's background\n  useEffect(() => {\n    const styleElement = document.createElement(\"style\");\n    styleElement.innerHTML = `.${style.loadMore}::before { mask-image: url(${loadMoreBackground}); -webkit-mask-image: url(${loadMoreBackground}); }`;\n    document.head.appendChild(styleElement);\n    return () => document.head.removeChild(styleElement);\n  });\n\n  const recaptcha = useRecaptcha();\n\n  const [items, setItems] = useState<ReplyOrLoadMore[]>(\n    (() => {\n      const head = props.response.repliesHead.map<ReplyOrLoadMore>(reply => ({\n        type: \"Reply\",\n        reply\n      }));\n\n      const tail = props.response.repliesTail.map<ReplyOrLoadMore>(reply => ({\n        type: \"Reply\",\n        reply\n      }));\n\n      const loadMoreCount = props.response.repliesTotalCount - head.length - tail.length;\n\n      return [\n        ...head,\n        ...(loadMoreCount\n          ? [\n              {\n                type: \"LoadMore\",\n                loadMore: {\n                  afterId: head[head.length - 1].reply.id,\n                  beforeId: tail[0].reply.id,\n                  count: loadMoreCount\n                }\n              } as ReplyOrLoadMore\n            ]\n          : []),\n        ...tail\n      ];\n    })()\n  );\n\n  function mergeLoadMoreItem(\n    afterId: number,\n    callbackOrItem:\n      | Partial<ReplyOrLoadMore[\"loadMore\"]>\n      | ((item: ReplyOrLoadMore[\"loadMore\"]) => Partial<ReplyOrLoadMore[\"loadMore\"]>)\n  ) {\n    setItems(items =>\n      items.map(item =>\n        item.loadMore?.afterId === afterId\n          ? Object.assign({}, item, {\n              loadMore: Object.assign(\n                {},\n                item.loadMore,\n                typeof callbackOrItem === \"function\" ? callbackOrItem(item.loadMore) : callbackOrItem\n              )\n            })\n          : item\n      )\n    );\n  }\n\n  async function onLoadMore(item: ReplyOrLoadMore) {\n    if (item.loadMore.loading) return;\n    mergeLoadMoreItem(item.loadMore.afterId, { loading: true });\n\n    const { requestError, response } = await api.discussion.getDiscussionAndReplies({\n      locale: appState.locale,\n      queryRepliesType: \"IdRange\",\n      discussionId: discussion.meta.id,\n      afterId: item.loadMore.afterId,\n      beforeId: item.loadMore.beforeId,\n      idRangeTakeCount: Math.min(item.loadMore.count, appState.serverPreference.pagination.discussionRepliesMore)\n    });\n\n    if (requestError) toast.error(requestError(_));\n    else if (response.error) toast.error(_(`.errors.${response.error}`));\n    else {\n      setItems(items => {\n        const newItems: ReplyOrLoadMore[] = [];\n        for (const i of items.keys()) {\n          if (items[i].loadMore?.afterId !== item.loadMore.afterId) {\n            newItems.push(items[i]);\n            continue;\n          }\n\n          if (response.repliesCountInRange === 0) continue;\n\n          for (const reply of response.repliesInRange)\n            newItems.push({\n              type: \"Reply\",\n              reply\n            });\n\n          const loadedCount = response.repliesInRange.length;\n          if (response.repliesCountInRange > loadedCount) {\n            newItems.push({\n              type: \"LoadMore\",\n              loadMore: {\n                afterId: response.repliesInRange[loadedCount - 1].id,\n                beforeId: item.loadMore.beforeId,\n                count: response.repliesCountInRange - loadedCount\n              }\n            });\n          }\n        }\n        return newItems;\n      });\n\n      return;\n    }\n\n    mergeLoadMoreItem(item.loadMore.afterId, { loading: false });\n  }\n\n  const [discussion, setDiscussion] = useState(props.response.discussion);\n\n  function mergeDiscussion(callback: (discussion: ApiTypes.DiscussionDto) => Partial<ApiTypes.DiscussionDto>) {\n    setDiscussion(discussion => Object.assign({}, discussion, callback(discussion)));\n  }\n\n  function mergeItem(\n    id: number,\n    callbackOrItem: Partial<ReplyOrLoadMore> | ((item: ReplyOrLoadMore) => Partial<ReplyOrLoadMore>)\n  ) {\n    setItems(items =>\n      items.map(item =>\n        item.reply && item.reply.id === id\n          ? Object.assign({}, item, typeof callbackOrItem === \"function\" ? callbackOrItem(item) : callbackOrItem)\n          : item\n      )\n    );\n  }\n\n  function mergeReplyItem(\n    id: number,\n    callbackOrItem:\n      | Partial<ApiTypes.DiscussionReplyDto>\n      | ((item: ApiTypes.DiscussionReplyDto) => Partial<ApiTypes.DiscussionReplyDto>)\n  ) {\n    mergeItem(id, item =>\n      Object.assign({}, item, {\n        reply: Object.assign(\n          {},\n          item.reply,\n          typeof callbackOrItem === \"function\" ? callbackOrItem(item.reply) : callbackOrItem\n        )\n      })\n    );\n  }\n\n  async function onReaction(type: \"Discussion\" | \"DiscussionReply\", id: number, emoji: string, reaction: boolean) {\n    if (!appState.currentUser) return;\n\n    const { requestError, response } = await api.discussion.toggleReaction({\n      type,\n      id,\n      emoji,\n      reaction\n    });\n\n    if (requestError) toast.error(requestError(_));\n    else if (response.error) toast.error(_(`.errors.${response.error}`));\n    else {\n      function processReactions(reactions: ApiTypes.DiscussionOrReplyReactionsDto) {\n        return {\n          count: Object.assign({}, reactions.count, {\n            [emoji]: (reaction ? 1 : -1) + (Number(reactions.count[emoji]) || 0)\n          }),\n          currentUserReactions: reaction\n            ? reactions.currentUserReactions.concat(emoji)\n            : reactions.currentUserReactions.filter(s => s !== emoji)\n        };\n      }\n\n      if (type === \"Discussion\") {\n        mergeDiscussion(discussion => ({\n          reactions: processReactions(discussion.reactions)\n        }));\n      } else {\n        mergeReplyItem(id, reply => ({\n          reactions: processReactions(reply.reactions)\n        }));\n      }\n    }\n  }\n\n  async function onSetPublic(type: \"Discussion\" | \"DiscussionReply\", id: number, isPublic: boolean) {\n    const { requestError, response } = await (type === \"Discussion\"\n      ? api.discussion.setDiscussionPublic\n      : api.discussion.setDiscussionReplyPublic)({\n      [type === \"Discussion\" ? \"discussionId\" : \"discussionReplyId\"]: id,\n      isPublic\n    } as any);\n\n    if (requestError) toast.error(requestError(_));\n    else if (response.error) toast.error(_(`.errors.${response.error}`));\n    else {\n      if (type === \"Discussion\") {\n        mergeDiscussion(({ meta }) => ({\n          meta: Object.assign({}, meta, { isPublic })\n        }));\n      } else {\n        mergeReplyItem(id, {\n          isPublic\n        });\n      }\n    }\n  }\n\n  async function onDelete(type: \"Discussion\" | \"DiscussionReply\", id: number) {\n    const { requestError, response } = await (type === \"Discussion\"\n      ? api.discussion.deleteDiscussion\n      : api.discussion.deleteDiscussionReply)({\n      [type === \"Discussion\" ? \"discussionId\" : \"discussionReplyId\"]: id\n    } as any);\n\n    if (requestError) toast.error(requestError(_));\n    else if (response.error) toast.error(_(`.errors.${response.error}`));\n    else {\n      if (type === \"Discussion\") {\n        navigation.navigate({\n          pathname: \"/d\",\n          query: discussion.problem\n            ? {\n                problemId: String(discussion.problem.meta.id)\n              }\n            : null\n        });\n      } else {\n        setItems(items => items.filter(item => item.reply?.id !== id));\n      }\n    }\n  }\n\n  const [newReplyContent, setNewReplyContent] = useState(\"\");\n  async function onAddNewReply(content: string) {\n    const { requestError, response } = await api.discussion.createDiscussionReply(\n      {\n        discussionId: discussion.meta.id,\n        content: content\n      },\n      recaptcha(\"CreateDiscussionReply\")\n    );\n\n    if (requestError) toast.error(requestError(_));\n    else if (response.error) toast.error(_(`.errors.${response.error}`));\n    else {\n      setItems(items => [\n        ...items,\n        {\n          type: \"Reply\",\n          reply: response.reply\n        }\n      ]);\n      setNewReplyContent(\"\");\n\n      return true;\n    }\n\n    return false;\n  }\n\n  function onEnterEdit(id: number) {\n    mergeItem(id, item => ({\n      type: \"EditReply\",\n      editReplyContent: item.reply.content\n    }));\n  }\n\n  function onCancelEdit(id: number) {\n    mergeItem(id, () => ({\n      type: \"Reply\"\n    }));\n  }\n\n  async function onUpdateReply(id: number, content: string) {\n    const { requestError, response } = await api.discussion.updateDiscussionReply({\n      discussionReplyId: id,\n      content\n    });\n\n    if (requestError) toast.error(requestError(_));\n    else if (response.error) toast.error(_(`.errors.${response.error}`));\n    else {\n      mergeItem(id, item => ({\n        type: \"Reply\",\n        reply: Object.assign({}, item.reply, { content, editTime: response.editTime })\n      }));\n\n      return true;\n    }\n\n    return false;\n  }\n\n  const refNewReply = useRef<HTMLDivElement>();\n  function onQuote(username: string, text: string) {\n    let content = newReplyContent;\n    if (content) {\n      if (content.endsWith(\"\\n\")) content = content.slice(0, -1);\n      if (content.endsWith(\"\\n\")) content = content.slice(0, -1);\n      content += \"\\n\\n\";\n    }\n    setNewReplyContent(\n      content +\n        `> @${username}:\\n>\\n` +\n        text\n          .trimEnd()\n          .split(\"\\n\")\n          .map(line => `> ${line}`.trimRight())\n          .join(\"\\n\") +\n        \"\\n\\n\"\n    );\n\n    if (refNewReply.current) refNewReply.current.scrollIntoView();\n  }\n\n  const refOpenPermissionManager = useRef<() => Promise<boolean>>();\n  const permissionManager = (\n    <PermissionManager\n      objectDescription={_(\".permission_manager_description\", { id: discussion.meta.id })}\n      permissionsLevelDetails={{\n        1: {\n          title: _(\".permission_level.read\")\n        },\n        2: {\n          title: _(\".permission_level.write\")\n        }\n      }}\n      refOpen={refOpenPermissionManager}\n      onGetInitialPermissions={async () => {\n        const { requestError, response } = await api.discussion.getDiscussionPermissions({\n          id: discussion.meta.id\n        });\n        if (requestError) toast.error(requestError(_));\n        else if (response.error) toast.error(_(`.error.${response.error}`));\n        else {\n          return {\n            owner: discussion.publisher,\n            userPermissions: response.permissions.userPermissions,\n            groupPermissions: response.permissions.groupPermissions,\n            haveSubmitPermission: response.haveManagePermissionsPermission\n          };\n        }\n        return null;\n      }}\n      onSubmitPermissions={async (userPermissions, groupPermissions) => {\n        const { requestError, response } = await api.discussion.setDiscussionPermissions({\n          discussionId: discussion.meta.id,\n          userPermissions: userPermissions as any,\n          groupPermissions: groupPermissions as any\n        });\n        if (requestError) toast.error(requestError(_));\n        else if (response.error === \"NO_SUCH_DISCUSSION\") toast.error(_(\".errors.NO_SUCH_DISCUSSION\"));\n        else if (response.error) return response;\n        return true;\n      }}\n    />\n  );\n\n  const actions = props.response.permissionCreateNewDiscussion && (\n    <Button\n      primary\n      className=\"labeled icon\"\n      icon=\"plus\"\n      content={_(\".add_discussion\")}\n      as={Link}\n      href={getNewDiscussionUrl(discussion.problem?.meta?.id)}\n    />\n  );\n\n  const isMobile = useScreenWidthWithin(0, 768);\n\n  return (\n    <>\n      {permissionManager}\n      {getBreadcrumb(discussion.problem, _)}\n      <div className={style.titleAndActions}>\n        <div className={style.title}>\n          <EmojiRenderer>\n            <Header size=\"large\" content={getDiscussionDisplayTitle(discussion.meta.title, _)} />\n          </EmojiRenderer>\n          <span className={style.replyCount}>\n            {_(\n              discussion.meta.replyCount === 0\n                ? \".reply_count_0\"\n                : discussion.meta.replyCount === 1\n                ? \".reply_count\"\n                : \".reply_count_s\",\n              {\n                replyCount: discussion.meta.replyCount\n              }\n            )}\n          </span>\n        </div>\n        {!isMobile && <div className={style.actions}>{actions}</div>}\n      </div>\n      <div className={style.items + (isMobile ? \" \" + style.mobile : \"\")}>\n        <DiscussionItem\n          type=\"Discussion\"\n          discussion={discussion}\n          content={discussion.content}\n          isPublic={discussion.meta.isPublic}\n          reactions={discussion.reactions}\n          publisher={discussion.publisher}\n          publishTime={new Date(discussion.meta.publishTime)}\n          editTime={discussion.meta.editTime && new Date(discussion.meta.editTime)}\n          permission={discussion.permissions}\n          onReaction={async (emoji: string, reaction: boolean) =>\n            await onReaction(\"Discussion\", discussion.meta.id, emoji, reaction)\n          }\n          onSetPublic={() => onSetPublic(\"Discussion\", discussion.meta.id, !discussion.meta.isPublic)}\n          onManagePermission={() => refOpenPermissionManager.current && refOpenPermissionManager.current()}\n          onEnterEdit={`/d/${discussion.meta.id}/edit`}\n          onDelete={async () => await onDelete(\"Discussion\", discussion.meta.id)}\n        />\n        {items.map((item, i) =>\n          item.type === \"EditReply\" ? (\n            <DiscussionEditor\n              key={item.reply.id}\n              publisher={item.reply.publisher}\n              content={item.editReplyContent}\n              type=\"UpdateReply\"\n              onCancel={() => onCancelEdit(item.reply.id)}\n              onChangeContent={content => mergeItem(item.reply.id, { editReplyContent: content })}\n              onSubmit={content => onUpdateReply(item.reply.id, content)}\n            />\n          ) : item.type === \"Reply\" ? (\n            <DiscussionItem\n              key={item.reply.id}\n              type=\"Reply\"\n              discussion={discussion}\n              content={item.reply.content}\n              isPublic={item.reply.isPublic}\n              reactions={item.reply.reactions}\n              publisher={item.reply.publisher}\n              publishTime={new Date(item.reply.publishTime)}\n              editTime={item.reply.editTime && new Date(item.reply.editTime)}\n              permission={item.reply.permissions}\n              onReaction={async (emoji: string, reaction: boolean) =>\n                await onReaction(\"DiscussionReply\", item.reply.id, emoji, reaction)\n              }\n              onQuote={() => onQuote(item.reply.publisher.username, item.reply.content)}\n              onSetPublic={() => onSetPublic(\"DiscussionReply\", item.reply.id, !item.reply.isPublic)}\n              onEnterEdit={() => onEnterEdit(item.reply.id)}\n              onDelete={async () => await onDelete(\"DiscussionReply\", item.reply.id)}\n            />\n          ) : (\n            <div key={`LoadMore${i}`} className={style.loadMore}>\n              <div>\n                {_(item.loadMore.count === 1 ? \".load_more.hidden_count\" : \".load_more.hidden_count_s\", {\n                  count: item.loadMore.count\n                })}\n                <PseudoLink onClick={() => onLoadMore(item)}>{_(\".load_more.load_more\")}</PseudoLink>\n              </div>\n            </div>\n          )\n        )}\n        {appState.currentUser && (\n          <>\n            {!isMobile && <div className={style.dividerBeforeAddReply} />}\n            <DiscussionEditor\n              ref={refNewReply}\n              publisher={appState.currentUser}\n              content={newReplyContent}\n              type=\"NewReply\"\n              onChangeContent={setNewReplyContent}\n              onSubmit={onAddNewReply}\n            />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nDiscussionViewPage = observer(DiscussionViewPage);\n\nexport default defineRoute(async request => {\n  const discussionId = Number(request.params.id) || 0;\n  const response = await fetchData(discussionId);\n  return <DiscussionViewPage key={uuid()} response={response} />;\n});\n"],"sourceRoot":""}