{"version":3,"sources":["../node_modules/lodash-es/set.js","../node_modules/semantic-ui-react/dist/es/modules/Checkbox/Checkbox.js"],"names":["set","object","path","value","baseSet","Checkbox","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","inputRef","createRef","labelRef","canToggle","_this$props","props","disabled","radio","readOnly","checked","state","computeTabIndex","_this$props2","tabIndex","_isNil","handleClick","e","id","_this$state","indeterminate","isInputClick","_invoke","current","target","isLabelClick","isRootClick","hasId","_extends","isClickFromMouse","handleChange","stopPropagation","setState","handleMouseDown","_this$state2","defaultPrevented","preventDefault","handleMouseUp","_this$state3","setIndeterminate","_set","_inheritsLoose","_proto","prototype","componentDidMount","componentDidUpdate","render","_this$props3","className","label","name","slider","toggle","type","_this$state4","classes","cx","useKeyOnly","unhandled","getUnhandledProps","ElementType","getElementType","_partitionHTMLProps","partitionHTMLProps","htmlProps","htmlInputAttrs","htmlInputProps","rest","labelElement","createHTMLLabel","defaultProps","htmlFor","autoGenerateKey","React","createElement","onClick","onChange","onMouseDown","onMouseUp","Ref","innerRef","Component","handledProps","propTypes","autoControlledProps"],"mappings":"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","file":"static/js/3.479a469f.chunk.js","sourcesContent":["import baseSet from './_baseSet.js';\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nexport default set;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _set from \"lodash-es/set\";\nimport _invoke from \"lodash-es/invoke\";\nimport _get from \"lodash-es/get\";\nimport _isNil from \"lodash-es/isNil\";\nimport { Ref } from '@fluentui/react-component-ref';\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { createRef } from 'react';\nimport { ModernAutoControlledComponent as Component, createHTMLLabel, customPropTypes, getElementType, getUnhandledProps, htmlInputAttrs, partitionHTMLProps, useKeyOnly } from '../../lib';\n\n/**\n * A checkbox allows a user to select a value from a small set of options, often binary.\n * @see Form\n * @see Radio\n */\nvar Checkbox = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Checkbox, _Component);\n\n  function Checkbox() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.inputRef = /*#__PURE__*/createRef();\n    _this.labelRef = /*#__PURE__*/createRef();\n\n    _this.canToggle = function () {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          radio = _this$props.radio,\n          readOnly = _this$props.readOnly;\n      var checked = _this.state.checked;\n      return !disabled && !readOnly && !(radio && checked);\n    };\n\n    _this.computeTabIndex = function () {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      return disabled ? -1 : 0;\n    };\n\n    _this.handleClick = function (e) {\n      var id = _this.props.id;\n      var _this$state = _this.state,\n          checked = _this$state.checked,\n          indeterminate = _this$state.indeterminate;\n\n      var isInputClick = _invoke(_this.inputRef.current, 'contains', e.target);\n\n      var isLabelClick = _invoke(_this.labelRef.current, 'contains', e.target);\n\n      var isRootClick = !isLabelClick && !isInputClick;\n      var hasId = !_isNil(id);\n      var isLabelClickAndForwardedToInput = isLabelClick && hasId; // https://github.com/Semantic-Org/Semantic-UI-React/pull/3351\n\n      if (!isLabelClickAndForwardedToInput) {\n        _invoke(_this.props, 'onClick', e, _extends({}, _this.props, {\n          checked: !checked,\n          indeterminate: !!indeterminate\n        }));\n      }\n\n      if (_this.isClickFromMouse) {\n        _this.isClickFromMouse = false;\n\n        if (isLabelClick && !hasId) {\n          _this.handleChange(e);\n        } // Changes should be triggered for the slider variation\n\n\n        if (isRootClick) {\n          _this.handleChange(e);\n        }\n\n        if (isLabelClick && hasId) {\n          // To prevent two clicks from being fired from the component we have to stop the propagation\n          // from the \"input\" click: https://github.com/Semantic-Org/Semantic-UI-React/issues/3433\n          e.stopPropagation();\n        }\n      }\n    };\n\n    _this.handleChange = function (e) {\n      var checked = _this.state.checked;\n      if (!_this.canToggle()) return;\n\n      _invoke(_this.props, 'onChange', e, _extends({}, _this.props, {\n        checked: !checked,\n        indeterminate: false\n      }));\n\n      _this.setState({\n        checked: !checked,\n        indeterminate: false\n      });\n    };\n\n    _this.handleMouseDown = function (e) {\n      var _this$state2 = _this.state,\n          checked = _this$state2.checked,\n          indeterminate = _this$state2.indeterminate;\n\n      _invoke(_this.props, 'onMouseDown', e, _extends({}, _this.props, {\n        checked: !!checked,\n        indeterminate: !!indeterminate\n      }));\n\n      if (!e.defaultPrevented) {\n        _invoke(_this.inputRef.current, 'focus');\n      } // Heads up!\n      // We need to call \"preventDefault\" to keep element focused.\n\n\n      e.preventDefault();\n    };\n\n    _this.handleMouseUp = function (e) {\n      var _this$state3 = _this.state,\n          checked = _this$state3.checked,\n          indeterminate = _this$state3.indeterminate;\n      _this.isClickFromMouse = true;\n\n      _invoke(_this.props, 'onMouseUp', e, _extends({}, _this.props, {\n        checked: !!checked,\n        indeterminate: !!indeterminate\n      }));\n    };\n\n    _this.setIndeterminate = function () {\n      var indeterminate = _this.state.indeterminate;\n\n      _set(_this.inputRef, 'current.indeterminate', !!indeterminate);\n    };\n\n    return _this;\n  }\n\n  var _proto = Checkbox.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.setIndeterminate();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.setIndeterminate();\n  };\n\n  _proto.render = function render() {\n    var _this$props3 = this.props,\n        className = _this$props3.className,\n        disabled = _this$props3.disabled,\n        label = _this$props3.label,\n        id = _this$props3.id,\n        name = _this$props3.name,\n        radio = _this$props3.radio,\n        readOnly = _this$props3.readOnly,\n        slider = _this$props3.slider,\n        toggle = _this$props3.toggle,\n        type = _this$props3.type,\n        value = _this$props3.value;\n    var _this$state4 = this.state,\n        checked = _this$state4.checked,\n        indeterminate = _this$state4.indeterminate;\n    var classes = cx('ui', useKeyOnly(checked, 'checked'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'), // auto apply fitted class to compact white space when there is no label\n    // https://semantic-ui.com/modules/checkbox.html#fitted\n    useKeyOnly(_isNil(label), 'fitted'), useKeyOnly(radio, 'radio'), useKeyOnly(readOnly, 'read-only'), useKeyOnly(slider, 'slider'), useKeyOnly(toggle, 'toggle'), 'checkbox', className);\n    var unhandled = getUnhandledProps(Checkbox, this.props);\n    var ElementType = getElementType(Checkbox, this.props);\n\n    var _partitionHTMLProps = partitionHTMLProps(unhandled, {\n      htmlProps: htmlInputAttrs\n    }),\n        htmlInputProps = _partitionHTMLProps[0],\n        rest = _partitionHTMLProps[1]; // Heads Up!\n    // Do not remove empty labels, they are required by SUI CSS\n\n\n    var labelElement = createHTMLLabel(label, {\n      defaultProps: {\n        htmlFor: id\n      },\n      autoGenerateKey: false\n    }) || /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: id\n    });\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      onClick: this.handleClick,\n      onChange: this.handleChange,\n      onMouseDown: this.handleMouseDown,\n      onMouseUp: this.handleMouseUp\n    }), /*#__PURE__*/React.createElement(Ref, {\n      innerRef: this.inputRef\n    }, /*#__PURE__*/React.createElement(\"input\", _extends({}, htmlInputProps, {\n      checked: checked,\n      className: \"hidden\",\n      disabled: disabled,\n      id: id,\n      name: name,\n      readOnly: true,\n      tabIndex: this.computeTabIndex(),\n      type: type,\n      value: value\n    }))), /*#__PURE__*/React.createElement(Ref, {\n      innerRef: this.labelRef\n    }, labelElement));\n  };\n\n  return Checkbox;\n}(Component);\n\nCheckbox.handledProps = [\"as\", \"checked\", \"className\", \"defaultChecked\", \"defaultIndeterminate\", \"disabled\", \"fitted\", \"id\", \"indeterminate\", \"label\", \"name\", \"onChange\", \"onClick\", \"onMouseDown\", \"onMouseUp\", \"radio\", \"readOnly\", \"slider\", \"tabIndex\", \"toggle\", \"type\", \"value\"];\nexport { Checkbox as default };\nCheckbox.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Whether or not checkbox is checked. */\n  checked: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** The initial value of checked. */\n  defaultChecked: PropTypes.bool,\n\n  /** Whether or not checkbox is indeterminate. */\n  defaultIndeterminate: PropTypes.bool,\n\n  /** A checkbox can appear disabled and be unable to change states */\n  disabled: PropTypes.bool,\n\n  /** Removes padding for a label. Auto applied when there is no label. */\n  fitted: PropTypes.bool,\n\n  /** A unique identifier. */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Whether or not checkbox is indeterminate. */\n  indeterminate: PropTypes.bool,\n\n  /** The text of the associated label element. */\n  label: customPropTypes.itemShorthand,\n\n  /** The HTML input name. */\n  name: PropTypes.string,\n\n  /**\n   * Called when the user attempts to change the checked state.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed checked/indeterminate state.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Called when the checkbox or label is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Called when the user presses down on the mouse.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * Called when the user releases the mouse.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onMouseUp: PropTypes.func,\n\n  /** Format as a radio element. This means it is an exclusive option. */\n  radio: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['slider', 'toggle'])]),\n\n  /** A checkbox can be read-only and unable to change states. */\n  readOnly: PropTypes.bool,\n\n  /** Format to emphasize the current selection state. */\n  slider: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'toggle'])]),\n\n  /** A checkbox can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Format to show an on or off choice. */\n  toggle: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'slider'])]),\n\n  /** HTML input type, either checkbox or radio. */\n  type: PropTypes.oneOf(['checkbox', 'radio']),\n\n  /** The HTML input value. */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n} : {};\nCheckbox.defaultProps = {\n  type: 'checkbox'\n};\nCheckbox.autoControlledProps = ['checked', 'indeterminate'];"],"sourceRoot":""}