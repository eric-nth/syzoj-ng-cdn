{"version":3,"sources":["components/Pagination.tsx"],"names":["PatchedUIPagination","props","originalHandleItemOverrides","active","type","value","originalOverrider","isEllipsisItem","predefinedProps","as","Link","href","undefined","pageUrl","onClick","UIPagination","Pagination","observer","siblingRange","size","totalPages","Math","ceil","totalCount","itemsPerPage","screenWidthLessThan376","useScreenWidthWithin","screenWidthLessThan425","screenWidthLessThan540","screenWidthLessThan640","screenWidthLessThan768","screenWidthLessThan880","screenWidthLessThan1024","className","style","pagination","activePage","currentPage","ellipsisItem","content","disabled","icon","firstItem","lastItem","prevItem","name","nextItem","SimplePagination","wrapper","simple","hasPrevPage","hasNextPage","page","Number"],"mappings":"kSAYMA,E,kDACJ,WAAYC,GAAkC,IAAD,sBAG3C,IAAMC,GAFN,cAAMD,IAEwC,oBAHH,OAI3C,sBAA8B,SAACE,EAAiBC,EAAcC,GAC5D,IAAMC,EAAoBJ,EAA4BC,EAAQC,EAAMC,GAC9DE,EAA0B,iBAATH,EACvB,OAAO,SAACI,GAAD,mBAAC,eACHF,EAAkBE,IADhB,IAELC,GAAIF,EAAiB,OAASG,IAC9BC,KAAMJ,OAAiBK,EAAY,EAAKX,MAAMY,QAAQR,GACtDS,aAASF,MAX8B,E,UADbG,KAyBrBC,EAAwCC,aAAS,SAAAhB,GAC5D,IAUIiB,EAAsBC,EAVpBC,EAAaC,KAAKC,KAAKrB,EAAMsB,WAAatB,EAAMuB,cAEhDC,EAAyBC,YAAqB,EAAG,KACjDC,EAAyBD,YAAqB,EAAG,KACjDE,EAAyBF,YAAqB,EAAG,KACjDG,EAAyBH,YAAqB,EAAG,KACjDI,EAAyBJ,YAAqB,EAAG,KACjDK,EAAyBL,YAAqB,EAAG,KACjDM,EAA0BN,YAAqB,EAAG,MAsCxD,OAnCID,GACFP,EAAe,EACfC,EAAO,SAEPD,EADSS,EACM,EACNC,EACM,EACNC,EACM,EACNC,EACM,EACNC,EACM,EACNC,EACM,EAEA,EAIf,cAAChC,EAAD,CACEiC,UAAWC,IAAMC,WACjBC,WAAYnC,EAAMoC,YAClBlB,KAAMA,EACND,aAAcA,EACdoB,aAAc,CAAEC,QAAS,MAAOC,UAAU,EAAMC,MAAM,GACtDC,UAAW,KACXC,SAAU,KACVC,SAAU,CAAEL,QAAS,cAAC,IAAD,CAAMM,KAAK,iBAAmBJ,MAAM,EAAMD,SAAgC,IAAtBvC,EAAMoC,aAC/ES,SAAU,CAAEP,QAAS,cAAC,IAAD,CAAMM,KAAK,kBAAoBJ,MAAM,EAAMD,SAAUvC,EAAMoC,cAAgBjB,GAChGA,WAAYA,EACZP,QAASZ,EAAMY,aAcRkC,EAAoD9B,aAAS,SAAAhB,GACxE,OACE,qBAAKgC,UAAWC,IAAMc,SAAW/C,EAAMgC,UAAY,IAAMhC,EAAMgC,UAAY,IAA3E,SACE,cAACjC,EAAD,CACEiC,UAAWC,IAAMC,WAAa,IAAMD,IAAMe,OAC1Cb,WAAY,EACZlB,aAAc,EACdwB,UAAW,KACXC,SAAU,KACVC,SAAU,CAAEL,QAAS,cAAC,IAAD,CAAMM,KAAK,iBAAmBJ,MAAM,EAAMD,UAAWvC,EAAMiD,aAChFJ,SAAU,CAAEP,QAAS,cAAC,IAAD,CAAMM,KAAK,kBAAoBJ,MAAM,EAAMD,UAAWvC,EAAMkD,aACjF/B,WAAY,EACZP,QAAS,SAACuC,GAAD,OAAmBnD,EAAMY,QAASwC,OAAOD,GAAQ","file":"static/js/28.a9eb1071.chunk.js","sourcesContent":["import React from \"react\";\nimport { Pagination as UIPagination, PaginationProps as UIPaginationProps, Icon } from \"semantic-ui-react\";\nimport { observer } from \"mobx-react\";\nimport { URLDescriptor } from \"navi\";\n\nimport style from \"./Pagination.module.less\";\nimport { Link, useScreenWidthWithin } from \"@/utils/hooks\";\n\ninterface PatchedUIPaginationProps extends UIPaginationProps {\n  pageUrl: (newPage: number) => Partial<URLDescriptor>;\n}\n\nclass PatchedUIPagination extends UIPagination {\n  constructor(props: PatchedUIPaginationProps) {\n    super(props);\n\n    const originalHandleItemOverrides: Function = this[\"handleItemOverrides\"];\n    this[\"handleItemOverrides\"] = (active: boolean, type: string, value: number) => {\n      const originalOverrider = originalHandleItemOverrides(active, type, value);\n      const isEllipsisItem = type === \"ellipsisItem\";\n      return (predefinedProps: unknown) => ({\n        ...originalOverrider(predefinedProps),\n        as: isEllipsisItem ? \"span\" : Link,\n        href: isEllipsisItem ? undefined : this.props.pageUrl(value),\n        onClick: undefined\n      });\n    };\n  }\n}\n\ninterface PaginationProps {\n  totalCount: number;\n  itemsPerPage: number;\n  currentPage: number;\n  pageUrl: (newPage: number) => Partial<URLDescriptor>;\n}\n\nexport const Pagination: React.FC<PaginationProps> = observer(props => {\n  const totalPages = Math.ceil(props.totalCount / props.itemsPerPage);\n\n  const screenWidthLessThan376 = useScreenWidthWithin(0, 376);\n  const screenWidthLessThan425 = useScreenWidthWithin(0, 425);\n  const screenWidthLessThan540 = useScreenWidthWithin(0, 540);\n  const screenWidthLessThan640 = useScreenWidthWithin(0, 640);\n  const screenWidthLessThan768 = useScreenWidthWithin(0, 768);\n  const screenWidthLessThan880 = useScreenWidthWithin(0, 880);\n  const screenWidthLessThan1024 = useScreenWidthWithin(0, 1024);\n\n  let siblingRange: number, size: string;\n  if (screenWidthLessThan376) {\n    siblingRange = 0;\n    size = \"small\";\n  } else if (screenWidthLessThan425) {\n    siblingRange = 0;\n  } else if (screenWidthLessThan540) {\n    siblingRange = 1;\n  } else if (screenWidthLessThan640) {\n    siblingRange = 2;\n  } else if (screenWidthLessThan768) {\n    siblingRange = 3;\n  } else if (screenWidthLessThan880) {\n    siblingRange = 4;\n  } else if (screenWidthLessThan1024) {\n    siblingRange = 5;\n  } else {\n    siblingRange = 6;\n  }\n\n  const element = (\n    <PatchedUIPagination\n      className={style.pagination}\n      activePage={props.currentPage}\n      size={size}\n      siblingRange={siblingRange}\n      ellipsisItem={{ content: \"...\", disabled: true, icon: true }}\n      firstItem={null}\n      lastItem={null}\n      prevItem={{ content: <Icon name=\"chevron left\" />, icon: true, disabled: props.currentPage === 1 }}\n      nextItem={{ content: <Icon name=\"chevron right\" />, icon: true, disabled: props.currentPage === totalPages }}\n      totalPages={totalPages}\n      pageUrl={props.pageUrl}\n    />\n  );\n\n  return element;\n});\n\ninterface SimplePaginationProps {\n  className?: string;\n  hasPrevPage: boolean;\n  hasNextPage: boolean;\n  pageUrl: (direction: -1 | 1) => Partial<URLDescriptor>;\n}\n\nexport const SimplePagination: React.FC<SimplePaginationProps> = observer(props => {\n  return (\n    <div className={style.wrapper + (props.className ? \" \" + props.className : \"\")}>\n      <PatchedUIPagination\n        className={style.pagination + \" \" + style.simple}\n        activePage={2}\n        siblingRange={0}\n        firstItem={null}\n        lastItem={null}\n        prevItem={{ content: <Icon name=\"chevron left\" />, icon: true, disabled: !props.hasPrevPage }}\n        nextItem={{ content: <Icon name=\"chevron right\" />, icon: true, disabled: !props.hasNextPage }}\n        totalPages={3}\n        pageUrl={(page: unknown) => props.pageUrl((Number(page) - 2) as 1 | -1)}\n      />\n    </div>\n  );\n});\n"],"sourceRoot":""}