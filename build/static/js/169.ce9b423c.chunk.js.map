{"version":3,"sources":["pages/user/edit/ProfileView.tsx"],"names":["AvatarType","fetchData","username","a","api","user","getUserProfile","requestError","response","RouteError","showRefresh","showBack","error","makeToBeLocalizedText","View","observer","props","_","useLocalizer","useState","meta","titleUsername","setTitleUsername","useEffect","appState","enterNewPage","locale","useConfirmNavigation","setModified","setUsername","email","setEmail","publicEmail","setPublicEmail","nickname","setNickname","bio","setBio","information","organization","setOrganization","location","setLocation","url","setUrl","telegram","setTelegram","qq","setQq","github","setGithub","refUsername","useRef","refEmail","refUrl","useFieldCheckSimple","isURL","checkUrl","urlInvalid","avatarTypeFromServer","avatarInfo","substr","indexOf","Object","values","includes","Gravatar","avatarType","setAvatarType","slice","avatarKey","setAvatarKey","avatarKeyValue","setAvatarKeyValue","changeAvatarType","type","resetAvatarKey","GitHub","QQ","value","setAvatarError","applyAvatarKey","avatar","key","md5","trim","toLowerCase","getAvatar","avatarError","useAsyncCallbackPending","isValidUsername","toast","current","focus","isValidEmail","updateUserProfile","userId","id","success","currentUser","onChangeUsername","pending","onSubmit","hasPrivilege","isAdmin","currentUserPrivileges","allowUserChangeUsername","serverPreference","security","className","style","profileContainer","profileMain","header","size","content","innerRef","readOnly","fluid","onChange","e","length","notes","checkbox","checked","label","textarea","placeholder","onBlur","name","href","target","rel","submit","loading","primary","onClick","profileAvatar","userAvatar","imageSize","onError","avatarOptionList","Item","avatarInput","onKeyPress","onEnterPress"],"mappings":"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","file":"static/js/169.ce9b423c.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Icon, Form, Header, Input, Checkbox, TextArea, Button, List, Radio, Ref } from \"semantic-ui-react\";\nimport { observer } from \"mobx-react\";\nimport { isURL } from \"class-validator\";\nimport md5 from \"blueimp-md5\";\n\nimport style from \"./UserEdit.module.less\";\n\nimport api from \"@/api\";\nimport { appState } from \"@/appState\";\nimport toast from \"@/utils/toast\";\nimport { useLocalizer, useFieldCheckSimple, useAsyncCallbackPending, useConfirmNavigation } from \"@/utils/hooks\";\nimport UserAvatar from \"@/components/UserAvatar\";\nimport { RouteError } from \"@/AppRouter\";\nimport { onEnterPress } from \"@/utils/onEnterPress\";\nimport { makeToBeLocalizedText } from \"@/locales\";\nimport { isValidEmail, isValidUsername } from \"@/utils/validators\";\n\nexport async function fetchData(username: string) {\n  const { requestError, response } = await api.user.getUserProfile({ username });\n  if (requestError) throw new RouteError(requestError, { showRefresh: true, showBack: true });\n  else if (response.error) throw new RouteError(makeToBeLocalizedText(`user_edit.errors.${response.error}`));\n\n  return response;\n}\n\nenum AvatarType {\n  Gravatar = \"gravatar\",\n  GitHub = \"github\",\n  QQ = \"qq\"\n}\n\ninterface ProfileViewProps {\n  meta: ApiTypes.UserMetaDto;\n  publicEmail: boolean;\n  avatarInfo: string;\n  information: ApiTypes.UserInformationDto;\n  onChangeUsername: (newUsername: string) => void;\n}\n\nconst ProfileView: React.FC<ProfileViewProps> = props => {\n  const _ = useLocalizer(\"user_edit.profile\");\n\n  const [titleUsername, setTitleUsername] = useState(props.meta.username);\n\n  useEffect(() => {\n    appState.enterNewPage(`${_(`.title`)} - ${titleUsername}`, null, false);\n  }, [appState.locale, titleUsername]);\n\n  const [modified, setModified] = useConfirmNavigation();\n\n  const [username, setUsername] = useState(props.meta.username);\n  const [email, setEmail] = useState(props.meta.email);\n  const [publicEmail, setPublicEmail] = useState(props.publicEmail);\n  const [nickname, setNickname] = useState(props.meta.nickname);\n  const [bio, setBio] = useState(props.meta.bio);\n\n  const [organization, setOrganization] = useState(props.information.organization);\n  const [location, setLocation] = useState(props.information.location);\n  const [url, setUrl] = useState(props.information.url);\n  const [telegram, setTelegram] = useState(props.information.telegram);\n  const [qq, setQq] = useState(props.information.qq);\n  const [github, setGithub] = useState(props.information.github);\n\n  const refUsername = useRef<HTMLInputElement>();\n  const refEmail = useRef<HTMLInputElement>();\n  const refUrl = useRef<HTMLInputElement>();\n  const [checkUrl, urlInvalid] = useFieldCheckSimple(url, url => !url || isURL(url));\n\n  const avatarTypeFromServer = props.avatarInfo.substr(0, props.avatarInfo.indexOf(\":\")) as AvatarType;\n\n  const [avatarType, setAvatarType] = useState(\n    Object.values(AvatarType).includes(avatarTypeFromServer) ? avatarTypeFromServer : AvatarType.Gravatar\n  );\n  const [avatarKey, setAvatarKey] = useState(props.avatarInfo.slice(props.avatarInfo.indexOf(\":\") + 1));\n\n  // Don't let the avatar reload too quick, use another state to store the input's value\n  const [avatarKeyValue, setAvatarKeyValue] = useState(avatarKey);\n\n  function changeAvatarType(type: AvatarType) {\n    setAvatarType(type);\n    switch (type) {\n      case AvatarType.Gravatar:\n        resetAvatarKey(\"\");\n        break;\n      case AvatarType.GitHub:\n        resetAvatarKey(github);\n        break;\n      case AvatarType.QQ:\n        resetAvatarKey(qq);\n        break;\n    }\n  }\n\n  function resetAvatarKey(value: string) {\n    if (value !== avatarKey) {\n      setAvatarKey(value);\n      setAvatarKeyValue(value);\n      setAvatarError(false);\n    }\n  }\n\n  function applyAvatarKey() {\n    if (avatarKeyValue !== avatarKey) {\n      setAvatarKey(avatarKeyValue);\n      setAvatarError(false);\n    }\n  }\n\n  function getAvatar(): ApiTypes.UserAvatarDto {\n    switch (avatarType) {\n      case AvatarType.GitHub:\n      case AvatarType.QQ:\n        return {\n          type: avatarType,\n          key: avatarKey\n        };\n      case AvatarType.Gravatar:\n      default:\n        return {\n          type: AvatarType.Gravatar,\n          key: md5((avatarKey || email).trim().toLowerCase())\n        };\n    }\n  }\n  const avatar = getAvatar();\n\n  const [avatarError, setAvatarError] = useState(false);\n\n  const [pending, onSubmit] = useAsyncCallbackPending(async () => {\n    if (!isValidUsername(username)) {\n      toast.error(_(\".error_invalid_username\"));\n      refUsername.current.focus();\n    } else if (!isValidEmail(email)) {\n      toast.error(_(\".error_invalid_email\"));\n      refEmail.current.focus();\n    } else if (urlInvalid) {\n      toast.error(_(\".error_invalid_url\"));\n      refUrl.current.focus();\n    } else {\n      const { requestError, response } = await api.user.updateUserProfile({\n        userId: props.meta.id,\n        username,\n        email,\n        publicEmail,\n        avatarInfo: avatarType + \":\" + avatarKeyValue,\n        nickname,\n        bio,\n        information: {\n          organization,\n          location,\n          url,\n          telegram,\n          qq,\n          github\n        }\n      });\n\n      if (requestError) toast.error(requestError(_));\n      else if (response.error) toast.error(_(`user_edit.errors.${response.error}`));\n      else {\n        setModified(false);\n\n        toast.success(_(\"user_edit.preference.success\"));\n        setTitleUsername(username);\n\n        if (appState.currentUser.id === props.meta.id) {\n          appState.currentUser.username = username;\n          appState.currentUser.email = email;\n          appState.currentUser.bio = bio;\n        }\n\n        if (username !== props.meta.username) props.onChangeUsername(username);\n      }\n    }\n  });\n\n  const hasPrivilege = appState.currentUser.isAdmin || appState.currentUserPrivileges.includes(\"ManageUser\");\n  const allowUserChangeUsername = appState.serverPreference.security.allowUserChangeUsername;\n\n  return (\n    <div className={style.profileContainer}>\n      <div className={style.profileMain}>\n        <Header className={style.header} size=\"tiny\" content={_(\".username\")} />\n        <Ref innerRef={refUsername}>\n          <Input\n            readOnly={!(hasPrivilege || allowUserChangeUsername)}\n            fluid\n            value={username}\n            onChange={(e, { value }) => !pending && value.length < 24 && (setModified(true), setUsername(value))}\n          />\n        </Ref>\n        {!(allowUserChangeUsername && props.meta.id === appState.currentUser.id) && (\n          <div className={style.notes}>{_(!hasPrivilege ? \".username_notes\" : \".username_notes_admin\")}</div>\n        )}\n        <Header className={style.header} size=\"tiny\" content={_(\".email\")} />\n        <Ref innerRef={refEmail}>\n          <Input\n            readOnly={!hasPrivilege}\n            fluid\n            value={email}\n            onChange={(e, { value }) => !pending && (setModified(true), setEmail(value))}\n          />\n        </Ref>\n        <Checkbox\n          className={style.checkbox}\n          checked={publicEmail}\n          label={_(\".public_email\")}\n          onChange={(e, { checked }) => !pending && (setModified(true), setPublicEmail(checked))}\n        />\n        <div className={style.notes}>{_(!hasPrivilege ? \".email_notes\" : \".email_notes_admin\")}</div>\n        <Header className={style.header} size=\"tiny\" content={_(\".nickname\")} />\n        <Input\n          fluid\n          value={nickname}\n          onChange={(e, { value }) => !pending && value.length < 24 && (setModified(true), setNickname(value))}\n        />\n        <Header className={style.header} size=\"tiny\" content={_(\".bio\")} />\n        <Form>\n          <TextArea\n            className={style.textarea}\n            placeholder={_(\".bio_placeholder\")}\n            value={bio}\n            onChange={(e, { value }) =>\n              (value as string).length <= 160 && !pending && (setModified(true), setBio(value as string))\n            }\n          />\n        </Form>\n        {bio.length >= 160 - 10 && <div className={style.notes}>{bio.length}/160</div>}\n        <Header className={style.header} size=\"tiny\" content={_(\".organization\")} />\n        <Input\n          fluid\n          placeholder={_(\".organization_placeholder\")}\n          value={organization}\n          onChange={(e, { value }) => value.length < 80 && !pending && (setModified(true), setOrganization(value))}\n        />\n        <Header className={style.header} size=\"tiny\" content={_(\".location\")} />\n        <Input\n          fluid\n          placeholder={_(\".location_placeholder\")}\n          value={location}\n          onChange={(e, { value }) => value.length < 80 && !pending && (setModified(true), setLocation(value))}\n        />\n        <Header className={style.header} size=\"tiny\" content={_(\".url\")} />\n        <Ref innerRef={refUrl}>\n          <Input\n            fluid\n            placeholder={_(\".url_placeholder\")}\n            value={url}\n            error={urlInvalid}\n            onBlur={checkUrl}\n            onChange={(e, { value }) => value.length < 80 && !pending && (setModified(true), setUrl(value.trim()))}\n          />\n        </Ref>\n        <Header className={style.header} size=\"tiny\" content={_(\".qq\")} />\n        <Input\n          fluid\n          placeholder={_(\".qq_placeholder\")}\n          value={qq}\n          onChange={(e, { value }) => value.length < 30 && !pending && (setModified(true), setQq(value.trim()))}\n        />\n        {qq && (\n          <div className={style.notes}>\n            <Icon name=\"qq\" />\n            {_(\".qq_notes\")}\n            <a href={`https://wpa.qq.com/msgrd?V=3&Uin=${qq}`} target=\"_blank\" rel=\"noreferrer noopener\">\n              https://wpa.qq.com/msgrd?V=3&Uin={qq}\n            </a>\n          </div>\n        )}\n        <Header className={style.header} size=\"tiny\" content={_(\".telegram\")} />\n        <Input\n          fluid\n          placeholder={_(\".telegram_placeholder\")}\n          value={telegram}\n          onChange={(e, { value }) => value.length < 30 && !pending && (setModified(true), setTelegram(value.trim()))}\n        />\n        {telegram && (\n          <div className={style.notes}>\n            <Icon name=\"telegram\" />\n            {_(\".telegram_notes\")}\n            <a href={`https://t.me/${telegram}`} target=\"_blank\" rel=\"noreferrer noopener\">\n              https://t.me/{telegram}\n            </a>\n          </div>\n        )}\n        <Header className={style.header} size=\"tiny\" content={_(\".github\")} />\n        <Input\n          fluid\n          placeholder={_(\".github_placeholder\")}\n          value={github}\n          onChange={(e, { value }) => value.length < 30 && !pending && (setModified(true), setGithub(value.trim()))}\n        />\n        {github && (\n          <div className={style.notes}>\n            <Icon name=\"github\" />\n            {_(\".github_notes\")}\n            <a href={`https://github.com/${github}`} target=\"_blank\" rel=\"noreferrer noopener\">\n              https://github.com/{github}\n            </a>\n          </div>\n        )}\n        <Button className={style.submit} loading={pending} primary content={_(\".submit\")} onClick={onSubmit} />\n      </div>\n      <div className={style.profileAvatar}>\n        <Header className={style.header} size=\"tiny\" content={_(\".avatar.header\")} />\n        <UserAvatar\n          userAvatar={avatar}\n          placeholder={!avatar.key}\n          imageSize={480}\n          className={style.avatar}\n          onError={() => setAvatarError(true)}\n        />\n        <List className={style.avatarOptionList}>\n          <List.Item>\n            <Radio\n              checked={avatarType === AvatarType.Gravatar}\n              onChange={(e, { checked }) => checked && (setModified(true), changeAvatarType(AvatarType.Gravatar))}\n              label={_(\".avatar.gravatar.name\")}\n            />\n          </List.Item>\n          <List.Item>\n            <Radio\n              checked={avatarType === AvatarType.QQ}\n              onChange={(e, { checked }) => checked && (setModified(true), changeAvatarType(AvatarType.QQ))}\n              label={_(\".avatar.qq.name\")}\n            />\n          </List.Item>\n          <List.Item>\n            <Radio\n              checked={avatarType === AvatarType.GitHub}\n              onChange={(e, { checked }) => checked && (setModified(true), changeAvatarType(AvatarType.GitHub))}\n              label={_(\".avatar.github.name\")}\n            />\n          </List.Item>\n        </List>\n        <Input\n          className={style.avatarInput}\n          fluid\n          placeholder={\n            avatarType === AvatarType.Gravatar\n              ? email\n              : avatarType === AvatarType.GitHub\n              ? _(\".avatar.github.placeholder\")\n              : _(\".avatar.qq.placeholder\")\n          }\n          error={avatarError}\n          value={avatarKeyValue}\n          onChange={(e, { value }) => value.length <= 40 && (setModified(true), setAvatarKeyValue(value.trim()))}\n          onBlur={applyAvatarKey}\n          onKeyPress={onEnterPress(() => applyAvatarKey())}\n        />\n        {avatarError && (\n          <div className={style.notes}>\n            <Icon name=\"warning sign\" />\n            {_(\".avatar.error\")}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport const View = observer(ProfileView);\n"],"sourceRoot":""}