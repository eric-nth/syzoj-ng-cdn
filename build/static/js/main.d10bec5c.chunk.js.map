{"version":3,"sources":["components/EmojiRenderer.tsx","misc/fonts/index.ts","utils/formatDateTime.tsx","api-generated/modules/user.ts","api-generated/modules/auth.ts","api-generated/modules/submission.ts","api-generated/modules/problem.ts","api-generated/modules/migration.ts","api-generated/modules/group.ts","api-generated/modules/judge-client.ts","api-generated/modules/discussion.ts","api-generated/modules/homepage.ts","api-generated/index.ts","api.ts","utils/toast.ts","components/GlobalProgressBar.tsx","layouts/AppLayout.tsx","pages/error/ErrorPage.tsx","AppRouter.tsx","misc/analytics.js","initApp.ts","utils/hooks/useLocalizer.ts","utils/hooks/useFieldCheck.tsx","utils/hooks/useFieldCheckSimple.ts","utils/hooks/useDialog.tsx","utils/hooks/useLoginOrRegisterNavigation.ts","utils/hooks/useSocket.ts","utils/hooks/useBoundingRect.ts","utils/hooks/useScreenWidthWithin.ts","utils/hooks/useAsyncCallbackPending.ts","utils/hooks/useFocusWithin.ts","utils/hooks/useRecaptcha.tsx","utils/hooks/useNavigation.ts","misc/fonts/ui-font-selectors.js","index.ts","interfaces/Locale.ts","locales/index.ts","utils/getRoute.ts","App.tsx","index.tsx","themes/pure.ts","themes/far.ts","themes/index.ts","locales/meta.ts","utils/CodeHighlighter.ts","appState.ts"],"names":["getTwemojiOptions","inline","base","size","ext","className","style","emoji","callback","icon","options","variant","EmojiRenderer","props","refElement","useRef","useEffect","current","twemoji","parse","innerRef","children","uiFontSelectors","_uiFontSelectors","availableCodeFonts","availableContentFonts","generateFontFamily","preferredFont","locale","fallbackFont","systemSans","systemSerif","systemFonts","normalizedFontName","toLowerCase","indexOf","fontList","Locale","ja_JP","zh_CN","en_US","getFallbackFontList","includes","unshift","map","font","JSON","stringify","join","updateFontCss","id","css","document","createElement","innerHTML","oldStyle","getElementById","parentNode","replaceChild","head","appendChild","updateCodeFontCss","fontPreference","appState","userPreference","codeFontFace","codeFontSize","codeLineHeight","codeFontLigatures","generateCodeFontEditorOptions","fontSize","fontFamily","lineHeight","fontLigatures","updateContentFontCss","contentFontFace","updateUiFontCss","getMarkdownEditorFontClass","markdownEditorFont","formatDateTime","date","dateOnly","Date","month","getMonth","toString","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","length","withoutYearDateOnly","withoutYear","withYearDateOnly","getFullYear","searchUser","createGetApi","getUserMeta","createPostApi","setUserPrivileges","updateUserProfile","getUserList","getUserDetail","getUserProfile","getUserPreference","updateUserPreference","getUserSecuritySettings","queryAuditLogs","updateUserPassword","updateUserSelfEmail","getSessionInfo","login","logout","checkAvailability","sendEmailVerificationCode","register","resetPassword","listUserSessions","revokeUserSession","submit","querySubmission","getSubmissionDetail","downloadSubmissionFile","querySubmissionStatistics","rejudgeSubmission","cancelSubmission","setSubmissionPublic","deleteSubmission","queryProblemSet","createProblem","updateStatement","getProblem","setProblemPermissions","setProblemDisplayId","setProblemPublic","addProblemFile","removeProblemFiles","downloadProblemFiles","renameProblemFile","updateProblemJudgeInfo","getAllProblemTags","createProblemTag","getProblemTagDetail","updateProblemTag","deleteProblemTag","getAllProblemTagsOfAllLocales","deleteProblem","changeProblemType","migrateUser","queryUserMigrationInfo","getGroupMeta","searchGroup","createGroup","deleteGroup","renameGroup","addMember","removeMember","setGroupAdmin","getGroupList","getGroupMemberList","addJudgeClient","deleteJudgeClient","resetJudgeClientKey","listJudgeClients","createDiscussion","createDiscussionReply","toggleReaction","queryDiscussions","getDiscussionPermissions","getDiscussionAndReplies","updateDiscussion","updateDiscussionReply","deleteDiscussion","deleteDiscussionReply","setDiscussionPublic","setDiscussionReplyPublic","setDiscussionPermissions","getHomepage","getHomepageSettings","updateHomepageSettings","user","ImportedUserApi","auth","ImportedAuthApi","submission","ImportedSubmissionApi","problem","ImportedProblemApi","migration","ImportedMigrationApi","group","ImportedGroupApi","judgeClient","ImportedJudgeClientApi","discussion","ImportedDiscussionApi","homepage","ImportedHomepageApi","request","path","method","params","body","recaptchaToken","a","axios","window","apiEndpoint","data","headers","Authorization","token","validateStatus","response","console","error","requestError","makeToBeLocalizedText","text","message","status","log","e","statusText","api","recaptcha","requestBody","recaptchaTokenPromise","requestQuery","noty","type","timeout","Noty","layout","theme","show","setTimeout","close","success","info","warning","GlobalProgressBar","isAnimating","useNProgress","animationDuration","incrementDuration","isFinished","progress","opacity","pointerEvents","transition","background","height","left","marginLeft","position","top","width","zIndex","boxShadow","display","right","transform","AppLayout","navigation","useNavigationChecked","loadingRoute","useLoadingRoute","_","useLocalizer","useState","sidebarOpen","setSidebarOpen","onLogoutClick","toast","location","reload","documentElement","classList","contains","toggle","subscription","subscribe","route","unsubscribe","onLoginOrRegisterClick","useLoginOrRegisterNavigation","navButtons","home","url","problem_set","serverPreference","misc","legacyContestsEntryUrl","contests","submissions","members","navMenuItems","Object","keys","name","Menu","Item","as","Link","href","active","activeNavButton","Icon","loginAndRegisterButtons","Button","loginAndRegisterButton","onClick","primary","userMenu","Dropdown","currentUser","username","pathname","query","submitter","ownerId","publisherId","currentUserJoinedGroupsCount","Divider","logo","logoItem","content","appLogoThemed","siteName","getFooter","Segment","vertical","Container","textAlign","footerVersion","title","appVersion","hash","serverVersion","footerIcons","languageSwitchMenu","localeMeta","localLocale","refresh","flag","value","selected","target","rel","userDropdown","simple","item","open","topBarItemsForWideScreen","userContainer","topBarItemsForNarrowScreen","wide","useScreenWidthWithin","Infinity","sidebarOpenStatusClassName","borderless","fixed","menu","mainMenuContainer","footer","real","mainUiContainer","placeholder","sidebarDimmer","Sidebar","sidebarMenu","animation","direction","visible","Group","fluid","observer","enterNewPage","uncaughtError","Message","Content","Header","stack","isToBeLocalizedText","showBack","onRecover","goBack","showRefresh","RouteError","defineRoute","getViewFunction","result","view","Error","String","ErrorBoundary","state","hasError","this","setState","React","Component","legacyRoutes","paths","redirectLegacyUrls","routes","useMemo","withView","localeHyphen","replace","loadLocaleData","localeData","elements","messages","render","security","recaptchaEnabled","reCaptchaKey","recaptchaKey","language","recaptchaLanguageCode","useRecaptchaNet","mount","getRoute","lazy","redirect","fallback","getScript","script","src","async","loadGoogleAnalytics","googleAnalyticsId","startsWith","dataLayer","gtag","push","arguments","ga","q","l","waitForSessionInitialization","sessionInfo","Promise","resolve","getSessionInfoCallback","userMeta","joinedGroupsCount","currentUserPrivileges","userPrivileges","initApp","all","initAppStateStore","refreshSession","defaultModuleName","intl","useIntl","assign","messageId","paramaters","unescapeLocalizedMessage","formatMessage","useFieldCheck","fieldValue","alwaysCheck","debounce","syncCheck","asyncCheck","fieldChecking","setFieldChecking","fieldCheckStatus","setFieldCheckStatus","fieldValueLastChecked","setFieldValueLastChecked","fieldValueRef","fieldCheckStatusRef","onDoneRef","checkField","forceCheck","check","syncCheckResult","asyncCheckResult","checkedValue","debouncedCheckField","useDebouncedCallback","forceRecheck","promise","res","marginBottom","useFieldCheckSimple","checkResultRef","checkResultState","setCheckResultState","useDialog","header","actions","setOpen","element","Modal","Actions","isOpen","bindLoginOrRegister","currentRoute","useCurrentRoute","loginOrRegister","loginRedirectUrl","search","navigate","useSocket","namespace","onInit","onConnect","useOrNot","refSocket","SocketIO","transports","parser","SocketIOParser","on","err","reason","attempt","disconnect","useBoundingRect","property","setElement","setValue","update","rect","getBoundingClientRect","resizeSensor","ResizeSensor","detach","r","refMediaQueryList","Number","isFinite","matchMedia","matches","setResult","onChange","addEventListener","removeEventListener","addListener","removeListener","useAsyncCallbackPending","returnValueWhenPending","pending","setPending","useFocusWithin","focuseWithin","setFocuseWithin","onFocus","onBlur","useRecaptcha","executeRecaptcha","useGoogleReCaptcha","currentUserHasPrivilege","action","getCopyrightMessage","dangerouslySetInnerHTML","__html","confirmNavigationState","observable","useNavigationConfirm","count","confirm","useNavigation","confirmNavigation","wrap","apply","bind","unconfirmed","useConfirmNavigation","refConfirm","stateConfirm","setStateConfirm","preventDefault","returnValue","NaviLink","module","exports","__webpack_public_path__","require","substr","split","parameters","object","importFunction","propertyName","default","setGlobalTheme","responsiveLayout","AppRouter","errorInfo","fatalError","then","ReactDOM","catch","highlight","CodeHighlighterTheme","Tomorrow","editor","TomorrowNight","defaultLightTheme","defaultDarkTheme","themeList","pure","far","setAttribute","setPrismTheme","cssLinkTag","cssUrlTomorrow","cssUrlTomorrowNight","code","normalizeCode","trim","Prism","languages","doHighlight","browserDefaultLocale","supportedLocales","values","navigator","s","find","getBrowserLocale","AppState","computedFn","privilege","isAdmin","initializationThemeDetection","mediaQueryList","browserPreferredTheme","system","themeSelector","temporaryThemeOverride","logoSelector","appLogoForTheme","logoUrlSelector","appLogo","logoUrl","publicPath","filter","persist","computed","hydrate","create","storage","localStorage","jsonify","_appState"],"mappings":"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","file":"static/js/main.d10bec5c.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { Ref } from \"semantic-ui-react\";\nimport twemoji from \"twemoji\";\n\nimport style from \"./EmojiRenderer.module.less\";\n\ninterface EmojiRendererProps {\n  children: React.ReactElement;\n}\n\nexport const getTwemojiOptions = (inline: boolean) =>\n  ({\n    base: \"https://cdn.jsdelivr.net/npm/@discordapp/twemoji@13.0.1/dist/\",\n    size: \"svg\",\n    ext: \".svg\",\n    className: inline ? style.emoji : \"\",\n    callback: (icon, options: twemoji.ParseObject, variant) => {\n      if (icon === \"1f1f9-1f1fc\") icon = \"1f1e8-1f1f3\";\n\n      switch (icon) {\n        // © copyright\n        case \"a9\":\n        // ® registered trademark\n        case \"ae\":\n        // ™ trademark\n        case \"2122\":\n          return false;\n      }\n\n      return `${options.base}${options.size}/${icon}${options.ext}`;\n    }\n  } as Partial<twemoji.ParseObject>);\n\nexport const EmojiRenderer: React.FC<EmojiRendererProps> = props => {\n  const refElement = useRef<HTMLElement>();\n  useEffect(() => {\n    if (refElement.current) twemoji.parse(refElement.current, getTwemojiOptions(true));\n  });\n\n  return <Ref innerRef={refElement}>{props.children}</Ref>;\n};\n","import \"typeface-lato\"; // UI\nimport \"typeface-saira\"; // Logo\n\n// Content\nimport \"@fontsource/noto-sans\";\nimport \"@fontsource/noto-serif\";\nimport \"@fontsource/nunito-sans\";\nimport \"@fontsource/open-sans\";\nimport \"@fontsource/pt-sans\";\nimport \"@fontsource/roboto\";\nimport \"@fontsource/roboto-slab\";\nimport \"@fontsource/source-serif-pro\";\nimport \"@fontsource/zilla-slab\";\n\n// Code\nimport \"@fontsource/fira-code\";\nimport \"@fontsource/roboto-mono\";\nimport \"@fontsource/inconsolata\";\nimport \"@fontsource/source-code-pro\";\nimport \"@fontsource/ubuntu-mono\";\nimport \"@fontsource/pt-mono\";\nimport \"hack-font/build/web/hack-subset.css\";\nimport \"@fontsource/dm-mono\";\nimport \"@fontsource/jetbrains-mono\";\nimport \"sf-mono-webfont/stylesheet.css\";\n\nimport type { editor } from \"monaco-editor\";\n\nimport { Locale } from \"@/interfaces/Locale\";\nimport { appState } from \"@/appState\";\n\n// This module uses Webpack's val-loader\nimport _uiFontSelectors from \"./ui-font-selectors\";\nconst uiFontSelectors = (_uiFontSelectors as unknown) as string[];\n\nexport const availableCodeFonts = [\n  \"Fira Code\",\n  \"Roboto Mono\",\n  \"Inconsolata\",\n  \"Hack\",\n  \"Jetbrains Mono\",\n  \"DM Mono\",\n  \"Source Code Pro\",\n  \"Ubuntu Mono\",\n  \"PT Mono\",\n  \"SF Mono\"\n];\n\nexport const availableContentFonts = [\n  \"Open Sans\",\n  \"Noto Sans\",\n  \"Noto Serif\",\n  \"Nunito Sans\",\n  \"PT Sans\",\n  \"Lato\",\n  \"Roboto\",\n  \"Roboto Slab\",\n  \"Zilla Slab\",\n  \"Source Serif Pro\"\n];\n\nfunction getFallbackFontList(locale: Locale) {\n  switch (locale) {\n    case Locale.ja_JP:\n      return [\n        \"Noto Sans CJK JP\",\n        \"Source Han Sans JP\",\n        \"ヒラギノ角ゴ Pro\",\n        \"Hiragino Kaku Gothic Pro\",\n        \"メイリオ\",\n        \"Yu Gothic\",\n        \"Meiryo\",\n        \"Osaka\",\n        \"ＭＳ Ｐゴシック\",\n        \"MS PGothic\"\n      ];\n    case Locale.zh_CN:\n    case Locale.en_US:\n    default:\n      return [\n        \"Noto Sans CJK SC\",\n        \"Source Han Sans SC\",\n        \"PingFang SC\",\n        \"Hiragino Sans GB\",\n        \"Microsoft Yahei\",\n        \"WenQuanYi Micro Hei\",\n        \"Droid Sans Fallback\"\n      ];\n  }\n}\n\nfunction generateFontFamily(preferredFont: string, locale: Locale, fallbackFont?: string) {\n  const systemSans = \"sans-serif\";\n  const systemSerif = \"serif\";\n  const systemMono = \"monospace\";\n  const systemFonts = [systemSans, systemSerif, systemMono];\n\n  if (!fallbackFont) {\n    const normalizedFontName = preferredFont.toLowerCase();\n    if (normalizedFontName.indexOf(\"sans\") !== -1) fallbackFont = systemSans;\n    else if (normalizedFontName.indexOf(\"serif\") !== -1 || normalizedFontName.indexOf(\" slab\") !== -1)\n      fallbackFont = systemSerif;\n    else fallbackFont = systemSans;\n  }\n\n  const fontList = [...getFallbackFontList(locale), fallbackFont];\n  if (preferredFont && !systemFonts.includes(preferredFont)) fontList.unshift(preferredFont);\n\n  return fontList.map(font => (systemFonts.includes(font) ? font : JSON.stringify(font))).join(\", \");\n}\n\nfunction updateFontCss(id: string, css: string) {\n  const style = document.createElement(\"style\");\n  style.id = id;\n  style.innerHTML = css;\n\n  const oldStyle = document.getElementById(id);\n  if (oldStyle) oldStyle.parentNode.replaceChild(style, oldStyle);\n  else document.head.appendChild(style);\n}\n\nexport function updateCodeFontCss(locale: Locale) {\n  const fontPreference = appState.userPreference?.font;\n\n  updateFontCss(\n    \"font-preference-code\",\n    `.monospace, code, pre {\n  font-family: ${generateFontFamily(\n    fontPreference?.codeFontFace || availableCodeFonts[0],\n    locale,\n    \"monospace\"\n  )} !important;\n  font-size: ${fontPreference?.codeFontSize || 14}px !important;\n  line-height: ${fontPreference?.codeLineHeight || 1.3} !important;\n  font-variant-ligatures: ${fontPreference?.codeFontLigatures === false ? \"none\" : \"normal\"} !important;\n}`\n  );\n}\n\nexport function generateCodeFontEditorOptions(locale: Locale): editor.IStandaloneEditorConstructionOptions {\n  const fontPreference = appState.userPreference?.font;\n  const fontSize = fontPreference?.codeFontSize || 14;\n\n  return {\n    fontFamily: generateFontFamily(fontPreference?.codeFontFace || availableCodeFonts[0], locale, \"monospace\"),\n    fontSize: fontSize,\n    lineHeight: (fontPreference?.codeLineHeight || 1.3) * fontSize,\n    fontLigatures: fontPreference?.codeFontLigatures !== false\n  };\n}\n\nexport function updateContentFontCss(locale: Locale) {\n  const fontPreference = appState.userPreference?.font;\n\n  updateFontCss(\n    \"font-preference-content\",\n    `.content-font {\n  font-family: ${generateFontFamily(fontPreference?.contentFontFace || availableContentFonts[0], locale)} !important;\n}`\n  );\n}\n\nexport function updateUiFontCss(locale: Locale) {\n  updateFontCss(\n    \"font-ui\",\n    `.ui-font, ${uiFontSelectors.join(\", \")} {\n  font-family: ${generateFontFamily(\"Lato\", locale, \"sans-serif\")};\n}`\n  );\n}\n\nexport function getMarkdownEditorFontClass() {\n  return appState.userPreference?.font?.markdownEditorFont === \"code\" ? \"monospace\" : \"content-font\";\n}\n","import React from \"react\";\n\nexport default function formatDateTime(\n  date: Date | string | number,\n  dateOnly?: boolean\n): [JSX.Element | string, string] {\n  if (!(date instanceof Date)) date = new Date(date);\n  let month = (date.getMonth() + 1).toString();\n  let day = date.getDate().toString();\n  let hour = date.getHours().toString();\n  let minute = date.getMinutes().toString();\n  let second = date.getSeconds().toString();\n\n  month = month.length === 1 ? \"0\" + month : month;\n  day = day.length === 1 ? \"0\" + day : day;\n  hour = hour.length === 1 ? \"0\" + hour : hour;\n  minute = minute.length === 1 ? \"0\" + minute : minute;\n  second = second.length === 1 ? \"0\" + second : second;\n\n  const withoutYearDateOnly = `${month}/${day}`;\n  const withoutYear = dateOnly ? (\n    withoutYearDateOnly\n  ) : (\n    <>\n      {withoutYearDateOnly}&nbsp;&nbsp;{`${hour}:${minute}:${second}`}\n    </>\n  );\n\n  const withYearDateOnly = `${date.getFullYear()}-${month}-${day}`;\n  const withYear = dateOnly ? withYearDateOnly : `${withYearDateOnly} ${hour}:${minute}:${second}`;\n\n  return [withoutYear, withYear];\n}\n","// This file is generated automatically, do NOT modify it.\n\n/// <reference path=\"../types.d.ts\" />\n\nimport { createGetApi, createPostApi } from \"@/api\";\n\nexport const searchUser = createGetApi<{ query: string; wildcard?: string }, ApiTypes.SearchUserResponseDto>(\n  \"user/searchUser\"\n);\nexport const getUserMeta = createPostApi<ApiTypes.GetUserMetaRequestDto, ApiTypes.GetUserMetaResponseDto>(\n  \"user/getUserMeta\",\n  false\n);\nexport const setUserPrivileges = createPostApi<\n  ApiTypes.SetUserPrivilegesRequestDto,\n  ApiTypes.SetUserPrivilegesResponseDto\n>(\"user/setUserPrivileges\", false);\nexport const updateUserProfile = createPostApi<\n  ApiTypes.UpdateUserProfileRequestDto,\n  ApiTypes.UpdateUserProfileResponseDto\n>(\"user/updateUserProfile\", false);\nexport const getUserList = createPostApi<ApiTypes.GetUserListRequestDto, ApiTypes.GetUserListResponseDto>(\n  \"user/getUserList\",\n  false\n);\nexport const getUserDetail = createPostApi<ApiTypes.GetUserDetailRequestDto, ApiTypes.GetUserDetailResponseDto>(\n  \"user/getUserDetail\",\n  false\n);\nexport const getUserProfile = createPostApi<ApiTypes.GetUserProfileRequestDto, ApiTypes.GetUserProfileResponseDto>(\n  \"user/getUserProfile\",\n  false\n);\nexport const getUserPreference = createPostApi<\n  ApiTypes.GetUserPreferenceRequestDto,\n  ApiTypes.GetUserPreferenceResponseDto\n>(\"user/getUserPreference\", false);\nexport const updateUserPreference = createPostApi<\n  ApiTypes.UpdateUserPreferenceRequestDto,\n  ApiTypes.UpdateUserPreferenceResponseDto\n>(\"user/updateUserPreference\", false);\nexport const getUserSecuritySettings = createPostApi<\n  ApiTypes.GetUserSecuritySettingsRequestDto,\n  ApiTypes.GetUserSecuritySettingsResponseDto\n>(\"user/getUserSecuritySettings\", false);\nexport const queryAuditLogs = createPostApi<ApiTypes.QueryAuditLogsRequestDto, ApiTypes.QueryAuditLogsResponseDto>(\n  \"user/queryAuditLogs\",\n  false\n);\nexport const updateUserPassword = createPostApi<\n  ApiTypes.UpdateUserPasswordRequestDto,\n  ApiTypes.UpdateUserPasswordResponseDto\n>(\"user/updateUserPassword\", false);\nexport const updateUserSelfEmail = createPostApi<\n  ApiTypes.UpdateUserSelfEmailRequestDto,\n  ApiTypes.UpdateUserSelfEmailResponseDto\n>(\"user/updateUserSelfEmail\", false);\n","// This file is generated automatically, do NOT modify it.\n\n/// <reference path=\"../types.d.ts\" />\n\nimport { createGetApi, createPostApi } from \"@/api\";\n\nexport const getSessionInfo = createGetApi<{ token?: string; jsonp?: string }, ApiTypes.GetSessionInfoResponseDto>(\n  \"auth/getSessionInfo\"\n);\nexport const login = createPostApi<ApiTypes.LoginRequestDto, ApiTypes.LoginResponseDto>(\"auth/login\", true);\nexport const logout = createPostApi<void, void>(\"auth/logout\", false);\nexport const checkAvailability = createGetApi<\n  { username?: string; email?: string },\n  ApiTypes.CheckAvailabilityResponseDto\n>(\"auth/checkAvailability\");\nexport const sendEmailVerificationCode = createPostApi<\n  ApiTypes.SendEmailVerificationCodeRequestDto,\n  ApiTypes.SendEmailVerificationCodeResponseDto\n>(\"auth/sendEmailVerificationCode\", true);\nexport const register = createPostApi<ApiTypes.RegisterRequestDto, ApiTypes.RegisterResponseDto>(\"auth/register\", true);\nexport const resetPassword = createPostApi<ApiTypes.ResetPasswordRequestDto, ApiTypes.ResetPasswordResponseDto>(\n  \"auth/resetPassword\",\n  true\n);\nexport const listUserSessions = createPostApi<\n  ApiTypes.ListUserSessionsRequestDto,\n  ApiTypes.ListUserSessionsResponseDto\n>(\"auth/listUserSessions\", false);\nexport const revokeUserSession = createPostApi<\n  ApiTypes.RevokeUserSessionRequestDto,\n  ApiTypes.RevokeUserSessionResponseDto\n>(\"auth/revokeUserSession\", false);\n","// This file is generated automatically, do NOT modify it.\n\n/// <reference path=\"../types.d.ts\" />\n\nimport { createGetApi, createPostApi } from \"@/api\";\n\nexport const submit = createPostApi<ApiTypes.SubmitRequestDto, ApiTypes.SubmitResponseDto>(\"submission/submit\", true);\nexport const querySubmission = createPostApi<ApiTypes.QuerySubmissionRequestDto, ApiTypes.QuerySubmissionResponseDto>(\n  \"submission/querySubmission\",\n  false\n);\nexport const getSubmissionDetail = createPostApi<\n  ApiTypes.GetSubmissionDetailRequestDto,\n  ApiTypes.GetSubmissionDetailResponseDto\n>(\"submission/getSubmissionDetail\", false);\nexport const downloadSubmissionFile = createPostApi<\n  ApiTypes.DownloadSubmissionFileRequestDto,\n  ApiTypes.DownloadSubmissionFileResponseDto\n>(\"submission/downloadSubmissionFile\", false);\nexport const querySubmissionStatistics = createPostApi<\n  ApiTypes.QuerySubmissionStatisticsRequestDto,\n  ApiTypes.QuerySubmissionStatisticsResponseDto\n>(\"submission/querySubmissionStatistics\", false);\nexport const rejudgeSubmission = createPostApi<\n  ApiTypes.RejudgeSubmissionRequestDto,\n  ApiTypes.RejudgeSubmissionResponseDto\n>(\"submission/rejudgeSubmission\", false);\nexport const cancelSubmission = createPostApi<\n  ApiTypes.CancelSubmissionRequestDto,\n  ApiTypes.CancelSubmissionResponseDto\n>(\"submission/cancelSubmission\", false);\nexport const setSubmissionPublic = createPostApi<\n  ApiTypes.SetSubmissionPublicRequestDto,\n  ApiTypes.SetSubmissionPublicResponseDto\n>(\"submission/setSubmissionPublic\", false);\nexport const deleteSubmission = createPostApi<\n  ApiTypes.DeleteSubmissionRequestDto,\n  ApiTypes.DeleteSubmissionResponseDto\n>(\"submission/deleteSubmission\", false);\n","// This file is generated automatically, do NOT modify it.\n\n/// <reference path=\"../types.d.ts\" />\n\nimport { createGetApi, createPostApi } from \"@/api\";\n\nexport const queryProblemSet = createPostApi<ApiTypes.QueryProblemSetRequestDto, ApiTypes.QueryProblemSetResponseDto>(\n  \"problem/queryProblemSet\",\n  false\n);\nexport const createProblem = createPostApi<ApiTypes.CreateProblemRequestDto, ApiTypes.CreateProblemResponseDto>(\n  \"problem/createProblem\",\n  true\n);\nexport const updateStatement = createPostApi<\n  ApiTypes.UpdateProblemStatementRequestDto,\n  ApiTypes.UpdateProblemStatementResponseDto\n>(\"problem/updateStatement\", false);\nexport const getProblem = createPostApi<ApiTypes.GetProblemRequestDto, ApiTypes.GetProblemResponseDto>(\n  \"problem/getProblem\",\n  false\n);\nexport const setProblemPermissions = createPostApi<\n  ApiTypes.SetProblemPermissionsRequestDto,\n  ApiTypes.SetProblemPermissionsResponseDto\n>(\"problem/setProblemPermissions\", false);\nexport const setProblemDisplayId = createPostApi<\n  ApiTypes.SetProblemDisplayIdRequestDto,\n  ApiTypes.SetProblemDisplayIdResponseDto\n>(\"problem/setProblemDisplayId\", false);\nexport const setProblemPublic = createPostApi<\n  ApiTypes.SetProblemPublicRequestDto,\n  ApiTypes.SetProblemPublicResponseDto\n>(\"problem/setProblemPublic\", false);\nexport const addProblemFile = createPostApi<ApiTypes.AddProblemFileRequestDto, ApiTypes.AddProblemFileResponseDto>(\n  \"problem/addProblemFile\",\n  true\n);\nexport const removeProblemFiles = createPostApi<\n  ApiTypes.RemoveProblemFilesRequestDto,\n  ApiTypes.RemoveProblemFilesResponseDto\n>(\"problem/removeProblemFiles\", false);\nexport const downloadProblemFiles = createPostApi<\n  ApiTypes.DownloadProblemFilesRequestDto,\n  ApiTypes.DownloadProblemFilesResponseDto\n>(\"problem/downloadProblemFiles\", false);\nexport const renameProblemFile = createPostApi<\n  ApiTypes.RenameProblemFileRequestDto,\n  ApiTypes.RenameProblemFileResponseDto\n>(\"problem/renameProblemFile\", false);\nexport const updateProblemJudgeInfo = createPostApi<\n  ApiTypes.UpdateProblemJudgeInfoRequestDto,\n  ApiTypes.UpdateProblemJudgeInfoResponseDto\n>(\"problem/updateProblemJudgeInfo\", false);\nexport const getAllProblemTags = createPostApi<\n  ApiTypes.GetAllProblemTagsRequestDto,\n  ApiTypes.GetAllProblemTagsResponseDto\n>(\"problem/getAllProblemTags\", false);\nexport const createProblemTag = createPostApi<\n  ApiTypes.CreateProblemTagRequestDto,\n  ApiTypes.CreateProblemTagResponseDto\n>(\"problem/createProblemTag\", false);\nexport const getProblemTagDetail = createPostApi<\n  ApiTypes.GetProblemTagDetailRequestDto,\n  ApiTypes.GetProblemTagDetailResponseDto\n>(\"problem/getProblemTagDetail\", false);\nexport const updateProblemTag = createPostApi<\n  ApiTypes.UpdateProblemTagRequestDto,\n  ApiTypes.UpdateProblemTagResponseDto\n>(\"problem/updateProblemTag\", false);\nexport const deleteProblemTag = createPostApi<\n  ApiTypes.DeleteProblemTagRequestDto,\n  ApiTypes.DeleteProblemTagResponseDto\n>(\"problem/deleteProblemTag\", false);\nexport const getAllProblemTagsOfAllLocales = createPostApi<void, ApiTypes.GetAllProblemTagsOfAllLocalesResponseDto>(\n  \"problem/getAllProblemTagsOfAllLocales\",\n  false\n);\nexport const deleteProblem = createPostApi<ApiTypes.DeleteProblemRequestDto, ApiTypes.DeleteProblemResponseDto>(\n  \"problem/deleteProblem\",\n  false\n);\nexport const changeProblemType = createPostApi<\n  ApiTypes.ChangeProblemTypeRequestDto,\n  ApiTypes.ChangeProblemTypeResponseDto\n>(\"problem/changeProblemType\", false);\n","// This file is generated automatically, do NOT modify it.\n\n/// <reference path=\"../types.d.ts\" />\n\nimport { createGetApi, createPostApi } from \"@/api\";\n\nexport const migrateUser = createPostApi<ApiTypes.MigrateUserRequestDto, ApiTypes.MigrateUserResponseDto>(\n  \"migration/migrateUser\",\n  false\n);\nexport const queryUserMigrationInfo = createPostApi<\n  ApiTypes.QueryUserMigrationInfoRequestDto,\n  ApiTypes.QueryUserMigrationInfoResponseDto\n>(\"migration/queryUserMigrationInfo\", false);\n","// This file is generated automatically, do NOT modify it.\n\n/// <reference path=\"../types.d.ts\" />\n\nimport { createGetApi, createPostApi } from \"@/api\";\n\nexport const getGroupMeta = createGetApi<{ groupId: string }, ApiTypes.GetGroupMetaResponseDto>(\"group/getGroupMeta\");\nexport const searchGroup = createGetApi<{ query: string; wildcard?: string }, ApiTypes.SearchGroupResponseDto>(\n  \"group/searchGroup\"\n);\nexport const createGroup = createPostApi<ApiTypes.CreateGroupRequestDto, ApiTypes.CreateGroupResponseDto>(\n  \"group/createGroup\",\n  false\n);\nexport const deleteGroup = createPostApi<ApiTypes.DeleteGroupRequestDto, ApiTypes.DeleteGroupResponseDto>(\n  \"group/deleteGroup\",\n  false\n);\nexport const renameGroup = createPostApi<ApiTypes.RenameGroupRequestDto, ApiTypes.RenameGroupResponseDto>(\n  \"group/renameGroup\",\n  false\n);\nexport const addMember = createPostApi<ApiTypes.AddUserToGroupRequestDto, ApiTypes.AddUserToGroupResponseDto>(\n  \"group/addMember\",\n  false\n);\nexport const removeMember = createPostApi<\n  ApiTypes.RemoveUserFromGroupRequestDto,\n  ApiTypes.RemoveUserFromGroupResponseDto\n>(\"group/removeMember\", false);\nexport const setGroupAdmin = createPostApi<ApiTypes.SetGroupAdminRequestDto, ApiTypes.SetGroupAdminResponseDto>(\n  \"group/setGroupAdmin\",\n  false\n);\nexport const getGroupList = createGetApi<void, ApiTypes.GetGroupListResponseDto>(\"group/getGroupList\");\nexport const getGroupMemberList = createPostApi<\n  ApiTypes.GetGroupMemberListRequestDto,\n  ApiTypes.GetGroupMemberListResponseDto\n>(\"group/getGroupMemberList\", false);\n","// This file is generated automatically, do NOT modify it.\n\n/// <reference path=\"../types.d.ts\" />\n\nimport { createGetApi, createPostApi } from \"@/api\";\n\nexport const addJudgeClient = createPostApi<ApiTypes.AddJudgeClientRequestDto, ApiTypes.AddJudgeClientResponseDto>(\n  \"judgeClient/addJudgeClient\",\n  false\n);\nexport const deleteJudgeClient = createPostApi<\n  ApiTypes.DeleteJudgeClientRequestDto,\n  ApiTypes.DeleteJudgeClientResponseDto\n>(\"judgeClient/deleteJudgeClient\", false);\nexport const resetJudgeClientKey = createPostApi<\n  ApiTypes.ResetJudgeClientKeyRequestDto,\n  ApiTypes.ResetJudgeClientKeyResponseDto\n>(\"judgeClient/resetJudgeClientKey\", false);\nexport const listJudgeClients = createGetApi<void, ApiTypes.ListJudgeClientsResponseDto>(\n  \"judgeClient/listJudgeClients\"\n);\n","// This file is generated automatically, do NOT modify it.\n\n/// <reference path=\"../types.d.ts\" />\n\nimport { createGetApi, createPostApi } from \"@/api\";\n\nexport const createDiscussion = createPostApi<\n  ApiTypes.CreateDiscussionRequestDto,\n  ApiTypes.CreateDiscussionResponseDto\n>(\"discussion/createDiscussion\", true);\nexport const createDiscussionReply = createPostApi<\n  ApiTypes.CreateDiscussionReplyRequestDto,\n  ApiTypes.CreateDiscussionReplyResponseDto\n>(\"discussion/createDiscussionReply\", true);\nexport const toggleReaction = createPostApi<ApiTypes.ToggleReactionRequestDto, ApiTypes.ToggleReactionResponseDto>(\n  \"discussion/toggleReaction\",\n  false\n);\nexport const queryDiscussions = createPostApi<\n  ApiTypes.QueryDiscussionsRequestDto,\n  ApiTypes.QueryDiscussionsResponseDto\n>(\"discussion/queryDiscussion\", false);\nexport const getDiscussionPermissions = createPostApi<\n  ApiTypes.GetDiscussionPermissionsRequestDto,\n  ApiTypes.GetDiscussionPermissionsResponseDto\n>(\"discussion/getDiscussionPermissions\", false);\nexport const getDiscussionAndReplies = createPostApi<\n  ApiTypes.GetDiscussionAndRepliesRequestDto,\n  ApiTypes.GetDiscussionAndRepliesResponseDto\n>(\"discussion/getDiscussionAndReplies\", false);\nexport const updateDiscussion = createPostApi<\n  ApiTypes.UpdateDiscussionRequestDto,\n  ApiTypes.UpdateDiscussionResponseDto\n>(\"discussion/updateDiscussion\", false);\nexport const updateDiscussionReply = createPostApi<\n  ApiTypes.UpdateDiscussionReplyRequestDto,\n  ApiTypes.UpdateDiscussionReplyResponseDto\n>(\"discussion/updateDiscussionReply\", false);\nexport const deleteDiscussion = createPostApi<\n  ApiTypes.DeleteDiscussionRequestDto,\n  ApiTypes.DeleteDiscussionResponseDto\n>(\"discussion/deleteDiscussion\", false);\nexport const deleteDiscussionReply = createPostApi<\n  ApiTypes.DeleteDiscussionReplyRequestDto,\n  ApiTypes.DeleteDiscussionReplyResponseDto\n>(\"discussion/deleteDiscussionReply\", false);\nexport const setDiscussionPublic = createPostApi<\n  ApiTypes.SetDiscussionPublicRequestDto,\n  ApiTypes.SetDiscussionPublicResponseDto\n>(\"discussion/setDiscussionPublic\", false);\nexport const setDiscussionReplyPublic = createPostApi<\n  ApiTypes.SetDiscussionReplyPublicRequestDto,\n  ApiTypes.SetDiscussionReplyPublicResponseDto\n>(\"discussion/setDiscussionReplyPublic\", false);\nexport const setDiscussionPermissions = createPostApi<\n  ApiTypes.SetDiscussionPermissionsRequestDto,\n  ApiTypes.SetDiscussionPermissionsResponseDto\n>(\"discussion/setDiscussionPermissions\", false);\n","// This file is generated automatically, do NOT modify it.\n\n/// <reference path=\"../types.d.ts\" />\n\nimport { createGetApi, createPostApi } from \"@/api\";\n\nexport const getHomepage = createGetApi<{ locale: string }, ApiTypes.GetHomepageResponseDto>(\"homepage/getHomepage\");\nexport const getHomepageSettings = createGetApi<void, ApiTypes.GetHomepageSettingsResponseDto>(\n  \"homepage/getHomepageSettings\"\n);\nexport const updateHomepageSettings = createPostApi<\n  ApiTypes.UpdateHomepageSettingsRequestDto,\n  ApiTypes.UpdateHomepageSettingsResponseDto\n>(\"homepage/updateHomepageSettings\", false);\n","// This file is generated automatically, do NOT modify it.\n\nimport * as ImportedUserApi from \"./modules/user\";\nimport * as ImportedAuthApi from \"./modules/auth\";\nimport * as ImportedSubmissionApi from \"./modules/submission\";\nimport * as ImportedProblemApi from \"./modules/problem\";\nimport * as ImportedMigrationApi from \"./modules/migration\";\nimport * as ImportedGroupApi from \"./modules/group\";\nimport * as ImportedJudgeClientApi from \"./modules/judge-client\";\nimport * as ImportedDiscussionApi from \"./modules/discussion\";\nimport * as ImportedHomepageApi from \"./modules/homepage\";\n\nexport const user = ImportedUserApi;\nexport const auth = ImportedAuthApi;\nexport const submission = ImportedSubmissionApi;\nexport const problem = ImportedProblemApi;\nexport const migration = ImportedMigrationApi;\nexport const group = ImportedGroupApi;\nexport const judgeClient = ImportedJudgeClientApi;\nexport const discussion = ImportedDiscussionApi;\nexport const homepage = ImportedHomepageApi;\n","import axios from \"axios\";\n\nimport { appState } from \"./appState\";\nimport { makeToBeLocalizedText, ToBeLocalizedText } from \"./locales\";\n\nexport interface ApiResponse<T> {\n  requestError?: ToBeLocalizedText;\n  response?: T;\n}\n\nasync function request<T>(\n  path: string,\n  method: \"get\" | \"post\",\n  params?: any,\n  body?: any,\n  recaptchaToken?: string\n): Promise<ApiResponse<T>> {\n  let response: any;\n  try {\n    response = await axios(window.apiEndpoint + \"api/\" + path, {\n      method: method,\n      params: params,\n      data: body && JSON.stringify(body),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: appState.token && `Bearer ${appState.token}`,\n        ...(recaptchaToken ? { \"X-Recaptcha-Token\": recaptchaToken } : {})\n      },\n      validateStatus: () => true\n    });\n  } catch (e) {\n    console.error(e);\n    return {\n      requestError: makeToBeLocalizedText(\"common.request_error.unknown\", { text: e.message })\n    };\n  }\n\n  if (![200, 201].includes(response.status)) {\n    try {\n      console.log(\"response.data:\", response.data);\n    } catch (e) {\n      console.log(\"response:\", response);\n    }\n\n    if ([400, 401, 429, 500, 502, 503, 504].includes(response.status))\n      return {\n        requestError: makeToBeLocalizedText(`common.request_error.${response.status}`)\n      };\n\n    return {\n      requestError: makeToBeLocalizedText(\"common.request_error.unknown\", {\n        text: `${response.status} ${response.statusText}`\n      })\n    };\n  }\n\n  return {\n    response: typeof response.data === \"string\" ? JSON.parse(response.data) : response.data\n  };\n}\n\nimport * as api from \"./api-generated\";\nexport default api;\n\nexport function createPostApi<BodyType, ResponseType>(\n  path: string,\n  recaptcha: true\n): (requestBody: BodyType, recaptchaTokenPromise: Promise<string>) => Promise<ApiResponse<ResponseType>>;\nexport function createPostApi<BodyType, ResponseType>(\n  path: string,\n  recaptcha: false\n): (requestBody: BodyType) => Promise<ApiResponse<ResponseType>>;\n\nexport function createPostApi<BodyType, ResponseType>(path: string, recaptcha: boolean) {\n  return async (requestBody: BodyType, recaptchaTokenPromise?: Promise<string>): Promise<ApiResponse<ResponseType>> => {\n    let recaptchaToken: string;\n    try {\n      recaptchaToken = await recaptchaTokenPromise;\n    } catch (e) {\n      return {\n        requestError: makeToBeLocalizedText(\"common.request_error.401\")\n      };\n    }\n\n    return await request<ResponseType>(path, \"post\", null, requestBody, recaptchaToken);\n  };\n}\n\nexport function createGetApi<QueryType, ResponseType>(path: string) {\n  return async (requestQuery: QueryType): Promise<ApiResponse<ResponseType>> => {\n    return await request<ResponseType>(path, \"get\", requestQuery, null);\n  };\n}\n","import Noty from \"noty\";\n\nfunction noty(type: Noty.Type, text: string, timeout: number) {\n  const noty = new Noty({\n    type,\n    text,\n    layout: \"topRight\",\n    theme: \"semanticui\"\n  });\n\n  noty.show();\n\n  setTimeout(() => noty.close(), timeout);\n}\n\nexport default {\n  success(message: string, timeout: number = 5000) {\n    noty(\"success\", message, timeout);\n  },\n  info(message: string, timeout: number = 5000) {\n    noty(\"alert\", message, timeout);\n  },\n  warning(message: string, timeout: number = 5000) {\n    noty(\"warning\", message, timeout);\n  },\n  error(message: string, timeout: number = 5000) {\n    noty(\"error\", message, timeout);\n  }\n};\n","import { useNProgress } from \"@tanem/react-nprogress\";\nimport React from \"react\";\n\ninterface GlobalProgressBarProps {\n  isAnimating: boolean;\n}\n\nconst GlobalProgressBar: React.FC<GlobalProgressBarProps> = ({ isAnimating }) => {\n  const { animationDuration, isFinished, progress } = useNProgress({\n    animationDuration: 250,\n    incrementDuration: 300,\n    isAnimating\n  });\n\n  return (\n    <div\n      style={{\n        opacity: isFinished ? 0 : 1,\n        pointerEvents: \"none\",\n        transition: `opacity ${animationDuration}ms linear`\n      }}\n    >\n      <div\n        style={{\n          background: \"#29d\",\n          height: 2,\n          left: 0,\n          marginLeft: `${(-1 + progress) * 100}%`,\n          position: \"fixed\",\n          top: 0,\n          transition: `margin-left ${animationDuration}ms linear`,\n          width: \"100%\",\n          zIndex: 1031\n        }}\n      >\n        <div\n          style={{\n            boxShadow: \"0 0 10px #29d, 0 0 5px #29d\",\n            display: \"block\",\n            height: \"100%\",\n            opacity: 1,\n            position: \"absolute\",\n            right: 0,\n            transform: \"rotate(3deg) translate(0px, -4px)\",\n            width: 100\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default GlobalProgressBar;\n","import React, { useEffect, useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { useLoadingRoute } from \"react-navi\";\nimport { Menu, Button, Dropdown, Container, Icon, Segment, Sidebar, SemanticICONS } from \"semantic-ui-react\";\n\nimport \"semantic-ui-css/semantic.css\";\nimport \"noty/lib/noty.css\";\nimport \"noty/lib/themes/semanticui.css\";\n\nimport style from \"./AppLayout.module.less\";\n\nimport GlobalProgressBar from \"@/components/GlobalProgressBar\";\n\nimport { Locale } from \"@/interfaces/Locale\";\nimport localeMeta from \"@/locales/meta\";\nimport { appState } from \"@/appState\";\nimport {\n  useLocalizer,\n  useLoginOrRegisterNavigation,\n  useScreenWidthWithin,\n  useNavigationChecked,\n  Link\n} from \"@/utils/hooks\";\nimport toast from \"@/utils/toast\";\nimport api from \"@/api\";\nimport formatDateTime from \"@/utils/formatDateTime\";\nimport { EmojiRenderer } from \"@/components/EmojiRenderer\";\n\nexport type NavButtonName = \"home\" | \"problem_set\" | \"submissions\" | \"members\" | \"discussion\";\n\nlet AppLayout: React.FC = props => {\n  const navigation = useNavigationChecked();\n  const loadingRoute = useLoadingRoute();\n  const _ = useLocalizer(\"common\");\n\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n\n  useEffect(() => {\n    if (sidebarOpen !== document.documentElement.classList.contains(style.sidebarOpen))\n      document.documentElement.classList.toggle(style.sidebarOpen);\n  }, [sidebarOpen]);\n\n  useEffect(() => {\n    const subscription = navigation.subscribe(route => {\n      if (route.type === \"ready\") {\n        setSidebarOpen(false);\n      }\n    });\n\n    return () => subscription.unsubscribe();\n  });\n\n  async function onLogoutClick() {\n    const { requestError, response } = await api.auth.logout();\n    if (requestError) {\n      toast.error(requestError(_));\n    } else {\n      appState.token = null;\n      appState.logout = true;\n      location.reload();\n    }\n  }\n\n  const onLoginOrRegisterClick = useLoginOrRegisterNavigation();\n\n  const navButtons: Record<NavButtonName, { icon: SemanticICONS; text: string; url?: string }> = {\n    home: {\n      icon: \"home\",\n      text: \".navbar.home\",\n      url: \"/\"\n    },\n    problem_set: {\n      icon: \"book\",\n      text: \".navbar.problem_set\",\n      url: \"/p\"\n    },\n    ...(appState.serverPreference.misc.legacyContestsEntryUrl\n      ? {\n          contests: {\n            icon: \"calendar\",\n            text: \".navbar.contests\",\n            url: appState.serverPreference.misc.legacyContestsEntryUrl\n          }\n        }\n      : {}),\n    submissions: {\n      icon: \"hourglass\",\n      text: \".navbar.submissions\",\n      url: \"/s\"\n    },\n    members: {\n      icon: \"users\",\n      text: \".navbar.members\",\n      url: \"/u\"\n    },\n    discussion: {\n      icon: \"comments\",\n      text: \".navbar.discussion\",\n      url: \"/d\"\n    }\n  };\n\n  const navMenuItems = Object.keys(navButtons).map(name => (\n    <Menu.Item key={name} as={Link} href={navButtons[name].url} active={appState.activeNavButton === name}>\n      <Icon name={navButtons[name].icon} />\n      {_(navButtons[name].text)}\n    </Menu.Item>\n  ));\n\n  const loginAndRegisterButtons = (\n    <>\n      <Button className={style.loginAndRegisterButton} onClick={() => onLoginOrRegisterClick(\"login\")}>\n        {_(\".header.user.login\")}\n      </Button>\n      <Button\n        className={style.loginAndRegisterButton}\n        primary\n        onClick={() => onLoginOrRegisterClick(\"register\")}\n        type=\"primary\"\n      >\n        {_(\".header.user.register\")}\n      </Button>\n    </>\n  );\n\n  const userMenu = () => (\n    <>\n      <Dropdown.Menu className={style.userMenu}>\n        <Dropdown.Item as={Link} href={`/u/${appState.currentUser.username}`}>\n          <Icon name=\"user\" />\n          {_(\".header.user.profile\")}\n        </Dropdown.Item>\n        <Dropdown.Item as={Link} href={{ pathname: \"/s\", query: { submitter: appState.currentUser.username } }}>\n          <Icon name=\"hourglass half\" />\n          {_(\".header.user.submissions\")}\n        </Dropdown.Item>\n        <Dropdown.Item as={Link} href={{ pathname: \"/p\", query: { ownerId: appState.currentUser.id } }}>\n          <Icon name=\"book\" />\n          {_(\".header.user.problems\")}\n        </Dropdown.Item>\n        <Dropdown.Item as={Link} href={{ pathname: \"/d\", query: { publisherId: appState.currentUser.id } }}>\n          <Icon name=\"comments\" />\n          {_(\".header.user.discussions\")}\n        </Dropdown.Item>\n        {appState.currentUserJoinedGroupsCount > 0 && (\n          <Dropdown.Item as={Link} href=\"/groups\">\n            <Icon name=\"users\" />\n            {_(\".header.user.groups\")}\n          </Dropdown.Item>\n        )}\n        {Dropdown === Dropdown && <Dropdown.Divider />}\n        <Dropdown.Item as={Link} href={`/u/${appState.currentUser.username}/edit/profile`}>\n          <Icon name=\"edit\" />\n          {_(\".header.user.edit_profile\")}\n        </Dropdown.Item>\n        <Dropdown.Item as={Link} href={`/u/${appState.currentUser.username}/edit/preference`}>\n          <Icon name=\"cog\" />\n          {_(\".header.user.preference\")}\n        </Dropdown.Item>\n        <Dropdown.Item onClick={onLogoutClick}>\n          <Icon name=\"power\" />\n          {_(\".header.user.logout\")}\n        </Dropdown.Item>\n      </Dropdown.Menu>\n    </>\n  );\n\n  const logo = (\n    <Menu.Item as={Link} href=\"/\" className={style.logoItem}>\n      <div className={style.content}>\n        {appState.appLogoThemed && (\n          <div className={style.logo}>\n            <img {...appState.appLogoThemed} />\n          </div>\n        )}\n        <EmojiRenderer>\n          <div className={style.siteName}>{appState.serverPreference.siteName}</div>\n        </EmojiRenderer>\n      </div>\n    </Menu.Item>\n  );\n\n  const getFooter = (className: string) => (\n    <>\n      <Segment vertical className={className}>\n        <Container textAlign=\"center\">\n          <EmojiRenderer>\n            <div>{appState.serverPreference.siteName} Powered by SYZOJ NG</div>\n          </EmojiRenderer>\n          <div id={style.footerVersion} className=\"monospace\">\n            <span>\n              F: <span title={formatDateTime(window.appVersion.date)[1]}>{window.appVersion.hash}</span>\n            </span>\n            &nbsp;/&nbsp;\n            <span>\n              B: <span title={formatDateTime(appState.serverVersion.date)[1]}>{appState.serverVersion.hash}</span>\n            </span>\n          </div>\n          <div className={style.footerIcons}>\n            <Link href=\"/judge-machine\" title={_(\".footer.judge_machine\")}>\n              <Icon name=\"server\" />\n            </Link>\n            <Dropdown icon=\"language\" title={_(\".footer.locale\")}>\n              <Dropdown.Menu className={style.languageSwitchMenu}>\n                {Object.keys(localeMeta).map((locale: Locale) => (\n                  <Dropdown.Item\n                    key={locale}\n                    onClick={() => {\n                      appState.localLocale = locale;\n                      navigation.refresh();\n                    }}\n                    flag={localeMeta[locale].flag}\n                    text={localeMeta[locale].name}\n                    value={locale}\n                    selected={locale === appState.locale}\n                  />\n                ))}\n              </Dropdown.Menu>\n            </Dropdown>\n            <Link href=\"https://github.com/syzoj\" title=\"GitHub\" target=\"_blank\" rel=\"noreferrer noopener\">\n              <Icon name=\"github\" />\n            </Link>\n          </div>\n        </Container>\n      </Segment>\n    </>\n  );\n\n  const userDropdown = (icon = true) => (\n    <Menu.Menu position=\"right\">\n      <Dropdown\n        simple\n        item\n        open={false}\n        icon={icon && <i className=\"dropdown icon\"></i>}\n        text={appState.currentUser.username}\n      >\n        {userMenu()}\n      </Dropdown>\n    </Menu.Menu>\n  );\n\n  const topBarItemsForWideScreen = (\n    <>\n      {navMenuItems}\n      {appState.currentUser ? (\n        userDropdown()\n      ) : (\n        <Menu.Item className={style.userContainer}>{loginAndRegisterButtons}</Menu.Item>\n      )}\n    </>\n  );\n\n  const topBarItemsForNarrowScreen = (\n    <Menu.Menu position=\"right\">\n      {appState.currentUser && userDropdown(false)}\n      <Menu.Item icon=\"bars\" onClick={() => setSidebarOpen(true)} />\n    </Menu.Menu>\n  );\n\n  const wide = useScreenWidthWithin(1024, Infinity);\n\n  const sidebarOpenStatusClassName = sidebarOpen ? \" \" + style.sidebarOpen : \"\";\n\n  return (\n    <>\n      <GlobalProgressBar isAnimating={!!loadingRoute} />\n      <Menu borderless fixed=\"top\" className={style.menu}>\n        <Container id={style.mainMenuContainer}>\n          {logo}\n          {wide ? topBarItemsForWideScreen : topBarItemsForNarrowScreen}\n        </Container>\n      </Menu>\n      {getFooter(style.footer + \" \" + style.real)}\n      <Container id={style.mainUiContainer}>{props.children}</Container>\n      {getFooter(style.footer + \" \" + style.placeholder)}\n      {!wide && (\n        <>\n          <div className={style.sidebarDimmer + sidebarOpenStatusClassName} onClick={() => setSidebarOpen(false)}></div>\n          <Sidebar\n            as={Menu}\n            className={style.sidebarMenu + sidebarOpenStatusClassName}\n            animation=\"push\"\n            direction=\"right\"\n            vertical\n            visible\n          >\n            <Menu.Item className={style.siteName} as={Link} href=\"/\">\n              {appState.serverPreference.siteName}\n            </Menu.Item>\n            {!appState.currentUser && (\n              <Menu.Item>\n                <Button.Group fluid>{loginAndRegisterButtons}</Button.Group>\n              </Menu.Item>\n            )}\n            {navMenuItems}\n          </Sidebar>\n        </>\n      )}\n    </>\n  );\n};\n\nAppLayout = observer(AppLayout);\n\nexport default AppLayout;\n","import React, { useEffect } from \"react\";\nimport { Message, Icon } from \"semantic-ui-react\";\nimport { observer } from \"mobx-react\";\n\nimport style from \"./ErrorPage.module.less\";\n\nimport { useLocalizer, useNavigationChecked } from \"@/utils/hooks\";\nimport { appState } from \"@/appState\";\nimport { isToBeLocalizedText, ToBeLocalizedText } from \"@/locales\";\nimport { EmojiRenderer } from \"@/components/EmojiRenderer\";\n\nexport interface ErrorPageProps {\n  uncaughtError?: Error;\n  message: React.ReactNode | ToBeLocalizedText;\n  options: {\n    showRefresh?: true;\n    showBack?: true;\n  };\n  onRecover?: () => void;\n}\n\nlet ErrorPage: React.FC<ErrorPageProps> = props => {\n  const _ = useLocalizer(\"error\");\n  const navigation = useNavigationChecked();\n\n  useEffect(() => {\n    appState.enterNewPage(_(\".title\"));\n  }, [appState.locale]);\n\n  if (props.uncaughtError) console.error(props.uncaughtError);\n\n  return (\n    <Message className={style.message} icon error>\n      <Icon name=\"remove\" />\n      <EmojiRenderer>\n        <Message.Content>\n          <Message.Header>{_(props.uncaughtError ? \".unexpected_error\" : \".error\")}</Message.Header>\n          {props.uncaughtError ? (\n            <>\n              <p>\n                <pre>{props.uncaughtError.stack}</pre>\n              </p>\n              <p>\n                {/* These errors could not be recovered. The page must be reloaded. */}\n                <a onClick={() => location.reload()}>{_(\".refresh\")}</a>\n              </p>\n            </>\n          ) : (\n            <>\n              <p>{isToBeLocalizedText(props.message) ? props.message(_) : props.message}</p>\n              <p>\n                {props.options.showBack && (\n                  <a\n                    onClick={() => {\n                      if (props.onRecover) props.onRecover();\n                      navigation.goBack();\n                    }}\n                  >\n                    {_(\".back\")}\n                  </a>\n                )}\n                {props.options.showRefresh && (\n                  <a\n                    onClick={() => {\n                      if (props.onRecover) props.onRecover();\n                      navigation.refresh();\n                    }}\n                  >\n                    {_(\".refresh\")}\n                  </a>\n                )}\n              </p>\n            </>\n          )}\n        </Message.Content>\n      </EmojiRenderer>\n    </Message>\n  );\n};\n\nexport default observer(ErrorPage);\n","import React, { Suspense, useMemo } from \"react\";\nimport { mount, lazy, withView, route, Resolvable, redirect, Matcher, map, NaviRequest } from \"navi\";\nimport { NotFoundBoundary, Router, View } from \"react-navi\";\nimport { IntlProvider } from \"react-intl\";\nimport { observer } from \"mobx-react\";\nimport { GoogleReCaptchaProvider } from \"react-google-recaptcha-v3\";\n\nimport AppLayout from \"./layouts/AppLayout\";\nimport ErrorPage, { ErrorPageProps } from \"./pages/error/ErrorPage\";\nimport getRoute from \"./utils/getRoute\";\nimport { appState } from \"./appState\";\nimport { loadLocaleData, makeToBeLocalizedText, ToBeLocalizedText } from \"./locales\";\nimport localeMeta from \"./locales/meta\";\n\nexport class RouteError implements ErrorPageProps {\n  constructor(\n    public message: React.ReactNode | ToBeLocalizedText,\n    public options: {\n      showRefresh?: true;\n      showBack?: true;\n    } = { showBack: true }\n  ) {}\n}\n\nexport function defineRoute(getViewFunction: (request: NaviRequest) => Promise<React.ReactNode>) {\n  return map(async request => {\n    try {\n      const result = await getViewFunction(request);\n      return typeof result === \"function\"\n        ? (result as Matcher<any, any>)\n        : route({\n            view: result\n          });\n    } catch (e) {\n      if (e instanceof RouteError)\n        return route({\n          view: <ErrorPage {...e} />\n        });\n\n      if (!(e instanceof Error)) e = new Error(String(e));\n      return route({\n        view: <ErrorPage uncaughtError={e} message={null} options={null} />\n      });\n    }\n  });\n}\n\nclass ErrorBoundary extends React.Component<{}, { hasError: boolean; error?: Error }> {\n  constructor(props: unknown) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: unknown) {\n    return { hasError: true, error: error instanceof Error ? error : new Error(String(error)) };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <ErrorPage\n          uncaughtError={this.state.error}\n          message={null}\n          options={null}\n          onRecover={() => this.setState({ hasError: false })}\n        />\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport function legacyRoutes(paths: Record<string, Matcher<any, any>>): Record<string, Matcher<any, any>> {\n  return appState.serverPreference.misc.redirectLegacyUrls ? paths : {};\n}\n\nconst AppRouter: React.FC = () => {\n  const routes = useMemo(\n    () =>\n      withView(\n        async () => {\n          const localeHyphen = appState.locale.replace(\"_\", \"-\");\n          const localeData = await loadLocaleData(appState.locale);\n          const elements = (\n            <IntlProvider locale={localeHyphen} messages={localeData}>\n              <AppLayout key={localeHyphen}>\n                <ErrorBoundary>\n                  <NotFoundBoundary\n                    render={() => (\n                      <ErrorPage message={makeToBeLocalizedText(\"common.invalid_url\")} options={{ showBack: true }} />\n                    )}\n                  >\n                    <View />\n                  </NotFoundBoundary>\n                </ErrorBoundary>\n              </AppLayout>\n            </IntlProvider>\n          );\n\n          return appState.serverPreference.security.recaptchaEnabled ? (\n            <GoogleReCaptchaProvider\n              reCaptchaKey={appState.serverPreference.security.recaptchaKey}\n              language={localeMeta[appState.locale].recaptchaLanguageCode}\n              useRecaptchaNet\n            >\n              {elements}\n            </GoogleReCaptchaProvider>\n          ) : (\n            elements\n          );\n        },\n        mount({\n          \"/\": getRoute(() => import(\"./pages/home\"), \"home\"),\n          \"/homepage-settings\": getRoute(() => import(\"./pages/home\"), \"homeSettings\"),\n          \"/login\": lazy(() => import(\"./pages/auth/login\")),\n          \"/register\": lazy(() => import(\"./pages/auth/register\")),\n          \"/forgot\": lazy(() => import(\"./pages/auth/forgot\")),\n          \"/p\": getRoute(() => import(\"./pages/problem\"), \"p\"),\n          \"/s\": getRoute(() => import(\"./pages/submission\"), \"s\"),\n          \"/u\": getRoute(() => import(\"./pages/user\"), \"u\"),\n          \"/user\": getRoute(() => import(\"./pages/user\"), \"user\"),\n          \"/groups\": getRoute(() => import(\"./pages/user\"), \"groups\"),\n          \"/d\": getRoute(() => import(\"./pages/discussion\"), \"d\"),\n          \"/judge-machine\": lazy(() => import(\"./pages/judge-machine\")),\n          ...legacyRoutes({\n            \"/problem\": getRoute(() => import(\"./pages/problem\"), \"problem\"),\n            \"/problems\": getRoute(() => import(\"./pages/problem\"), \"problems\"),\n            \"/submissions\": redirect(request => ({ pathname: \"/s\", query: request.query })),\n            \"/submission/:id\": redirect(request => `/s/${request.params.id}`),\n            \"/ranklist\": redirect(\"/u\"),\n            \"/discussion/global\": redirect(\"/d\"),\n            \"/discussion/problems\": redirect(\"/d?problemId=all\"),\n            \"/discussion/problem/:id\": redirect(request => `/d?problemId=${request.params.id}`),\n            \"/article/0/edit\": redirect(\"/d/new\"),\n            \"/article/:id\": redirect(request => `/d/${request.params.id}`),\n            \"/article/:id/edit\": redirect(request => `/d/${request.params.id}/edit`)\n          })\n        })\n      ),\n    []\n  );\n\n  return (\n    <Router routes={routes}>\n      <Suspense fallback={null}>\n        <View />\n      </Suspense>\n    </Router>\n  );\n};\n\nexport default observer(AppRouter);\n","function getScript(url) {\n  const script = document.createElement(\"script\");\n  script.src = url;\n  script.async = true;\n  document.head.appendChild(script);\n}\n\n/**\n * @param {string} googleAnalyticsId\n */\nexport function loadGoogleAnalytics(googleAnalyticsId: string) {\n  if (!googleAnalyticsId) return;\n\n  if (googleAnalyticsId.startsWith(\"G\")) {\n    // v4\n    const dataLayer = [];\n    window.dataLayer = dataLayer;\n    window.gtag = function () {\n      dataLayer.push(arguments);\n    };\n    gtag(\"js\", new Date());\n    gtag(\"config\", googleAnalyticsId);\n\n    getScript(\"https://www.googletagmanager.com/gtag/js?id=\" + googleAnalyticsId);\n  } else if (googleAnalyticsId.startsWith(\"UA\")) {\n    // v3\n    window.ga = function () {\n      (ga.q = ga.q || []).push(arguments);\n    };\n    ga.l = +new Date();\n\n    import(\"autotrack/lib/plugins/event-tracker\");\n    import(\"autotrack/lib/plugins/outbound-link-tracker\");\n    import(\"autotrack/lib/plugins/url-change-tracker\");\n\n    ga(\"create\", googleAnalyticsId, \"auto\");\n    ga(\"require\", \"eventTracker\");\n    ga(\"require\", \"outboundLinkTracker\");\n    ga(\"require\", \"urlChangeTracker\");\n    ga(\"send\", \"pageview\");\n\n    getScript(\"https://www.google-analytics.com/analytics.js\");\n  } else {\n    console.error(\"Invalid Google Analytics ID: \" + googleAnalyticsId);\n  }\n}\n\nloadGoogleAnalytics();\n","import { appState, initAppStateStore } from \"@/appState\";\nimport { loadGoogleAnalytics } from \"@/misc/analytics\";\n\n// Wait for getSessionInfo JSONP API returns\nasync function waitForSessionInitialization() {\n  const sessionInfo =\n    window.sessionInfo ||\n    (await new Promise(resolve => {\n      window.getSessionInfoCallback = sessionInfo => {\n        resolve(sessionInfo);\n        delete window.getSessionInfoCallback;\n      };\n    }));\n\n  delete window.sessionInfo;\n\n  appState.currentUser = sessionInfo.userMeta;\n  appState.currentUserJoinedGroupsCount = sessionInfo.joinedGroupsCount;\n  appState.currentUserPrivileges = sessionInfo.userPrivileges || [];\n  appState.userPreference = sessionInfo.userPreference || {};\n  appState.serverPreference = sessionInfo.serverPreference;\n  appState.serverVersion = sessionInfo.serverVersion;\n}\n\nexport default async function initApp() {\n  await Promise.all([initAppStateStore(), waitForSessionInitialization()]);\n  loadGoogleAnalytics(appState.serverPreference.misc.googleAnalyticsId);\n}\n\nexport const refreshSession = async () => {\n  window.refreshSession(appState.token);\n  await waitForSessionInitialization();\n};\n","import { useIntl } from \"react-intl\";\n\nimport { Localizer, unescapeLocalizedMessage } from \"@/locales\";\n\n/**\n * Return a react-intl function & object.\n *\n * If the result is used as a function, and `defaultModuleName` is passed, then the leading\n * `defaultModuleName` in the message id could be omitted.\n * e.g. `\"problem.header.title\"` could be `\".header.title\"`\n *\n * @param defaultModuleName The default module name of localized message.\n */\nexport function useLocalizer(defaultModuleName?: string) {\n  const intl = useIntl();\n  const localizer: Localizer = (messageId, paramaters) =>\n    unescapeLocalizedMessage(\n      intl.formatMessage(\n        {\n          id: messageId.startsWith(\".\") ? defaultModuleName + messageId : messageId\n        },\n        paramaters as Record<string, string>\n      )\n    );\n\n  return Object.assign(localizer, intl);\n}\n","import React, { useState, useRef } from \"react\";\nimport { useDebouncedCallback } from \"use-debounce\";\n\nexport function useFieldCheck(\n  fieldValue: string,\n  alwaysCheck: boolean,\n  debounce: number | false,\n  syncCheck?: (fieldValue: string) => boolean | string,\n  asyncCheck?: (fieldValue: string) => Promise<boolean | string>\n): [\n  (forceCheck?: boolean) => Promise<void>,\n  (forceRecheck?: boolean) => Promise<boolean>,\n  () => \"\" | \"error\" | \"success\" | \"warning\" | \"validating\",\n  () => React.ReactNode,\n  () => string\n] {\n  const [fieldChecking, setFieldChecking] = useState(false);\n  const [fieldCheckStatus, setFieldCheckStatus] = useState<string | boolean>(false);\n  const [fieldValueLastChecked, setFieldValueLastChecked] = useState(null);\n\n  const fieldValueRef = useRef<string>();\n  fieldValueRef.current = fieldValue;\n\n  const fieldCheckStatusRef = useRef<boolean | string>();\n  fieldCheckStatusRef.current = fieldCheckStatus;\n\n  let onDoneRef = useRef<() => void>(null);\n\n  async function checkField(forceCheck?: boolean) {\n    // Do NOT check if the value is not changed\n    if (fieldChecking || (fieldValueLastChecked === fieldValue && !alwaysCheck && !forceCheck)) return;\n\n    // Do NOT check if is already checking\n    setFieldChecking(true);\n\n    async function check(value: string): Promise<string | boolean> {\n      const syncCheckResult = !syncCheck || syncCheck(value);\n      if (syncCheckResult !== true) return syncCheckResult;\n\n      setFieldCheckStatus(false); // Remove error message\n      const asyncCheckResult = !asyncCheck || (await asyncCheck(value));\n      if (asyncCheckResult !== true) return asyncCheckResult;\n\n      return true;\n    }\n\n    // Check again if value modified while checking\n    while (1) {\n      const checkedValue = fieldValueRef.current;\n      const status = await check(checkedValue);\n      if (fieldValueRef.current === checkedValue) {\n        setFieldCheckStatus(status);\n        break;\n      }\n    }\n\n    setFieldValueLastChecked(fieldValueRef.current);\n    setFieldChecking(false);\n\n    if (onDoneRef.current) {\n      onDoneRef.current();\n      onDoneRef.current = null;\n    }\n  }\n\n  const debouncedCheckField = useDebouncedCallback(checkField, debounce || 1).callback;\n\n  // If NOT checked, start a check and wait for it\n  // If already checked, return immediately\n  // If checking, wait for it\n  // Return if the value passed validation\n  // Used when the being checked value if required\n  async function waitForCheck(forceRecheck?: boolean): Promise<boolean> {\n    if (fieldValueLastChecked === null || fieldChecking || forceRecheck) {\n      const promise = new Promise<void>(res => (onDoneRef.current = res));\n      if (!fieldChecking || forceRecheck) checkField(true);\n      await promise;\n    }\n\n    return fieldCheckStatusRef.current === true;\n  }\n\n  function getUIValidateStatus() {\n    if (fieldChecking) return \"validating\";\n    else if (typeof fieldCheckStatus === \"string\") return \"error\";\n    else if (fieldCheckStatus === true) return \"success\";\n    else return \"\";\n  }\n\n  function getUIHelp() {\n    if (typeof fieldCheckStatus === \"string\") {\n      if (fieldCheckStatus.indexOf(\"\\n\") !== -1) return <div style={{ marginBottom: 6 }}>{fieldCheckStatus}</div>;\n      else return fieldCheckStatus;\n    }\n    return null;\n  }\n\n  function getCurrentValue() {\n    return fieldValueRef.current;\n  }\n\n  // FIXME: debouncedCheckField won't return a promise\n  return [\n    debounce ? async () => void debouncedCheckField() : checkField,\n    waitForCheck,\n    getUIValidateStatus,\n    getUIHelp,\n    getCurrentValue\n  ];\n}\n","import { useRef, useState } from \"react\";\n\nexport function useFieldCheckSimple(\n  fieldValue: string,\n  check?: (fieldValue: string) => boolean\n): [() => boolean, boolean] {\n  const checkResultRef = useRef(true);\n  const [checkResultState, setCheckResultState] = useState(true);\n\n  const checkField = () => setCheckResultState((checkResultRef.current = check(fieldValue)));\n\n  return [\n    () => {\n      checkField();\n      return checkResultRef.current;\n    },\n    !checkResultState\n  ];\n}\n","import React, { useState } from \"react\";\nimport { Modal, ModalProps } from \"semantic-ui-react\";\n\nexport function useDialog(\n  props: ModalProps,\n  header: React.ReactNode | (() => React.ReactNode),\n  content: React.ReactNode | (() => React.ReactNode),\n  actions: React.ReactNode | (() => React.ReactNode)\n) {\n  const [open, setOpen] = useState(false);\n  return {\n    element: (\n      <Modal {...props} open={open}>\n        {open && (typeof header === \"function\" ? header() : header)}\n        <Modal.Content>{open && (typeof content === \"function\" ? content() : content)}</Modal.Content>\n        <Modal.Actions>{open && (typeof actions === \"function\" ? actions() : actions)}</Modal.Actions>\n      </Modal>\n    ),\n    isOpen: open,\n    open: () => setOpen(true),\n    close: () => setOpen(false)\n  };\n}\n","import { useCurrentRoute } from \"react-navi\";\nimport { useNavigationChecked } from \"@/utils/hooks\";\n\nexport function useLoginOrRegisterNavigation(bindLoginOrRegister?: \"login\" | \"register\" | \"forgot\") {\n  const navigation = useNavigationChecked();\n  const currentRoute = useCurrentRoute();\n\n  return (loginOrRegister?: \"login\" | \"register\" | \"forgot\") => {\n    if (!loginOrRegister) loginOrRegister = bindLoginOrRegister;\n\n    // Save the current url for redirecting back\n    let loginRedirectUrl: string;\n    if (![\"/login\", \"/register\", \"/forgot\"].includes(currentRoute.url.pathname)) {\n      loginRedirectUrl = currentRoute.url.pathname + currentRoute.url.search + currentRoute.url.hash;\n    } else {\n      loginRedirectUrl = currentRoute.url.query.loginRedirectUrl;\n    }\n\n    navigation.navigate({\n      pathname: \"/\" + loginOrRegister,\n      query: loginRedirectUrl && {\n        loginRedirectUrl\n      }\n    });\n  };\n}\n","import { useRef, useEffect } from \"react\";\nimport SocketIO from \"socket.io-client\";\nimport SocketIOParser from \"socket.io-msgpack-parser\";\n\nexport function useSocket(\n  namespace: string,\n  query: Record<string, string>,\n  onInit: (socket: SocketIOClient.Socket) => void,\n  onConnect: (socket: SocketIOClient.Socket) => void,\n  useOrNot: boolean\n): SocketIOClient.Socket {\n  const refSocket = useRef<SocketIOClient.Socket>(null);\n\n  useEffect(() => {\n    if (useOrNot) {\n      refSocket.current = SocketIO(window.apiEndpoint + namespace, {\n        path: \"/api/socket\",\n        transports: [\"websocket\"],\n        query: query,\n        ...{ parser: SocketIOParser }\n      });\n      refSocket.current.on(\"error\", (err: any) => console.log(\"SocketIO error:\", err));\n      refSocket.current.on(\"disconnect\", (reason: number) => console.log(\"SocketIO disconnect:\", reason));\n      refSocket.current.on(\"reconnect\", (attempt: number) => console.log(\"SocketIO reconnect:\", attempt));\n      refSocket.current.on(\"connect\", () => onConnect(refSocket.current));\n      onInit(refSocket.current);\n      return () => refSocket.current.disconnect();\n    }\n  }, []);\n\n  return refSocket.current;\n}\n","import ResizeSensor from \"css-element-queries/src/ResizeSensor\";\nimport { useEffect, useState } from \"react\";\n\nexport function useBoundingRect<K extends keyof DOMRect, T extends HTMLElement = HTMLElement>(\n  property: K\n): [DOMRect[K], (element: T) => void, T];\nexport function useBoundingRect<T extends HTMLElement = HTMLElement>(): [DOMRect, (element: T) => void, T];\n\nexport function useBoundingRect<K extends keyof DOMRect, T extends HTMLElement = HTMLElement>(\n  property?: K\n): [DOMRect[K] | DOMRect, (element: T) => void, T] {\n  const [element, setElement] = useState<T>();\n  const [value, setValue] = useState<DOMRect[K] | DOMRect>(null);\n\n  function update() {\n    if (element) {\n      const rect = element.getBoundingClientRect();\n      if (property != null) setValue(rect[property]);\n      else setValue(rect);\n    }\n  }\n\n  useEffect(() => {\n    if (element) {\n      update();\n      const resizeSensor = new ResizeSensor(element, update);\n      return () => resizeSensor.detach();\n    }\n  }, [element]);\n\n  return [value, setElement, element];\n}\n","import { useEffect, useRef, useState } from \"react\";\n\n/**\n * Use if the screen width is in [`l`, `r`)\n *\n * @note `l` and `r` must be constant values.\n */\nexport function useScreenWidthWithin(l: number, r: number): boolean {\n  const refMediaQueryList = useRef<MediaQueryList>();\n\n  // Initialization\n  if (!refMediaQueryList.current) {\n    refMediaQueryList.current = Number.isFinite(r)\n      ? window.matchMedia(`only screen and (min-width: ${l}px) and (max-width: ${r - 1}px)`)\n      : window.matchMedia(`only screen and (min-width: ${l}px)`);\n  }\n\n  const [result, setResult] = useState(refMediaQueryList.current.matches);\n\n  useEffect(() => {\n    function onChange(e: MediaQueryListEvent) {\n      setResult(e.matches);\n    }\n\n    if (refMediaQueryList.current.addEventListener) {\n      refMediaQueryList.current.addEventListener(\"change\", onChange);\n      return () => refMediaQueryList.current.removeEventListener(\"change\", onChange);\n    } else {\n      refMediaQueryList.current.addListener(onChange);\n      return () => refMediaQueryList.current.removeListener(onChange);\n    }\n  });\n\n  return result;\n}\n","import { useState } from \"react\";\n\nexport function useAsyncCallbackPending<T extends (...args: unknown[]) => Promise<unknown>>(\n  callback: T,\n  returnValueWhenPending?: ReturnType<T>\n): [boolean, T] {\n  const [pending, setPending] = useState(false);\n\n  return [\n    pending,\n    (async (...args: Parameters<T>) => {\n      if (pending) return returnValueWhenPending;\n      setPending(true);\n      try {\n        return await callback(...args);\n      } finally {\n        setPending(false);\n      }\n    }) as T\n  ];\n}\n","import { useEffect, useState } from \"react\";\n\nexport function useFocusWithin(): [boolean, (element: HTMLElement) => void] {\n  const [element, setElement] = useState<HTMLElement>();\n  const [focuseWithin, setFocuseWithin] = useState(false);\n  useEffect(() => {\n    if (element) {\n      const onFocus = () => setFocuseWithin(true);\n      const onBlur = () => setFocuseWithin(false);\n      element.addEventListener(\"focus\", onFocus);\n      element.addEventListener(\"blur\", onBlur);\n\n      return () => {\n        element.removeEventListener(\"focus\", onFocus);\n        element.removeEventListener(\"blur\", onBlur);\n      };\n    }\n  }, [element]);\n\n  return [focuseWithin, setElement];\n}\n","import React from \"react\";\nimport { useGoogleReCaptcha } from \"react-google-recaptcha-v3\";\n\nimport { appState } from \"@/appState\";\nimport { useLocalizer } from \"./useLocalizer\";\n\nexport function useRecaptcha() {\n  const { executeRecaptcha } = useGoogleReCaptcha();\n  const _ = useLocalizer(\"common.recaptcha\");\n\n  const recaptcha = appState.serverPreference.security.recaptchaEnabled\n    ? appState.currentUserHasPrivilege(\"SkipRecaptcha\")\n      ? async () => \"skip\"\n      : async (action: string) => {\n          try {\n            return await executeRecaptcha(action);\n          } catch (e) {\n            console.error(\"Recaptcha Error:\", e);\n            return null;\n          }\n        }\n    : async () => \"\";\n\n  return Object.assign(recaptcha, {\n    getCopyrightMessage: (className: string) =>\n      appState.serverPreference.security.recaptchaEnabled ? (\n        <span className={className} dangerouslySetInnerHTML={{ __html: _(\".copyright\") }} />\n      ) : null\n  });\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { observable } from \"mobx\";\nimport { useNavigation, Link as NaviLink } from \"react-navi\";\nimport { LinkProps } from \"react-navi/dist/types/Link\";\n\nimport { useLocalizer } from \"./useLocalizer\";\n\nclass ConfirmNavigationState {\n  @observable\n  count = 0;\n}\n\nconst confirmNavigationState = new ConfirmNavigationState();\n\nwindow.addEventListener(\"beforeunload\", e => {\n  if (confirmNavigationState.count > 0) {\n    e.preventDefault();\n    e.returnValue = \"\";\n    return \"\";\n  }\n});\n\nfunction useNavigationConfirm() {\n  const _ = useLocalizer(\"common\");\n\n  return function confirmNavigation() {\n    if (confirmNavigationState.count > 0) {\n      return confirm(_(\".confirm_navigation\"));\n    }\n\n    return true;\n  };\n}\n\nexport function useNavigationChecked() {\n  const navigation = useNavigation();\n  const confirmNavigation = useNavigationConfirm();\n\n  function wrap<Method extends keyof typeof navigation>(method: Method): typeof navigation[Method] {\n    return function () {\n      if (!confirmNavigation()) return;\n      return (navigation[method] as Function).apply(navigation, arguments);\n    } as any;\n  }\n\n  return {\n    goBack: wrap(\"goBack\"),\n    navigate: wrap(\"navigate\"),\n    refresh: wrap(\"refresh\"),\n    subscribe: navigation.subscribe.bind(navigation),\n    unconfirmed: {\n      goBack: navigation.goBack.bind(navigation),\n      navigate: navigation.navigate.bind(navigation),\n      refresh: navigation.refresh.bind(navigation)\n    }\n  };\n}\n\nexport function useConfirmNavigation(): [boolean, (confirm: boolean) => void] {\n  const refConfirm = useRef<boolean>(false);\n  const [stateConfirm, setStateConfirm] = useState(false);\n\n  useEffect(() => () => refConfirm.current && confirmNavigationState.count--, []);\n\n  return [\n    stateConfirm,\n    (confirm: boolean) => {\n      if (confirm != refConfirm.current) {\n        refConfirm.current = confirm;\n        setStateConfirm(confirm);\n\n        confirmNavigationState.count += confirm ? 1 : -1;\n      }\n    }\n  ];\n}\n\nexport const Link: React.FC<LinkProps> = props => {\n  const confirmNavigation = useNavigationConfirm();\n\n  return React.createElement(NaviLink, {\n    ...props,\n    onClick: e => {\n      if (!confirmNavigation()) e.preventDefault();\n      if (props.onClick) return props.onClick(e);\n    }\n  });\n};\n","module.exports = [\"body\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\".ui.button\",\".ui.text.container\",\".ui.header\",\".ui.input > input\",\".ui.list .list > .item .header\",\".ui.list > .item .header\",\".ui.steps .step .title\",\".ui.form input:not([type])\",\".ui.form input[type=\\\"date\\\"]\",\".ui.form input[type=\\\"datetime-local\\\"]\",\".ui.form input[type=\\\"email\\\"]\",\".ui.form input[type=\\\"number\\\"]\",\".ui.form input[type=\\\"password\\\"]\",\".ui.form input[type=\\\"search\\\"]\",\".ui.form input[type=\\\"tel\\\"]\",\".ui.form input[type=\\\"time\\\"]\",\".ui.form input[type=\\\"text\\\"]\",\".ui.form input[type=\\\"file\\\"]\",\".ui.form input[type=\\\"url\\\"]\",\".ui.input textarea\",\".ui.form textarea\",\".ui.menu\",\".ui.message .header\",\".ui.cards > .card > .content > .header\",\".ui.card > .content > .header\",\".ui.items > .item > .content > .header\",\".ui.statistics .statistic > .value\",\".ui.statistic > .value\",\".ui.statistics .statistic > .label\",\".ui.statistic > .label\",\".ui.accordion .title:not(.ui)\",\".ui.modal > .header\",\".ui.popup > .header\",\".ui.search > .results .result .title\",\".ui.search > .results > .message .header\",\".ui.category.search > .results .category > .name\"];","// Public path is specfied in HTML and maybe dynamicly generated by server for different request.\n// See `window.publicPath` in ../public/index.html\n__webpack_public_path__ = window[\"publicPath\"];\n\n/**\n * The initialization sequence:\n *\n * index.ts                  (webpack entry)\n * => index.tsx              (app entry)\n *    => misc/webfonts.ts\n *    => initApp.ts          (session initialization)\n *       => appState.ts      (app global state)\n *       => misc/analytics.js\n *    => App.tsx             (top-level react component)\n *       => AppRouter.tsx    (react routing)\n *          => Layout.tsx    (app view layout)\n *          => page routes\n */\nrequire(\"./index.tsx\");\n\nexport {}; // Fix the error \"All files must be modules when the '--isolatedModules' flag is provided\".\n","export enum Locale {\n  zh_CN = \"zh_CN\",\n  en_US = \"en_US\",\n  ja_JP = \"ja_JP\"\n}\n","import { Locale } from \"@/interfaces/Locale\";\n\n// See escapeLocalizedMessage in messages/importMessages.js\nexport function unescapeLocalizedMessage(text: string) {\n  if (text.startsWith(\" \")) text = text.substr(1);\n  text = text.split(\"&lt;\").join(\"<\").split(\"&amp;\").join(\"&\");\n  return text;\n}\n\nexport async function loadLocaleData(locale: Locale): Promise<Record<string, string>>;\nexport async function loadLocaleData(locale: Locale): Promise<any> {\n  switch (locale) {\n    case Locale.en_US:\n      return await import(\"./messages/en-US\");\n    case Locale.zh_CN:\n      return await import(\"./messages/zh-CN\");\n    case Locale.ja_JP:\n      return await import(\"./messages/ja-JP\");\n  }\n}\n\nexport type LocalizerParameters = Record<React.ReactText, React.ReactText> | React.ReactText[];\nexport type Localizer = (messageId: string, parameters?: LocalizerParameters) => string;\nexport interface ToBeLocalizedText {\n  (_: Localizer): string;\n  isToBeLocalizedText: true;\n}\n\nexport const makeToBeLocalizedText = (messageId: string, parameters?: LocalizerParameters): ToBeLocalizedText =>\n  Object.assign((_: Localizer) => _(messageId, parameters), { isToBeLocalizedText: true as true });\n\nexport const isToBeLocalizedText = (object: any): object is ToBeLocalizedText =>\n  \"isToBeLocalizedText\" in object && object.isToBeLocalizedText === true;\n","import { lazy, Matcher } from \"navi\";\n\n// lazy() accepts a function returns a module, which should have the \"default\" property to be the route\n// If we want to put multiple routes in a module, we should return a fake module to lazy()\nexport default function getRoute<T extends { default: object }>(\n  importFunction: () => Promise<T>,\n  propertyName: string\n): Matcher<any, any> {\n  return lazy(async () => ({\n    default: (await importFunction()).default[propertyName]\n  }));\n}\n","import React, { useEffect } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { HelmetProvider, Helmet } from \"react-helmet-async\";\n\nimport { appState } from \"./appState\";\nimport { updateCodeFontCss, updateContentFontCss, updateUiFontCss } from \"./misc/fonts\";\nimport { setGlobalTheme } from \"./themes\";\n\nimport AppRouter from \"./AppRouter\";\n\nconst App: React.FC = () => {\n  useEffect(() => {\n    updateCodeFontCss(appState.locale);\n    updateContentFontCss(appState.locale);\n    updateUiFontCss(appState.locale);\n  }, [appState.userPreference.font, appState.locale]);\n\n  useEffect(() => {\n    setGlobalTheme(appState.theme);\n  }, [appState.theme]);\n\n  return (\n    <>\n      <HelmetProvider>\n        <Helmet>\n          <meta\n            name=\"viewport\"\n            content={appState.responsiveLayout ? \"width=device-width, initial-scale=1, maximum-scale=1\" : \"width=1024\"}\n          />\n          <title>\n            {appState.title && `${appState.title} - `}\n            {appState.serverPreference.siteName}\n          </title>\n        </Helmet>\n      </HelmetProvider>\n      <AppRouter />\n    </>\n  );\n};\n\nexport default observer(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./themes\";\nimport \"./index.less\";\nimport \"./misc/fonts\";\nimport App from \"./App\";\n\nimport initApp from \"./initApp\";\n\nclass ErrorBoundary extends React.Component<{}, { hasError: boolean }> {\n  constructor(props: {}) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    window.fatalError(\n      [\"There's a fatal error in the application. It may be a bug.\", \"应用程序遇到致命错误，这可能是一个 Bug。\"],\n      error.stack\n    );\n  }\n\n  render() {\n    if (this.state.hasError) return <></>;\n    return this.props.children;\n  }\n}\n\ninitApp()\n  .then(() => {\n    ReactDOM.render(\n      <ErrorBoundary>\n        <App />\n      </ErrorBoundary>,\n      document.getElementById(\"root\")\n    );\n  })\n  .catch(err => {\n    window.fatalError(\n      [\n        \"There's an error initializing the application. It may be a bug or network issue.\",\n        \"初始化应用程序时出错，这可能是一个 Bug 或网络故障。\"\n      ],\n      err.stack\n    );\n  });\n","import { CodeHighlighterTheme } from \"@/utils/CodeHighlighter\";\nimport { ThemeMeta } from \".\";\n\nimport \"./pure.css\";\n\nexport default <ThemeMeta>{\n  highlight: CodeHighlighterTheme.Tomorrow,\n  editor: \"tomorrow\"\n};\n","import { CodeHighlighterTheme } from \"@/utils/CodeHighlighter\";\nimport { ThemeMeta } from \".\";\n\nimport \"./far.css\";\n\nexport default <ThemeMeta>{\n  highlight: CodeHighlighterTheme.TomorrowNight,\n  editor: \"tomorrow-night\"\n};\n","import { CodeHighlighterTheme, setPrismTheme } from \"@/utils/CodeHighlighter\";\n\nexport interface ThemeMeta {\n  highlight: CodeHighlighterTheme;\n  editor: string;\n}\n\nimport pure from \"./pure\";\nimport far from \"./far\";\n\nexport const defaultLightTheme = \"pure\";\nexport const defaultDarkTheme = \"far\";\n\nexport const themeList: Record<string, ThemeMeta> = {\n  pure,\n  far\n};\n\nexport function setGlobalTheme(theme: string) {\n  document.body.setAttribute(\"data-theme\", theme);\n  setPrismTheme(themeList[theme].highlight);\n}\n","import { Locale } from \"@/interfaces/Locale\";\n\nexport interface LocaleMeta {\n  name: string;\n  flag: string;\n  recaptchaLanguageCode: string;\n}\n\nconst localeMeta: Record<Locale, LocaleMeta> = {\n  [Locale.zh_CN]: {\n    name: \"中文（简体）\",\n    flag: \"cn\",\n    recaptchaLanguageCode: \"zh-CN\"\n  },\n  [Locale.en_US]: {\n    name: \"English\",\n    flag: \"us\",\n    recaptchaLanguageCode: \"en\"\n  },\n  [Locale.ja_JP]: {\n    name: \"日本語\",\n    flag: \"jp\",\n    recaptchaLanguageCode: \"ja\"\n  }\n};\n\nexport default localeMeta;\n","import Prism from \"prismjs\";\n\nimport cssUrlTomorrow from \"@/assets/prism-tomorrow.url.css\";\nimport cssUrlTomorrowNight from \"@/assets/prism-tomorrow-night.url.css\";\n\nfunction normalizeCode(code: string) {\n  return code.split(\"\\r\").join(\"\");\n}\n\nfunction escapeHtml(text: string) {\n  text = text.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\").split(\" \").join(\"&nbsp;\");\n  return text;\n}\n\nexport enum CodeHighlighterTheme {\n  Tomorrow,\n  TomorrowNight\n}\n\nconst cssLinkTag = document.createElement(\"link\");\ncssLinkTag.rel = \"stylesheet\";\ndocument.head.appendChild(cssLinkTag);\n\nexport function setPrismTheme(theme: CodeHighlighterTheme) {\n  switch (theme) {\n    case CodeHighlighterTheme.Tomorrow:\n      cssLinkTag.href = cssUrlTomorrow;\n      break;\n    case CodeHighlighterTheme.TomorrowNight:\n      cssLinkTag.href = cssUrlTomorrowNight;\n      break;\n  }\n}\n\nexport function highlight(code: string, language: string) {\n  code = normalizeCode(code);\n\n  function doHighlight() {\n    if (language) {\n      try {\n        const name = language.trim().toLowerCase();\n        if (name in Prism.languages) {\n          return Prism.highlight(code, Prism.languages[name], name);\n        }\n      } catch (e) {\n        console.error(`Failed to highlight, language = ${language}`, e);\n      }\n    }\n\n    return escapeHtml(code).split(\"\\n\").join(\"<br>\");\n  }\n\n  // See src/assets/prism-tomorrow.url.css\n  return `<div class=\"highlighted\">${doHighlight()}</div>`;\n}\n","import { observable, computed } from \"mobx\";\nimport { computedFn } from \"mobx-utils\";\nimport { create, persist } from \"mobx-persist\";\n\nimport { Locale } from \"./interfaces/Locale\";\nimport { NavButtonName } from \"./layouts/AppLayout\";\n\nimport { defaultLightTheme, defaultDarkTheme, themeList } from \"./themes\";\n\nfunction getBrowserLocale(): Locale {\n  const supportedLocales: string[] = Object.values(Locale);\n  return (\n    ((navigator.languages || [navigator.language])\n      .map(s => s.replace(\"-\", \"_\"))\n      .find(locale => supportedLocales.includes(locale)) as Locale) || Locale.en_US\n  );\n}\n\nexport const browserDefaultLocale = getBrowserLocale();\n\nexport class AppState {\n  constructor() {\n    this.initializationThemeDetection();\n  }\n\n  /* Begin current page info */\n\n  // The current page's title\n  @observable\n  title: string = \"\";\n\n  // Some pages doesn't support responsive layout, set this to false to display PC page on mobile\n  @observable\n  responsiveLayout: boolean = true;\n\n  @observable\n  activeNavButton: NavButtonName;\n\n  enterNewPage(title: string, activeNavButton: NavButtonName = null, responsiveLayout: boolean = true) {\n    this.title = title;\n    this.responsiveLayout = responsiveLayout;\n    this.activeNavButton = activeNavButton;\n  }\n\n  /* End current page info */\n\n  /* Begin localization info */\n\n  // The locale set by user on the page footer, saved in current browser\n  @persist\n  @observable\n  localLocale: Locale = null;\n\n  @computed\n  get locale(): Locale {\n    if (this.localLocale && this.localLocale === (this.userPreference.locale?.system || browserDefaultLocale)) {\n      setTimeout(() => (this.localLocale = null), 0);\n    }\n    return this.localLocale || (this.userPreference.locale?.system as Locale) || browserDefaultLocale;\n  }\n\n  @computed\n  get contentLocale(): Locale {\n    return (this.userPreference.locale?.content as Locale) || this.locale;\n  }\n\n  /* End localization info */\n\n  /* Begin theme info */\n\n  initializationThemeDetection() {\n    const mediaQueryList = window.matchMedia(\"only screen and (prefers-color-scheme: dark)\");\n\n    const onChange = (e: { matches: boolean }) =>\n      (this.browserPreferredTheme = e.matches ? defaultDarkTheme : defaultLightTheme);\n    onChange(mediaQueryList);\n\n    if (mediaQueryList.addEventListener) mediaQueryList.addEventListener(\"change\", onChange);\n    else mediaQueryList.addListener(onChange);\n  }\n\n  @observable\n  browserPreferredTheme: string;\n\n  // This is set if the user change theme but not saved yet\n  @observable\n  temporaryThemeOverride?: string;\n\n  @computed\n  get theme(): string {\n    const themeSelector = (this.temporaryThemeOverride ?? this.userPreference?.theme) || \"auto\";\n    return themeSelector !== \"auto\" && themeSelector in themeList ? themeSelector : this.browserPreferredTheme;\n  }\n\n  @computed\n  get appLogoThemed(): { src: string; style: React.CSSProperties } {\n    const logoSelector = this.serverPreference.misc.appLogoForTheme[this.theme] || \"original\";\n    const logoUrlSelector =\n      logoSelector === \"original\" || logoSelector === \"inverted\" ? this.serverPreference.misc.appLogo : logoSelector;\n    const logoUrl = logoUrlSelector === \"default\" ? `${window.publicPath}logo.svg` : logoUrlSelector;\n    const logoInverted = logoSelector === \"inverted\";\n    return logoUrl\n      ? {\n          src: logoUrl,\n          style: logoInverted\n            ? {\n                filter: \"invert(1)\"\n              }\n            : {}\n        }\n      : null;\n  }\n\n  /* End theme info */\n\n  // TODO: move it out of global app state\n  @persist\n  @observable\n  showTagsInProblemSet: boolean = false;\n\n  /* Begin session info */\n\n  @persist\n  @observable\n  token: string = \"\";\n\n  @persist\n  @observable\n  logout = false;\n\n  @observable\n  currentUser: ApiTypes.UserMetaDto = null;\n\n  @observable\n  currentUserJoinedGroupsCount: number = 0;\n\n  @observable\n  currentUserPrivileges: ApiTypes.GetSessionInfoResponseDto[\"userPrivileges\"] = [];\n\n  currentUserHasPrivilege = computedFn(function (\n    this: AppState,\n    privilege: ApiTypes.GetSessionInfoResponseDto[\"userPrivileges\"][0]\n  ) {\n    return this.currentUser && (this.currentUser.isAdmin || this.currentUserPrivileges.includes(privilege));\n  });\n\n  @observable\n  userPreference: ApiTypes.UserPreferenceDto = {};\n\n  /* End session info */\n\n  /* Begin server info */\n\n  @observable\n  serverPreference: ApiTypes.PreferenceConfig = null;\n\n  @observable\n  serverVersion: ApiTypes.ServerVersionDto = null;\n\n  /* End server info */\n}\n\nconst hydrate = create({\n  storage: localStorage,\n  jsonify: true\n});\n\nexport const appState = new AppState();\n(window as any)._appState = appState;\n\nexport const initAppStateStore = async () => await hydrate(\"appState\", appState);\n"],"sourceRoot":""}