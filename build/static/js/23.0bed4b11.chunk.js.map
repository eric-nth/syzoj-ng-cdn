{"version":3,"sources":["assets/default-avatar.svg","components/UserAvatar.tsx"],"names":["UserAvatar","props","useState","error","setError","imageSize","mini","tiny","small","medium","large","big","huge","massive","size","url","avatar","type","appState","serverPreference","misc","gravatarCdn","endsWith","key","sizeParam","getAvatarUrl","userAvatar","Math","ceil","window","devicePixelRatio","previousUrl","useRef","useEffect","current","imageProps","Object","fromEntries","entries","filter","includes","placeholder","Image","src","defaultAvatar","onError","React","memo","lodashIsEqual"],"mappings":"2LAAe,MAA0B,uC,OCoCzC,IAAMA,EAAwC,SAAAC,GAAU,IAAD,EAC3BC,oBAAS,GADkB,mBAC9CC,EAD8C,KACvCC,EADuC,KAG/CC,EACJJ,EAAMI,WACN,CACEC,KAAM,GACNC,KAAM,GACNC,MAAO,IACPC,OAAQ,IACRC,MAAO,IACPC,IAAK,IACLC,KAAM,IACNC,QAAS,KACTZ,EAAMa,OACR,GAEIC,EAnCR,SAAsBC,EAAgCF,GACpD,OAAQE,EAAOC,MACb,IAAK,WACH,MAAM,GAAN,QAPuBF,EAOOG,IAASC,iBAAiBC,KAAKC,YAN1DN,EAAIO,SAAS,KAAOP,EAApB,UAA6BA,EAA7B,MAMH,kBACEC,EAAOO,IADT,iBAEST,EAFT,gBAGF,IAAK,KACH,IAAIU,EAKJ,OAJgBA,EAAZV,GAAQ,GAAgB,EACnBA,GAAQ,IAAiB,EACzBA,GAAQ,IAAiB,EACjB,EACX,iCAAN,OAAwCE,EAAOO,IAA/C,cAAwDC,GAC1D,IAAK,SACH,MAAM,sBAAN,OAA6BR,EAAOO,IAApC,qBAAoDT,GAlB1D,IAA6BC,EAuCfU,CAAaxB,EAAMyB,WAAYC,KAAKC,KAAKC,OAAOC,iBAAmBzB,IAEzE0B,EAAcC,mBACpBC,qBAAU,WACRF,EAAYG,QAAUnB,KAEpBgB,EAAYG,UAAYnB,GAAOZ,GAAOC,GAAS,GAEnD,IAAM+B,EAAaC,OAAOC,YACxBD,OAAOE,QAAQrC,GAAOsC,QAAO,gBAAEhB,EAAF,2BAAY,CAAC,aAAc,cAAe,YAAa,YAAYiB,SAASjB,OAQ3G,OAAOpB,GAASF,EAAMwC,YACpB,cAACC,EAAA,EAAD,aAAOC,IAAKC,GAAmBT,IAE/B,cAACO,EAAA,EAAD,yBAAOC,IAAK5B,GAASoB,GAArB,IAAiCU,QARnC,WACEzC,GAAS,GACLH,EAAM4C,SAAS5C,EAAM4C,eAUdC,QAAMC,KAAK/C,EAAYgD","file":"static/js/23.0bed4b11.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"4e86f36b9f5e22d0f6a9b02f5e4b4180.svg\";","import React, { useState, useRef, useEffect } from \"react\";\nimport { ImageProps, Image } from \"semantic-ui-react\";\nimport lodashIsEqual from \"lodash.isequal\";\n\nimport defaultAvatar from \"@/assets/default-avatar.svg\";\nimport { appState } from \"@/appState\";\n\ninterface UserAvatarProps extends ImageProps {\n  userAvatar: ApiTypes.UserAvatarDto;\n  placeholder?: boolean;\n  imageSize?: number;\n  onError?: () => void;\n}\n\nfunction ensureTrailingSlash(url: string) {\n  return url.endsWith(\"/\") ? url : `${url}/`;\n}\n\nfunction getAvatarUrl(avatar: ApiTypes.UserAvatarDto, size: number) {\n  switch (avatar.type) {\n    case \"gravatar\":\n      return `${ensureTrailingSlash(appState.serverPreference.misc.gravatarCdn)}avatar/${\n        avatar.key\n      }?size=${size}&default=404`;\n    case \"qq\":\n      let sizeParam: number;\n      if (size <= 40) sizeParam = 1;\n      else if (size <= 100) sizeParam = 3;\n      else if (size <= 140) sizeParam = 4;\n      else sizeParam = 5;\n      return `https://q1.qlogo.cn/g?b=qq&nk=${avatar.key}&s=${sizeParam}`;\n    case \"github\":\n      return `https://github.com/${avatar.key}.png?size=${size}`;\n  }\n}\n\nconst UserAvatar: React.FC<UserAvatarProps> = props => {\n  const [error, setError] = useState(false);\n\n  const imageSize =\n    props.imageSize ||\n    {\n      mini: 35,\n      tiny: 80,\n      small: 150,\n      medium: 300,\n      large: 450,\n      big: 600,\n      huge: 800,\n      massive: 960\n    }[props.size] ||\n    80;\n\n  const url = getAvatarUrl(props.userAvatar, Math.ceil(window.devicePixelRatio * imageSize));\n\n  const previousUrl = useRef<string>();\n  useEffect(() => {\n    previousUrl.current = url;\n  });\n  if (previousUrl.current !== url && error) setError(false);\n\n  const imageProps = Object.fromEntries(\n    Object.entries(props).filter(([key]) => ![\"userAvatar\", \"placeholder\", \"imageSize\", \"errorRef\"].includes(key))\n  );\n\n  function onImageError() {\n    setError(true);\n    if (props.onError) props.onError();\n  }\n\n  return error || props.placeholder ? (\n    <Image src={defaultAvatar} {...imageProps} />\n  ) : (\n    <Image src={url} {...imageProps} onError={onImageError} />\n  );\n};\n\nexport default React.memo(UserAvatar, lodashIsEqual);\n"],"sourceRoot":""}