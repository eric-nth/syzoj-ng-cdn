{"version":3,"sources":["pages/problem/view/types/TraditionalProblemView.tsx"],"names":["TraditionalProblemSubmitView","props","showSkipSamples","judgeInfo","runSamples","mainContent","EditorWrapper","language","submissionContent","value","code","onChange","newValue","onUpdateSubmissionContent","sidebarContent","objectPath","submitDisabled","traditionalProblemViews","Labels","React","memo","_","useLocalizer","timeLimit","getLimit","memoryLimit","fileIo","size","color","name","trigger","content","className","style","align","fileIoName","inputFilename","outputFilename","hoverable","on","position","SubmitView","observer","getDefaultSubmissionContent","Object","assign","CodeLanguageAndOptions","getDefault","isSubmittable","hasAnySubtaskTestcase","enableStatistics"],"mappings":"oQAoFIA,EAA4E,SAAAC,GAC9E,OACE,mCACE,cAAC,IAAD,2BACMA,GADN,IAEEC,gBAAiBD,EAAME,UAAUC,WACjCC,YACE,cAAC,IAAgBC,cAAjB,UACE,cAAC,IAAD,CACEC,SAAUN,EAAMO,kBAAkBD,SAClCE,MAAOR,EAAMO,kBAAkBE,KAC/BC,SAAU,SAAAC,GAAQ,OAAIX,EAAMY,0BAA0B,OAAQD,QAIpEE,eACE,mCACE,cAAC,IAAD,aAAwBC,WAAW,IAAOd,MAG9Ce,gBAAiBf,EAAMO,kBAAkBE,WAQ3CO,EAAiE,CACrEC,OA/FwEC,IAAMC,MAAK,SAAAnB,GACnF,IAAMoB,EAAIC,YAAa,WAEjBC,EAAYC,YAASvB,EAAME,UAAW,aACtCsB,EAAcD,YAASvB,EAAME,UAAW,eACxCuB,EACJzB,EAAME,WAAcF,EAAME,UAA4EuB,OAExG,OACE,qCACGH,GACC,eAAC,IAAD,CAAOI,KAAM1B,EAAM0B,KAAMC,MAAM,OAA/B,UACE,cAAC,IAAD,CAAMC,KAAK,UACVN,EAAY,SAGhBE,GACC,eAAC,IAAD,CAAOE,KAAM1B,EAAM0B,KAAMC,MAAM,OAA/B,UACE,cAAC,IAAD,CAAMC,KAAK,cACVJ,EAAc,UAGlBC,GACC,cAAC,IAAD,CACEI,QACE,eAAC,IAAD,CAAOH,KAAM1B,EAAM0B,KAAMC,MAAM,SAA/B,UACE,cAAC,IAAD,CAAMC,KAAK,SACVR,EAAE,qBAGPU,QACE,uBAAOC,UAAWC,IAAMP,OAAxB,SACE,kCACE,+BACE,oBAAIQ,MAAM,QAAQF,UAAWC,IAAME,WAAnC,SACE,iCAASd,EAAE,qBAEb,6BAAKK,EAAOU,mBAEd,+BACE,oBAAIF,MAAM,QAAQF,UAAWC,IAAME,WAAnC,SACE,iCAASd,EAAE,sBAEb,6BAAKK,EAAOW,yBAKpBC,WAAS,EACTC,GAAG,QACHC,SAAS,wBA8CjBC,WAJFzC,EAA+B0C,YAAS1C,GAKtC2C,4BAA6B,kBAC3BC,OAAOC,OACL,CACEnC,KAAM,IAERoC,IAAuBC,eAE3BC,cAAeC,IACfC,iBAAkB,kBAAM,IAGXjC","file":"static/js/159.cdf107ad.chunk.js","sourcesContent":["import React from \"react\";\nimport { Icon, Label, Popup } from \"semantic-ui-react\";\nimport { observer } from \"mobx-react\";\n\nimport style from \"./TraditionalProblemView.module.less\";\n\nimport { useLocalizer } from \"@/utils/hooks\";\nimport { CodeLanguage } from \"@/interfaces/CodeLanguage\";\nimport CodeEditor from \"@/components/LazyCodeEditor\";\n\nimport { JudgeInfoTraditional } from \"../../judge-settings/types/TraditionalProblemEditor\";\nimport { ProblemTypeLabelsProps, ProblemTypeSubmitViewProps, ProblemTypeView } from \"../common/interface\";\nimport SubmitViewFrame from \"../common/SubmitViewFrame\";\nimport CodeLanguageAndOptions from \"../common/CodeLanguageAndOptions\";\nimport { getLimit, hasAnySubtaskTestcase } from \"../common\";\n\ntype TraditionalProblemLabelsProps = ProblemTypeLabelsProps<JudgeInfoTraditional>;\n\nconst TraditionalProblemLabels: React.FC<TraditionalProblemLabelsProps> = React.memo(props => {\n  const _ = useLocalizer(\"problem\");\n\n  const timeLimit = getLimit(props.judgeInfo, \"timeLimit\");\n  const memoryLimit = getLimit(props.judgeInfo, \"memoryLimit\");\n  const fileIo =\n    props.judgeInfo && (props.judgeInfo as { fileIo: { inputFilename: string; outputFilename: string } }).fileIo;\n\n  return (\n    <>\n      {timeLimit && (\n        <Label size={props.size} color=\"pink\">\n          <Icon name=\"clock\" />\n          {timeLimit + \" ms\"}\n        </Label>\n      )}\n      {memoryLimit && (\n        <Label size={props.size} color=\"blue\">\n          <Icon name=\"microchip\" />\n          {memoryLimit + \" MiB\"}\n        </Label>\n      )}\n      {fileIo && (\n        <Popup\n          trigger={\n            <Label size={props.size} color=\"orange\">\n              <Icon name=\"file\" />\n              {_(`.fileio.fileio`)}\n            </Label>\n          }\n          content={\n            <table className={style.fileIo}>\n              <tbody>\n                <tr>\n                  <td align=\"right\" className={style.fileIoName}>\n                    <strong>{_(`.fileio.input`)}</strong>\n                  </td>\n                  <td>{fileIo.inputFilename}</td>\n                </tr>\n                <tr>\n                  <td align=\"right\" className={style.fileIoName}>\n                    <strong>{_(`.fileio.output`)}</strong>\n                  </td>\n                  <td>{fileIo.outputFilename}</td>\n                </tr>\n              </tbody>\n            </table>\n          }\n          hoverable\n          on=\"hover\"\n          position=\"bottom center\"\n        />\n      )}\n    </>\n  );\n});\n\ninterface SubmissionContent {\n  language: CodeLanguage;\n  code: string;\n  compileAndRunOptions: any;\n  skipSamples?: boolean;\n}\n\ntype TraditionalProblemSubmitViewProps = ProblemTypeSubmitViewProps<JudgeInfoTraditional, SubmissionContent>;\n\nlet TraditionalProblemSubmitView: React.FC<TraditionalProblemSubmitViewProps> = props => {\n  return (\n    <>\n      <SubmitViewFrame\n        {...props}\n        showSkipSamples={props.judgeInfo.runSamples}\n        mainContent={\n          <SubmitViewFrame.EditorWrapper>\n            <CodeEditor\n              language={props.submissionContent.language}\n              value={props.submissionContent.code}\n              onChange={newValue => props.onUpdateSubmissionContent(\"code\", newValue)}\n            />\n          </SubmitViewFrame.EditorWrapper>\n        }\n        sidebarContent={\n          <>\n            <CodeLanguageAndOptions objectPath=\"\" {...props} />\n          </>\n        }\n        submitDisabled={!props.submissionContent.code}\n      />\n    </>\n  );\n};\n\nTraditionalProblemSubmitView = observer(TraditionalProblemSubmitView);\n\nconst traditionalProblemViews: ProblemTypeView<JudgeInfoTraditional> = {\n  Labels: TraditionalProblemLabels,\n  SubmitView: TraditionalProblemSubmitView,\n  getDefaultSubmissionContent: () =>\n    Object.assign(\n      {\n        code: \"\"\n      },\n      CodeLanguageAndOptions.getDefault()\n    ),\n  isSubmittable: hasAnySubtaskTestcase,\n  enableStatistics: () => true\n};\n\nexport default traditionalProblemViews;\n"],"sourceRoot":""}