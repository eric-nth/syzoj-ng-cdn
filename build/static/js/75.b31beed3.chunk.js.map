{"version":3,"sources":["pages/problem/judge-settings/common/TestDataFileSelector.tsx","pages/problem/judge-settings/common/MetaEditor.tsx","pages/problem/judge-settings/common/SubtasksEditor.tsx","pages/problem/judge-settings/common/detect-testcases.ts"],"names":["TestDataFileSelector","props","_","useLocalizer","uiProps","className","style","fileSelect","type","itemSearchDropdown","formSelect","label","text","value","testData","some","file","filename","iconInputOrOutput","name","trigger","iconFile","content","position","undefined","placeholder","options","optional","key","invisible","map","getFileIcon","fileSize","formatFileSize","size","onChange","e","item","selection","search","noResultsMessage","Select","open","length","MetaEditor","judgeInfo","enableTimeMemoryLimit","Group","Field","width","labeledInput","timeLimit","labelPosition","icon","iconPosition","Number","isSafeInteger","onUpdateJudgeInfo","memoryLimit","enableFileIo","fileIo","inputFilename","readOnly","outputFilename","enableRunSamples","Checkbox","checkbox","checked","runSamples","observer","judgeInfoProcessor","parseJudgeInfo","raw","normalizeJudgeInfo","Object","assign","SubtaskScoringType","randomColorFromUuid","uuid","hex","split","join","x","i","parseInt","substr","SubtaskEditorTastcaseItem","useState","refOptionsButton","setRefOptionsButton","Menu","menu","menuTestcase","menuTestcaseFirstLine","testcase","attached","Item","itemTestcaseTitle","testcaseIndex","enableInputFile","inputFile","onUpdate","outputFileNotNeeded","enableUserOutputFilename","itemTestcaseUserOutputFilename","itemTestcaseTimeLimit","Input","transparent","defaultTimeLimit","itemLabel","Dropdown","itemWithIcon","onClick","onAddTestcaseBefore","onAddTestcaseAfter","menuTestcaseSecondLine","itemTestcaseScore","defaultPercentagePoints","points","disabled","testcaseCount","enableOutputFile","outputFile","userOutputFilename","itemTestcaseMemoryLimit","defaultMemoryLimit","Ref","innerRef","onMoveUp","onMoveDown","Popup","context","Button","negative","onDelete","on","SubtaskEditor","subtaskCount","testcasesExpanded","setTestcasesExpanded","useRef","sumSpecfiedPercentagePoints","subtask","testcases","filter","reduce","sum","countUnspecfiedPercentagePoints","Math","round","autoAddTestcaseRegexForInput","setAutoAddTestcaseRegexForInput","autoAddTestcaseRegexForOutput","setAutoAddTestcaseRegexForOutput","autoAddTestcaseErrorCompileForInput","setAutoAddTestcaseErrorCompileForInput","autoAddTestcaseErrorCompileForOutput","setAutoAddTestcaseErrorCompileForOutput","autoAddTestcaseErrorMatching","setAutoAddTestcaseErrorMatching","autoAddTestcaseMatchResult","setAutoAddTestcaseMatchResult","getDefaultRegexForOutput","regexForInput","re","endsWith","substring","getDefaultRegexForInput","regexForOutput","autoAddTestcaseDoMatching","input","output","defaultInput","defaultOutput","inputIsDefault","outputIsDefault","RegExp","message","matchesForInput","match","matchesForOutput","result","groupCount","countInInputFilename","String","countInOutputFilename","currentMatchForInput","shift","foundNonMatch","j","push","splice","getNewTestcases","matchResult","m","doReplace","autoAddTestcaseDialog","close","autoAddTestcaseError","useDialog","Header","dialogHeader","dialogHeaderInfo","subtaskIndex","autoAddTestcasesHelp","Form","Message","dialogMessage","error","success","info","count","toString","Table","textAlign","compact","celled","unstackable","Row","Fragment","HeaderCell","Body","Array","ceil","a","ids","id","Cell","positive","current","toAppend","concat","primary","isWideScreen","useScreenWidthWithin","Infinity","element","menuHeader","itemTitle","subtaskTitleTestcasesCount","itemSubtaskTimeLimit","itemSubtaskMemoryLimit","itemSubtaskScore","temp","sort","b","onAddSubtaskBefore","onAddSubtaskAfter","onAddTestcase","as","scoringType","itemScoringTypeDropdown","values","updateInfo","onUpdateTestcase","onDeleteTestcase","onMoveTestcaseUp","onMoveTestcaseDown","menuFooter","itemDependencies","multiple","dependencies","keys","SubtasksEditor","autoTestcases","useMemo","outputOptional","toLowerCase","find","ext","slice","includes","inputA","numbersA","inputB","numbersB","firstNonEqualIndex","max","findIndex","inputOptional","str","outputA","outputB","detectTestcasesByMatchingOutputToInput","subtasks","Sum","subtasksBackup","setSubtasksBackup","updateSubtasks","$spec","update","mapSubtaskDependencyIdReference","callback","onMoveSubtask","direction","swappingSubtask","$splice","$apply","onAddSubtask","template","onMoveTestcase","dangerouslySetInnerHTML","__html","subtasksEditor","index","$merge","onUpdateSubtask","$set","colSpan","isArray","rawSubtask","rawTestcase"],"mappings":"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","file":"static/js/75.b31beed3.chunk.js","sourcesContent":["import React from \"react\";\nimport { Dropdown, Form, Icon, FormSelectProps, DropdownProps, SemanticICONS, Popup } from \"semantic-ui-react\";\n\nimport style from \"./TestDataFileSelector.module.less\";\n\nimport { useLocalizer } from \"@/utils/hooks\";\nimport getFileIcon from \"@/utils/getFileIcon\";\nimport formatFileSize from \"@/utils/formatFileSize\";\nimport { EmojiRenderer } from \"@/components/EmojiRenderer\";\n\ninterface TestDataFileSelectorProps {\n  type: \"FormSelect\" | \"ItemSearchDropdown\";\n  className?: string;\n  iconInputOrOutput?: SemanticICONS;\n  label?: FormSelectProps[\"label\"];\n  testData: ApiTypes.ProblemFileDto[];\n  optional?: boolean;\n  value: string;\n  placeholder: string;\n  onChange: (value: string) => void;\n}\n\nconst TestDataFileSelector: React.FC<TestDataFileSelectorProps> = props => {\n  const _ = useLocalizer(\"problem_judge_settings\");\n\n  const uiProps: FormSelectProps | DropdownProps = {\n    className:\n      style.fileSelect +\n      \" \" +\n      (props.type === \"ItemSearchDropdown\" ? style.itemSearchDropdown : style.formSelect) +\n      (props.className ? \" \" + props.className : \"\"),\n    label: props.label,\n    text:\n      props.value && !props.testData.some(file => file.filename === props.value)\n        ? ((\n            <>\n              {props.iconInputOrOutput && <Icon className={style.iconInputOrOutput} name={props.iconInputOrOutput} />}\n              <Popup\n                trigger={<Icon name=\"warning sign\" className={style.iconFile} />}\n                content={_(\".file_selector.file_not_found_warning\")}\n                position=\"top center\"\n              />\n              <EmojiRenderer>\n                <span>{props.value}</span>\n              </EmojiRenderer>\n            </>\n          ) as any)\n        : undefined,\n    placeholder: props.placeholder,\n    value: props.value,\n    options: [\n      ...(props.optional\n        ? [\n            {\n              key: null,\n              value: null,\n              text: (\n                <>\n                  {props.iconInputOrOutput && (\n                    <Icon className={style.iconInputOrOutput + \" \" + style.invisible} name={props.iconInputOrOutput} />\n                  )}\n                  <Icon name=\"file code outline\" className={style.iconFile + \" \" + style.invisible} />\n                  <div className={style.filename}>{\"\\u200E\" + _(\".file_selector.empty\")}</div>\n                </>\n              )\n            }\n          ]\n        : []),\n      ...props.testData.map(file => ({\n        key: file.filename,\n        value: file.filename,\n        text: (\n          <>\n            {props.iconInputOrOutput && <Icon className={style.iconInputOrOutput} name={props.iconInputOrOutput} />}\n            <Icon name={getFileIcon(file.filename)} className={style.iconFile} />\n            <EmojiRenderer>\n              <div className={style.filename}>{\"\\u200E\" + file.filename}</div>\n            </EmojiRenderer>\n            <div className={style.fileSize}>{formatFileSize(file.size, 1)}</div>\n          </>\n        )\n      }))\n    ],\n    onChange: (e, { value }) => props.onChange(value as string)\n  };\n\n  return props.type === \"ItemSearchDropdown\" ? (\n    <Dropdown item selection search noResultsMessage={_(\".file_selector.no_matching_files\")} {...uiProps} />\n  ) : (\n    <Form.Select open={props.testData.length === 0 ? false : undefined} {...(uiProps as FormSelectProps)} />\n  );\n};\n\nexport default TestDataFileSelector;\n","import React from \"react\";\nimport { Form, Input } from \"semantic-ui-react\";\nimport { observer } from \"mobx-react\";\n\nimport style from \"./MetaEditor.module.less\";\n\nimport { useLocalizer } from \"@/utils/hooks\";\nimport { JudgeInfoProcessor, EditorComponentProps } from \"./interface\";\n\nexport interface JudgeInfoWithMeta {\n  timeLimit?: number;\n  memoryLimit?: number;\n  fileIo?: {\n    inputFilename: string;\n    outputFilename: string;\n  };\n  runSamples?: boolean;\n}\n\ninterface MetaEditorOptions {\n  // Some of the problem types doesn't have ALL meta props\n  enableTimeMemoryLimit: boolean;\n  enableFileIo: boolean;\n  enableRunSamples: boolean;\n}\n\ntype MetaEditorProps = EditorComponentProps<JudgeInfoWithMeta, MetaEditorOptions>;\n\nlet MetaEditor: React.FC<MetaEditorProps> = props => {\n  const _ = useLocalizer(\"problem_judge_settings\");\n\n  const judgeInfo = props.judgeInfo;\n\n  return (\n    <div>\n      <Form>\n        {props.options.enableTimeMemoryLimit && (\n          <Form.Group>\n            <Form.Field width={8}>\n              <label>{_(\".meta.time_limit\")}</label>\n              <Input\n                className={style.labeledInput}\n                value={judgeInfo.timeLimit == null ? \"\" : judgeInfo.timeLimit}\n                label=\"ms\"\n                labelPosition=\"right\"\n                icon=\"clock\"\n                iconPosition=\"left\"\n                onChange={(e, { value }) =>\n                  (value === \"\" || (Number.isSafeInteger(Number(value)) && Number(value) >= 0)) &&\n                  props.onUpdateJudgeInfo({ timeLimit: value === \"\" ? null : Number(value) })\n                }\n              />\n            </Form.Field>\n            <Form.Field width={8}>\n              <label>{_(\".meta.memory_limit\")}</label>\n              <Input\n                className={style.labeledInput}\n                value={judgeInfo.memoryLimit == null ? \"\" : judgeInfo.memoryLimit}\n                label=\"MiB\"\n                labelPosition=\"right\"\n                icon=\"microchip\"\n                iconPosition=\"left\"\n                onChange={(e, { value }) =>\n                  (value === \"\" || (Number.isSafeInteger(Number(value)) && Number(value) >= 0)) &&\n                  props.onUpdateJudgeInfo({ memoryLimit: value === \"\" ? null : Number(value) })\n                }\n              />\n            </Form.Field>\n          </Form.Group>\n        )}\n        {props.options.enableFileIo && judgeInfo.fileIo && (\n          <Form.Group>\n            <Form.Field width={8}>\n              <label>{_(\".meta.input_file\")}</label>\n              <Input\n                value={judgeInfo.fileIo.inputFilename}\n                readOnly={!judgeInfo.fileIo}\n                icon=\"sign in\"\n                iconPosition=\"left\"\n                onChange={(e, { value }) =>\n                  props.onUpdateJudgeInfo({\n                    fileIo: { inputFilename: value, outputFilename: judgeInfo.fileIo.outputFilename }\n                  })\n                }\n              />\n            </Form.Field>\n            <Form.Field width={8}>\n              <label>{_(\".meta.output_file\")}</label>\n              <Input\n                value={judgeInfo.fileIo.outputFilename}\n                readOnly={!judgeInfo.fileIo}\n                icon=\"sign out\"\n                iconPosition=\"left\"\n                onChange={(e, { value }) =>\n                  props.onUpdateJudgeInfo({\n                    fileIo: { inputFilename: judgeInfo.fileIo.inputFilename, outputFilename: value }\n                  })\n                }\n              />\n            </Form.Field>\n          </Form.Group>\n        )}\n        {(props.options.enableFileIo || props.options.enableRunSamples) && (\n          <Form.Group>\n            {props.options.enableFileIo && (\n              <Form.Checkbox\n                className={style.checkbox}\n                width={8}\n                label={_(\".meta.use_standard_io\")}\n                checked={!judgeInfo.fileIo}\n                onChange={(e, { checked }) =>\n                  props.onUpdateJudgeInfo({ fileIo: checked ? null : { inputFilename: \"\", outputFilename: \"\" } })\n                }\n              />\n            )}\n            {props.options.enableRunSamples && (\n              <Form.Checkbox\n                className={style.checkbox}\n                width={8}\n                label={_(\".meta.run_samples\")}\n                checked={judgeInfo.runSamples}\n                onChange={(e, { checked }) => props.onUpdateJudgeInfo({ runSamples: checked })}\n              />\n            )}\n          </Form.Group>\n        )}\n      </Form>\n    </div>\n  );\n};\n\nMetaEditor = observer(MetaEditor);\n\nconst judgeInfoProcessor: JudgeInfoProcessor<JudgeInfoWithMeta, MetaEditorOptions> = {\n  parseJudgeInfo(raw, testData, options) {\n    return {\n      timeLimit: options.enableTimeMemoryLimit && Number.isSafeInteger(raw.timeLimit) ? raw.timeLimit : null,\n      memoryLimit: options.enableTimeMemoryLimit && Number.isSafeInteger(raw.memoryLimit) ? raw.memoryLimit : null,\n      fileIo:\n        options.enableFileIo &&\n        raw.fileIo &&\n        typeof raw.fileIo.inputFilename === \"string\" &&\n        typeof raw.fileIo.outputFilename === \"string\"\n          ? {\n              inputFilename: raw.fileIo.inputFilename,\n              outputFilename: raw.fileIo.outputFilename\n            }\n          : null,\n      runSamples: options.enableRunSamples ? !!raw.runSamples : null\n    };\n  },\n  normalizeJudgeInfo(judgeInfo, options) {\n    if (!options.enableTimeMemoryLimit) {\n      delete judgeInfo.timeLimit;\n      delete judgeInfo.memoryLimit;\n    }\n    if (!judgeInfo.runSamples) delete judgeInfo.runSamples;\n    if (!judgeInfo.fileIo) delete judgeInfo.fileIo;\n  }\n};\n\nexport default Object.assign(MetaEditor, judgeInfoProcessor);\n","import React, { useState, useRef, useMemo } from \"react\";\nimport { Dropdown, Header, Menu, Popup, Button, Form, Message, Input, Ref, Table } from \"semantic-ui-react\";\nimport { observer } from \"mobx-react\";\nimport { v4 as uuid } from \"uuid\";\nimport update, { Spec } from \"immutability-helper\";\n\nimport style from \"./SubtasksEditor.module.less\";\n\nimport { useLocalizer, useDialog, useScreenWidthWithin } from \"@/utils/hooks\";\nimport TestDataFileSelector from \"./TestDataFileSelector\";\nimport { JudgeInfoProcessor, EditorComponentProps } from \"./interface\";\nimport { detectTestcasesByMatchingInputToOutput, detectTestcasesByMatchingOutputToInput } from \"./detect-testcases\";\n\ninterface Testcase {\n  uuid: string;\n  inputFile?: string;\n  outputFile?: string;\n  userOutputFilename?: string;\n  timeLimit?: number;\n  memoryLimit?: number;\n  points?: number;\n}\n\nenum SubtaskScoringType {\n  Sum = \"Sum\",\n  GroupMin = \"GroupMin\",\n  GroupMul = \"GroupMul\"\n}\n\ninterface Subtask {\n  uuid: string;\n  timeLimit?: number;\n  memoryLimit?: number;\n  testcases: Testcase[];\n  scoringType: SubtaskScoringType;\n  points?: number;\n  dependencies: number[];\n}\n\nexport interface JudgeInfoWithSubtasks {\n  timeLimit: number;\n  memoryLimit: number;\n  subtasks: Subtask[];\n}\n\ninterface SubtasksEditorOptions {\n  // Some of the problem types doesn't have ALL testcase props\n  enableTimeMemoryLimit: boolean;\n  enableInputFile: boolean | \"optional\";\n  enableOutputFile: boolean | \"optional\";\n  enableUserOutputFilename: boolean;\n}\n\nfunction randomColorFromUuid(uuid: string) {\n  const hex = uuid.split(\"-\").join(\"\"),\n    COLOR_COUNT = 11;\n  let x = 0;\n  for (let i = 0; i < hex.length; i += 4) {\n    x ^= parseInt(hex.substr(i, 4), 16);\n  }\n  return x % COLOR_COUNT;\n}\n\ninterface SubtaskEditorTastcaseItemProps {\n  options: SubtasksEditorOptions;\n\n  testData: ApiTypes.ProblemFileDto[];\n  testcaseIndex: number;\n  testcaseCount: number;\n  testcase: Testcase;\n\n  defaultPercentagePoints: number;\n  defaultTimeLimit: number;\n  defaultMemoryLimit: number;\n\n  onUpdate: (updateInfo: Partial<Testcase>) => void;\n  onDelete: () => void;\n  onMoveUp: () => void;\n  onMoveDown: () => void;\n  onAddTestcaseBefore: () => void;\n  onAddTestcaseAfter: () => void;\n}\n\nlet SubtaskEditorTastcaseItem: React.FC<SubtaskEditorTastcaseItemProps> = props => {\n  const _ = useLocalizer(\"problem_judge_settings\");\n\n  const [refOptionsButton, setRefOptionsButton] = useState<HTMLElement>(null);\n\n  return (\n    <>\n      <Menu\n        className={\n          style.menu +\n          \" \" +\n          style.menuTestcase +\n          \" \" +\n          style.menuTestcaseFirstLine +\n          \" \" +\n          style[\"color_\" + randomColorFromUuid(props.testcase.uuid)]\n        }\n        attached\n      >\n        <Menu.Item className={style.itemTestcaseTitle}>#{props.testcaseIndex + 1}</Menu.Item>\n        {props.options.enableInputFile ? (\n          <TestDataFileSelector\n            type=\"ItemSearchDropdown\"\n            iconInputOrOutput=\"sign in\"\n            testData={props.testData}\n            placeholder={_(\".subtasks.testcase.input_file\")}\n            optional={props.options.enableInputFile === \"optional\"}\n            value={props.testcase.inputFile}\n            onChange={value => props.onUpdate({ inputFile: value })}\n          />\n        ) : (\n          <Menu.Item className={style.outputFileNotNeeded} content={_(\".subtasks.testcase.input_file_not_needed\")} />\n        )}\n        <Menu.Menu position=\"right\">\n          {props.options.enableUserOutputFilename && (\n            <Menu.Item className={style.itemTestcaseUserOutputFilename}></Menu.Item>\n          )}\n          {props.options.enableTimeMemoryLimit && (\n            <>\n              <Menu.Item className={style.itemTestcaseTimeLimit}>\n                <Input\n                  transparent\n                  placeholder={props.defaultTimeLimit}\n                  value={props.testcase.timeLimit == null ? \"\" : props.testcase.timeLimit}\n                  icon=\"clock\"\n                  iconPosition=\"left\"\n                  onChange={(e, { value }) =>\n                    (value === \"\" || (Number.isSafeInteger(Number(value)) && Number(value) >= 0)) &&\n                    props.onUpdate({ timeLimit: value === \"\" ? null : Number(value) })\n                  }\n                />\n              </Menu.Item>\n              <Menu.Item className={style.itemLabel}>ms</Menu.Item>\n            </>\n          )}\n          <Dropdown item icon=\"plus\" className={`icon ${style.itemWithIcon}`}>\n            <Dropdown.Menu>\n              <Dropdown.Item\n                icon=\"angle double up\"\n                text={_(\".subtasks.testcase_add.before\")}\n                onClick={() => props.onAddTestcaseBefore()}\n              />\n              <Dropdown.Item\n                icon=\"angle double down\"\n                text={_(\".subtasks.testcase_add.after\")}\n                onClick={() => props.onAddTestcaseAfter()}\n              />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Menu>\n      </Menu>\n      <Menu\n        className={\n          style.menu +\n          \" \" +\n          style.menuTestcase +\n          \" \" +\n          style.menuTestcaseSecondLine +\n          \" \" +\n          style[\"color_\" + randomColorFromUuid(props.testcase.uuid)]\n        }\n        attached\n      >\n        <Menu.Item className={style.itemTestcaseScore}>\n          <Input\n            transparent\n            placeholder={props.defaultPercentagePoints}\n            value={props.testcase.points == null ? \"\" : props.testcase.points}\n            disabled={props.testcaseCount === 1}\n            icon=\"percent\"\n            onChange={(e, { value }) =>\n              (value === \"\" || (Number.isSafeInteger(Number(value)) && Number(value) >= 0 && Number(value) <= 100)) &&\n              props.onUpdate({ points: value === \"\" ? null : Number(value) })\n            }\n          />\n        </Menu.Item>\n        {props.options.enableOutputFile ? (\n          <TestDataFileSelector\n            type=\"ItemSearchDropdown\"\n            iconInputOrOutput=\"sign out\"\n            testData={props.testData}\n            placeholder={_(\".subtasks.testcase.output_file\")}\n            optional={props.options.enableOutputFile === \"optional\"}\n            value={props.testcase.outputFile}\n            onChange={value => props.onUpdate({ outputFile: value })}\n          />\n        ) : (\n          <Menu.Item className={style.outputFileNotNeeded} content={_(\".subtasks.testcase.output_file_not_needed\")} />\n        )}\n        <Menu.Menu position=\"right\">\n          {props.options.enableUserOutputFilename && (\n            <Menu.Item className={style.itemTestcaseUserOutputFilename}>\n              <Input\n                transparent\n                placeholder={props.testcase.outputFile || _(\".subtasks.testcase.user_output_filename\")}\n                value={props.testcase.userOutputFilename == null ? \"\" : props.testcase.userOutputFilename}\n                icon=\"file upload\"\n                iconPosition=\"left\"\n                onChange={(e, { value }) => props.onUpdate({ userOutputFilename: value === \"\" ? null : value })}\n              />\n            </Menu.Item>\n          )}\n          {props.options.enableTimeMemoryLimit && (\n            <>\n              <Menu.Item className={style.itemTestcaseMemoryLimit}>\n                <Input\n                  transparent\n                  placeholder={props.defaultMemoryLimit}\n                  value={props.testcase.memoryLimit == null ? \"\" : props.testcase.memoryLimit}\n                  icon=\"microchip\"\n                  iconPosition=\"left\"\n                  onChange={(e, { value }) =>\n                    (value === \"\" || (Number.isSafeInteger(Number(value)) && Number(value) >= 0)) &&\n                    props.onUpdate({ memoryLimit: value === \"\" ? null : Number(value) })\n                  }\n                />\n              </Menu.Item>\n              <Menu.Item className={style.itemLabel}>MiB</Menu.Item>\n            </>\n          )}\n          <Ref innerRef={setRefOptionsButton}>\n            <Dropdown item icon=\"bars\" className={`icon ${style.itemWithIcon}`}>\n              <Dropdown.Menu>\n                <Dropdown.Item\n                  icon=\"angle double up\"\n                  text={_(\".subtasks.testcase_options.move_up\")}\n                  onClick={() => props.onMoveUp()}\n                  disabled={props.testcaseIndex === 0}\n                />\n                <Dropdown.Item\n                  icon=\"angle double down\"\n                  text={_(\".subtasks.testcase_options.move_down\")}\n                  onClick={() => props.onMoveDown()}\n                  disabled={props.testcaseIndex === props.testcaseCount - 1}\n                />\n                <Popup\n                  trigger={<Dropdown.Item icon=\"delete\" text={_(\".subtasks.testcase_options.delete\")} />}\n                  context={refOptionsButton}\n                  content={\n                    <Button\n                      negative\n                      content={_(\".subtasks.testcase_options.confirm_delete\")}\n                      onClick={() => props.onDelete()}\n                    />\n                  }\n                  on=\"click\"\n                  position=\"bottom center\"\n                />\n              </Dropdown.Menu>\n            </Dropdown>\n          </Ref>\n        </Menu.Menu>\n      </Menu>\n    </>\n  );\n};\n\nSubtaskEditorTastcaseItem = observer(SubtaskEditorTastcaseItem);\n\ninterface SubtaskEditorProps {\n  options: SubtasksEditorOptions;\n\n  testData: ApiTypes.ProblemFileDto[];\n  subtaskIndex: number;\n  subtaskCount: number;\n  subtask: Subtask;\n\n  defaultPercentagePoints: number;\n  defaultTimeLimit: number;\n  defaultMemoryLimit: number;\n\n  onUpdate: (updateInfo: Partial<Subtask>) => void;\n  onDelete: () => void;\n  onMoveUp: () => void;\n  onMoveDown: () => void;\n  onAddSubtaskBefore: () => void;\n  onAddSubtaskAfter: () => void;\n\n  onUpdateTestcase: (testcaseIndex: number, updateInfo: Partial<Testcase>) => void;\n  onDeleteTestcase: (testcaseIndex: number) => void;\n  onMoveTestcaseUp: (testcaseIndex: number) => void;\n  onMoveTestcaseDown: (testcaseIndex: number) => void;\n  onAddTestcase: (testcaseIndex: number) => void;\n}\n\nlet SubtaskEditor: React.FC<SubtaskEditorProps> = props => {\n  const _ = useLocalizer(\"problem_judge_settings\");\n\n  const [testcasesExpanded, setTestcasesExpanded] = useState(props.subtaskCount === 1);\n\n  const refOptionsButton = useRef(null);\n\n  const sumSpecfiedPercentagePoints = props.subtask.testcases\n    .map(testcase => testcase.points)\n    .filter(x => x != null)\n    .reduce((sum, x) => sum + x, 0);\n  const countUnspecfiedPercentagePoints = props.subtask.testcases.filter(testcase => testcase.points == null).length;\n  const defaultPercentagePoints =\n    (sumSpecfiedPercentagePoints > 100\n      ? 0\n      : Math.round((100 - sumSpecfiedPercentagePoints) / countUnspecfiedPercentagePoints)) || 0;\n\n  const [autoAddTestcaseRegexForInput, setAutoAddTestcaseRegexForInput] = useState(\"\");\n  const [autoAddTestcaseRegexForOutput, setAutoAddTestcaseRegexForOutput] = useState(\"\");\n  const [autoAddTestcaseErrorCompileForInput, setAutoAddTestcaseErrorCompileForInput] = useState(\"\");\n  const [autoAddTestcaseErrorCompileForOutput, setAutoAddTestcaseErrorCompileForOutput] = useState(\"\");\n  const [autoAddTestcaseErrorMatching, setAutoAddTestcaseErrorMatching] = useState(\"\");\n  const [autoAddTestcaseMatchResult, setAutoAddTestcaseMatchResult] = useState<[string, string][]>([]);\n\n  // If the user only input one of the regexes, generate the default for another automatically\n  function getDefaultRegexForOutput(regexForInput: string) {\n    if (!regexForInput) return \"^(.*?)\\\\.(?:out|ans|OUT|ANS)$\";\n\n    let re = regexForInput;\n    re = re.split(\"input\").join(\"output\");\n    re = re.split(\"INPUT\").join(\"OUTPUT\");\n    if (re.endsWith(\".in\")) re = re.substring(0, re.length - 3) + \".(?:out|ans)\";\n    if (re.endsWith(\".IN\")) re = re.substring(0, re.length - 3) + \".(?:OUT|ANS)\";\n    if (re.endsWith(\".in$\")) re = re.substring(0, re.length - 4) + \".(?:out|ans)$\";\n    if (re.endsWith(\".IN$\")) re = re.substring(0, re.length - 4) + \".(?:OUT|ANS)$\";\n    return re === regexForInput ? \"\" : re;\n  }\n\n  function getDefaultRegexForInput(regexForOutput: string) {\n    if (!regexForOutput) return \"^(.*?)\\\\.(?:in|IN)$\";\n\n    let re = regexForOutput;\n    re = re.split(\"output\").join(\"input\");\n    re = re.split(\"OUTPUT\").join(\"INPUT\");\n    if (re.endsWith(\".out\") || re.endsWith(\".ans\")) re = re.substring(0, re.length - 4) + \".in\";\n    if (re.endsWith(\".OUT\") || re.endsWith(\".ANS\")) re = re.substring(0, re.length - 4) + \".IN\";\n    if (re.endsWith(\".out$\") || re.endsWith(\".ans$\")) re = re.substring(0, re.length - 5) + \".in\";\n    if (re.endsWith(\".OUT$\") || re.endsWith(\".ANS$\")) re = re.substring(0, re.length - 5) + \".IN\";\n    return re === regexForOutput ? \"\" : re;\n  }\n\n  const enableOutputFile = props.options.enableOutputFile;\n\n  // Pass the new value via argument\n  // Because the states' values are not being updated immediately after setState()\n  function autoAddTestcaseDoMatching(input: string, output: string) {\n    const defaultInput = getDefaultRegexForInput(output),\n      defaultOutput = getDefaultRegexForOutput(input);\n    let inputIsDefault = false,\n      outputIsDefault = false;\n\n    if (!input) {\n      input = defaultInput;\n      inputIsDefault = true;\n    }\n\n    if (!output) {\n      output = defaultOutput;\n      outputIsDefault = true;\n    }\n\n    if (!input || !output) {\n      setAutoAddTestcaseErrorCompileForInput(\"\");\n      setAutoAddTestcaseErrorCompileForOutput(\"\");\n      setAutoAddTestcaseErrorMatching(\"\");\n      setAutoAddTestcaseMatchResult([]);\n      return;\n    }\n\n    let regexForInput: RegExp, regexForOutput: RegExp;\n    try {\n      regexForInput = new RegExp(input);\n      setAutoAddTestcaseErrorCompileForInput(\"\");\n    } catch (e) {\n      // If the regex is auto generated, do not show error message\n      if (!inputIsDefault) {\n        setAutoAddTestcaseErrorCompileForInput(\n          _(\".subtasks.auto_add_testcases.can_not_compile_for_input\", { message: e.message })\n        );\n      } else setAutoAddTestcaseErrorCompileForInput(\"\");\n      setAutoAddTestcaseErrorMatching(\"\");\n      setAutoAddTestcaseMatchResult([]);\n    }\n    if (enableOutputFile) {\n      try {\n        regexForOutput = new RegExp(output);\n        setAutoAddTestcaseErrorCompileForOutput(\"\");\n      } catch (e) {\n        // If the regex is auto generated, do not show error message\n        if (!outputIsDefault) {\n          setAutoAddTestcaseErrorCompileForOutput(\n            _(\".subtasks.auto_add_testcases.can_not_compile_for_output\", { message: e.message })\n          );\n        } else setAutoAddTestcaseErrorCompileForOutput(\"\");\n        setAutoAddTestcaseErrorMatching(\"\");\n        setAutoAddTestcaseMatchResult([]);\n      }\n    }\n\n    if (regexForInput == null || (regexForOutput == null && enableOutputFile)) return;\n\n    if (!enableOutputFile) {\n      const result: [string, string][] = props.testData\n        .filter(file => file.filename.match(regexForInput))\n        .map(file => [file.filename, null]);\n      setAutoAddTestcaseMatchResult(result);\n    } else {\n      const matchesForInput = props.testData.map(file => file.filename.match(regexForInput)).filter(x => x);\n      const matchesForOutput = props.testData.map(file => file.filename.match(regexForOutput)).filter(x => x);\n      const result: [string, string][] = [];\n      if (matchesForInput.length > 0 && matchesForOutput.length > 0) {\n        const groupCount = matchesForInput[0].length - 1;\n        if (groupCount !== matchesForOutput[0].length - 1) {\n          setAutoAddTestcaseErrorMatching(\n            _(\".subtasks.auto_add_testcases.capturing_groups_do_not_match\", {\n              countInInputFilename: String(groupCount),\n              countInOutputFilename: String(matchesForOutput[0].length - 1)\n            })\n          );\n        } else if (groupCount === 0) {\n          setAutoAddTestcaseErrorMatching(_(\".subtasks.auto_add_testcases.no_capturing_groups\"));\n        } else {\n          while (matchesForInput.length !== 0) {\n            const currentMatchForInput = matchesForInput.shift();\n\n            // Find the matching output filename with the current input filename\n            for (let i = 0; i < matchesForOutput.length; i++) {\n              let foundNonMatch = false;\n              for (let j = 1; j <= groupCount; j++) {\n                if (currentMatchForInput[j] !== matchesForOutput[i][j]) {\n                  foundNonMatch = true;\n                  break;\n                }\n              }\n\n              if (!foundNonMatch) {\n                result.push([currentMatchForInput.input, matchesForOutput[i].input]);\n                matchesForOutput.splice(i, 1);\n              }\n            }\n          }\n\n          setAutoAddTestcaseMatchResult(result);\n        }\n      }\n    }\n  }\n\n  function getNewTestcases(matchResult: [string, string][]): Testcase[] {\n    return matchResult.map(m => ({\n      uuid: uuid(),\n      inputFile: m[0],\n      outputFile: m[1]\n    }));\n  }\n\n  function doReplace() {\n    props.onUpdate({\n      testcases: getNewTestcases(autoAddTestcaseMatchResult)\n    });\n    setTestcasesExpanded(true);\n    autoAddTestcaseDialog.close();\n  }\n\n  const autoAddTestcaseError = [\n    autoAddTestcaseErrorCompileForInput,\n    autoAddTestcaseErrorCompileForOutput,\n    autoAddTestcaseErrorMatching\n  ]\n    .filter(x => x)\n    .join(\"\\n\");\n  const autoAddTestcaseDialog = useDialog(\n    {},\n    <Header\n      icon=\"magic\"\n      className={style.dialogHeader}\n      content={\n        <>\n          {_(\".subtasks.auto_add_testcases.auto_add_testcases\")}\n          <div className={style.dialogHeaderInfo}>\n            {_(\".subtasks.auto_add_testcases.subtask\") + \" #\" + (props.subtaskIndex + 1)}\n          </div>\n        </>\n      }\n    />,\n    (() => {\n      const defaultInput = getDefaultRegexForInput(autoAddTestcaseRegexForOutput),\n        defaultOutput = getDefaultRegexForOutput(autoAddTestcaseRegexForInput);\n      const input = autoAddTestcaseRegexForInput || defaultInput,\n        output = autoAddTestcaseRegexForOutput || defaultOutput;\n\n      return (\n        <>\n          <p className={style.autoAddTestcasesHelp}>\n            {_(\n              !props.options.enableOutputFile\n                ? \".subtasks.auto_add_testcases.help_no_output\"\n                : \".subtasks.auto_add_testcases.help\"\n            )}\n          </p>\n          <Form>\n            <Form.Group>\n              <Form.Field width={8}>\n                <label>{_(\".subtasks.auto_add_testcases.input_file\")}</label>\n                <Input\n                  placeholder={defaultInput}\n                  value={autoAddTestcaseRegexForInput}\n                  icon=\"sign in\"\n                  iconPosition=\"left\"\n                  onChange={(e, { value }) => {\n                    setAutoAddTestcaseRegexForInput(value);\n                    autoAddTestcaseDoMatching(value, autoAddTestcaseRegexForOutput);\n                  }}\n                />\n              </Form.Field>\n              {props.options.enableOutputFile && (\n                <Form.Field width={8}>\n                  <label>{_(\".subtasks.auto_add_testcases.output_file\")}</label>\n                  <Input\n                    placeholder={defaultOutput}\n                    value={autoAddTestcaseRegexForOutput}\n                    icon=\"sign out\"\n                    iconPosition=\"left\"\n                    onChange={(e, { value }) => {\n                      setAutoAddTestcaseRegexForOutput(value);\n                      autoAddTestcaseDoMatching(autoAddTestcaseRegexForInput, value);\n                    }}\n                  />\n                </Form.Field>\n              )}\n            </Form.Group>\n          </Form>\n          {autoAddTestcaseError ? (\n            <Message className={style.dialogMessage} error content={autoAddTestcaseError} />\n          ) : (\n            <Message\n              className={style.dialogMessage}\n              success={autoAddTestcaseMatchResult.length > 0}\n              info={autoAddTestcaseMatchResult.length === 0}\n              content={\n                !input || !output\n                  ? _(\".subtasks.auto_add_testcases.empty_regex\")\n                  : _(\".subtasks.auto_add_testcases.matches_count\", {\n                      count: autoAddTestcaseMatchResult.length.toString()\n                    })\n              }\n            />\n          )}\n          {autoAddTestcaseMatchResult.length > 0 && (\n            <Table textAlign=\"center\" compact=\"very\" celled unstackable>\n              <Table.Header>\n                <Table.Row>\n                  {[1, 2].map(i => (\n                    <React.Fragment key={i}>\n                      <Table.HeaderCell width={1}>#</Table.HeaderCell>\n                      <Table.HeaderCell width={props.options.enableOutputFile ? 3 : 6}>\n                        {_(\".subtasks.auto_add_testcases.column_input_file\")}\n                      </Table.HeaderCell>\n                      {props.options.enableOutputFile && (\n                        <Table.HeaderCell width={3}>\n                          {_(\".subtasks.auto_add_testcases.column_output_file\")}\n                        </Table.HeaderCell>\n                      )}\n                    </React.Fragment>\n                  ))}\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {[...Array(Math.ceil(autoAddTestcaseMatchResult.length / 2))]\n                  .map((_, i, a) => [i, a.length + i])\n                  .map(ids => (\n                    <Table.Row>\n                      {ids.map(id =>\n                        id >= autoAddTestcaseMatchResult.length ? null : (\n                          <React.Fragment key={id}>\n                            <Table.Cell>\n                              <strong>{id + 1}</strong>\n                            </Table.Cell>\n                            <Table.Cell>{autoAddTestcaseMatchResult[id][0]}</Table.Cell>\n                            {props.options.enableOutputFile && (\n                              <Table.Cell>{autoAddTestcaseMatchResult[id][1]}</Table.Cell>\n                            )}\n                          </React.Fragment>\n                        )\n                      )}\n                    </Table.Row>\n                  ))}\n              </Table.Body>\n            </Table>\n          )}\n        </>\n      );\n    })(),\n    <>\n      <Button content={_(\".subtasks.auto_add_testcases.close\")} onClick={() => autoAddTestcaseDialog.close()} />\n      <Button\n        positive\n        disabled={autoAddTestcaseMatchResult.length === 0}\n        content={_(\".subtasks.auto_add_testcases.append\")}\n        onClick={() => {\n          const current = props.subtask.testcases.map(testcase => [testcase.inputFile, testcase.outputFile]);\n          const toAppend = autoAddTestcaseMatchResult.filter(\n            result => !current.some(testcase => result[0] === testcase[0] && result[1] === testcase[1])\n          );\n          props.onUpdate({\n            testcases: props.subtask.testcases.concat(getNewTestcases(toAppend))\n          });\n          setTestcasesExpanded(true);\n          autoAddTestcaseDialog.close();\n        }}\n      />\n      <Popup\n        trigger={\n          <Button\n            primary\n            disabled={autoAddTestcaseMatchResult.length === 0}\n            content={_(\".subtasks.auto_add_testcases.replace\")}\n            onClick={() => props.subtask.testcases.length === 0 && doReplace()}\n          />\n        }\n        // It's safe to replace if no testcases at present, don't confirm\n        disabled={props.subtask.testcases.length === 0}\n        content={<Button content={_(\".subtasks.auto_add_testcases.confirm_replace\")} onClick={doReplace} />}\n        on=\"click\"\n        position=\"top center\"\n      />\n    </>\n  );\n\n  function openAutoAddTestcasesDialog() {\n    autoAddTestcaseDialog.open();\n    autoAddTestcaseDoMatching(autoAddTestcaseRegexForInput, autoAddTestcaseRegexForOutput);\n  }\n\n  function sortTestcases() {\n    const temp: [number[], Testcase][] = props.subtask.testcases.map(testcase => [\n      (testcase.inputFile || testcase.outputFile).match(/\\d+/g).map(parseInt),\n      testcase\n    ]);\n    temp.sort(([a], [b]) => {\n      if (a.length != b.length) return a.length - b.length;\n      for (let i = 0; i < a.length; i++) if (a[i] != b[i]) return a[i] - b[i];\n      return 0;\n    });\n\n    props.onUpdate({\n      testcases: temp.map(([numbers, testcase]) => testcase)\n    });\n  }\n\n  const isWideScreen = useScreenWidthWithin(1128, Infinity);\n\n  return (\n    <>\n      {autoAddTestcaseDialog.element}\n      <Menu\n        attached=\"top\"\n        className={\n          style.menu + \" \" + style.menuHeader + \" \" + style[\"color_\" + randomColorFromUuid(props.subtask.uuid)]\n        }\n      >\n        <Menu.Item className={style.itemTitle}>\n          <strong>\n            {props.subtaskCount === 1 ? (\n              _(\".subtasks.single_subtask\")\n            ) : (\n              <>\n                {_(\".subtasks.subtask\")}\n                &nbsp; #{props.subtaskIndex + 1}\n              </>\n            )}\n          </strong>\n          <div className={style.subtaskTitleTestcasesCount}>\n            {isWideScreen\n              ? _(\".subtasks.subtask_testcases_count\", {\n                  count: props.subtask.testcases.length.toString()\n                })\n              : props.subtask.testcases.length}\n          </div>\n        </Menu.Item>\n        <Menu.Menu position=\"right\">\n          {props.options.enableTimeMemoryLimit && (\n            <>\n              <Menu.Item className={style.itemSubtaskTimeLimit}>\n                <Input\n                  transparent\n                  placeholder={props.defaultTimeLimit}\n                  value={props.subtask.timeLimit == null ? \"\" : props.subtask.timeLimit}\n                  icon=\"clock\"\n                  iconPosition=\"left\"\n                  onChange={(e, { value }) =>\n                    (value === \"\" || (Number.isSafeInteger(Number(value)) && Number(value) >= 0)) &&\n                    props.onUpdate({ timeLimit: value === \"\" ? null : Number(value) })\n                  }\n                />\n              </Menu.Item>\n              <Menu.Item className={style.itemLabel}>ms</Menu.Item>\n              <Menu.Item className={style.itemSubtaskMemoryLimit}>\n                <Input\n                  transparent\n                  placeholder={props.defaultMemoryLimit}\n                  value={props.subtask.memoryLimit == null ? \"\" : props.subtask.memoryLimit}\n                  icon=\"microchip\"\n                  iconPosition=\"left\"\n                  onChange={(e, { value }) =>\n                    (value === \"\" || (Number.isSafeInteger(Number(value)) && Number(value) >= 0)) &&\n                    props.onUpdate({ memoryLimit: value === \"\" ? null : Number(value) })\n                  }\n                />\n              </Menu.Item>\n              <Menu.Item className={style.itemLabel}>MiB</Menu.Item>\n            </>\n          )}\n          {props.subtaskCount > 1 && (\n            <Menu.Item className={style.itemSubtaskScore}>\n              <Input\n                transparent\n                placeholder={props.defaultPercentagePoints}\n                value={props.subtask.points == null ? \"\" : props.subtask.points}\n                icon=\"percent\"\n                onChange={(e, { value }) =>\n                  (value === \"\" ||\n                    (Number.isSafeInteger(Number(value)) && Number(value) >= 0 && Number(value) <= 100)) &&\n                  props.onUpdate({ points: value === \"\" ? null : Number(value) })\n                }\n              />\n            </Menu.Item>\n          )}\n          <Ref innerRef={refOptionsButton}>\n            <Dropdown item icon=\"bars\" className={`icon ${style.itemWithIcon}`}>\n              <Dropdown.Menu>\n                <Dropdown.Item\n                  icon=\"sort numeric down\"\n                  text={_(\".subtasks.subtask_options.sort\")}\n                  onClick={sortTestcases}\n                />\n                <Dropdown.Item\n                  icon=\"arrow up\"\n                  text={_(\".subtasks.subtask_options.add_before\")}\n                  onClick={() => props.onAddSubtaskBefore()}\n                />\n                <Dropdown.Item\n                  icon=\"arrow down\"\n                  text={_(\".subtasks.subtask_options.add_after\")}\n                  onClick={() => props.onAddSubtaskAfter()}\n                />\n                <Dropdown.Item\n                  icon=\"plus\"\n                  text={_(\".subtasks.subtask_options.add_testcase\")}\n                  onClick={() => (props.onAddTestcase(props.subtask.testcases.length), setTestcasesExpanded(true))}\n                />\n                <Dropdown.Item\n                  icon=\"angle double up\"\n                  text={_(\".subtasks.subtask_options.move_up\")}\n                  disabled={props.subtaskIndex === 0}\n                  onClick={() => props.onMoveUp()}\n                />\n                <Dropdown.Item\n                  icon=\"angle double down\"\n                  text={_(\".subtasks.subtask_options.move_down\")}\n                  disabled={props.subtaskIndex === props.subtaskCount - 1}\n                  onClick={() => props.onMoveDown()}\n                />\n                <Popup\n                  trigger={<Dropdown.Item icon=\"delete\" text={_(\".subtasks.subtask_options.delete\")} />}\n                  context={refOptionsButton}\n                  content={\n                    <Button\n                      negative\n                      content={_(\".subtasks.subtask_options.confirm_delete\")}\n                      onClick={() => props.onDelete()}\n                    />\n                  }\n                  on=\"click\"\n                  position=\"bottom center\"\n                />\n              </Dropdown.Menu>\n            </Dropdown>\n          </Ref>\n          <Menu.Item as=\"a\" icon=\"magic\" className={style.itemWithIcon} onClick={openAutoAddTestcasesDialog} />\n        </Menu.Menu>\n      </Menu>\n      <Menu attached className={style.menu}>\n        <Dropdown\n          item\n          value={props.subtask.scoringType}\n          className={style.itemScoringTypeDropdown}\n          options={Object.values(SubtaskScoringType).map(type => ({\n            key: type,\n            value: type,\n            text: _(`.subtasks.subtask_type.${type}`)\n          }))}\n          onChange={(e, { value }) => props.onUpdate({ scoringType: value as SubtaskScoringType })}\n        />\n        <Menu.Menu position=\"right\">\n          {props.subtask.testcases.length === 0 ? (\n            <Menu.Item icon=\"circle outline\" content={_(\".subtasks.no_testcases\")} />\n          ) : (\n            <Menu.Item\n              as=\"a\"\n              icon={testcasesExpanded ? \"minus square outline\" : \"plus square outline\"}\n              content={testcasesExpanded ? _(\".subtasks.hide_testcases\") : _(\".subtasks.expand_testcases\")}\n              onClick={() => setTestcasesExpanded(!testcasesExpanded)}\n            />\n          )}\n        </Menu.Menu>\n      </Menu>\n      {testcasesExpanded &&\n        props.subtask.testcases.map((testcase, testcaseIndex) => (\n          <SubtaskEditorTastcaseItem\n            options={props.options}\n            key={testcase.uuid}\n            testData={props.testData}\n            testcaseIndex={testcaseIndex}\n            testcaseCount={props.subtask.testcases.length}\n            testcase={testcase}\n            defaultPercentagePoints={defaultPercentagePoints}\n            defaultTimeLimit={props.subtask.timeLimit != null ? props.subtask.timeLimit : props.defaultTimeLimit}\n            defaultMemoryLimit={\n              props.subtask.memoryLimit != null ? props.subtask.memoryLimit : props.defaultMemoryLimit\n            }\n            onUpdate={updateInfo => props.onUpdateTestcase(testcaseIndex, updateInfo)}\n            onDelete={() => props.onDeleteTestcase(testcaseIndex)}\n            onMoveUp={() => props.onMoveTestcaseUp(testcaseIndex)}\n            onMoveDown={() => props.onMoveTestcaseDown(testcaseIndex)}\n            onAddTestcaseBefore={() => props.onAddTestcase(testcaseIndex)}\n            onAddTestcaseAfter={() => props.onAddTestcase(testcaseIndex + 1)}\n          />\n        ))}\n      {props.subtaskCount > 1 && (\n        <>\n          <Menu attached=\"bottom\" className={style.menu + \" \" + style.menuFooter}>\n            <Menu.Item>{_(\".subtasks.dependencies\")}</Menu.Item>\n            <Dropdown\n              className={style.itemSearchDropdown + \" \" + style.itemDependencies}\n              item\n              multiple\n              search\n              selection\n              value={props.subtask.dependencies}\n              options={[...Array(props.subtaskCount).keys()]\n                .filter(i => i != props.subtaskIndex)\n                .map(i => ({\n                  key: i,\n                  value: i,\n                  text: i + 1\n                }))}\n              onChange={(e, { value }) => props.onUpdate({ dependencies: value as number[] })}\n            />\n          </Menu>\n        </>\n      )}\n    </>\n  );\n};\n\nSubtaskEditor = observer(SubtaskEditor);\n\ntype SubtasksEditorProps = EditorComponentProps<JudgeInfoWithSubtasks, SubtasksEditorOptions>;\n\nlet SubtasksEditor: React.FC<SubtasksEditorProps> = props => {\n  const _ = useLocalizer(\"problem_judge_settings\");\n\n  const judgeInfo = props.judgeInfo;\n\n  const autoTestcases = useMemo(() => {\n    if (\n      props.options.enableInputFile === true ||\n      (props.options.enableInputFile === \"optional\" && props.options.enableOutputFile !== true)\n    )\n      return detectTestcasesByMatchingInputToOutput(props.testData, props.options.enableOutputFile !== true);\n    else return detectTestcasesByMatchingOutputToInput(props.testData, true);\n  }, [props.testData]);\n\n  // Prevent losing subtasks by toggling \"auto detect testcases\"\n  const [subtasksBackup, setSubtasksBackup] = useState(\n    judgeInfo.subtasks || [{ scoringType: SubtaskScoringType.Sum, testcases: [], uuid: uuid(), dependencies: [] }]\n  );\n\n  // For manual subtask editor\n  const sumSpecfiedPercentagePoints = (judgeInfo.subtasks || [])\n    .map(subtask => subtask.points)\n    .filter(x => x != null)\n    .reduce((sum, x) => sum + x, 0);\n  const countUnspecfiedPercentagePoints = (judgeInfo.subtasks || []).filter(subtask => subtask.points == null).length;\n  const defaultPercentagePoints =\n    (sumSpecfiedPercentagePoints > 100\n      ? 0\n      : Math.round((100 - sumSpecfiedPercentagePoints) / countUnspecfiedPercentagePoints)) || 0;\n\n  function updateSubtasks($spec: Spec<Subtask[]>) {\n    props.onUpdateJudgeInfo({ subtasks: update(judgeInfo.subtasks, $spec) });\n  }\n\n  function onUpdateSubtask(subtaskIndex: number, updateInfo: Partial<Subtask>) {\n    updateSubtasks({\n      [subtaskIndex]: {\n        $merge: updateInfo\n      }\n    });\n  }\n\n  function mapSubtaskDependencyIdReference(callback: (id: number) => number): (subtasks: Subtask[]) => Subtask[] {\n    return subtasks =>\n      subtasks.map(subtask =>\n        Object.assign({}, subtask, {\n          dependencies: subtask.dependencies.map(callback).filter(x => x != null)\n        })\n      );\n  }\n\n  function onDeleteSubtask(subtaskIndex: number) {\n    // If only one subtask, clear it instead of deleting it\n    if (judgeInfo.subtasks.length === 1) {\n      updateSubtasks({\n        $set: [\n          {\n            uuid: uuid(),\n            scoringType: SubtaskScoringType.Sum,\n            testcases: [],\n            dependencies: []\n          }\n        ]\n      });\n      return;\n    }\n\n    updateSubtasks({\n      $splice: [[subtaskIndex, 1]],\n      $apply: mapSubtaskDependencyIdReference(id => {\n        if (id === subtaskIndex) return null;\n        else if (id > subtaskIndex) return id - 1;\n        else return id;\n      })\n    });\n  }\n\n  function onMoveSubtask(subtaskIndex: number, direction: \"UP\" | \"DOWN\") {\n    const subtask = judgeInfo.subtasks[subtaskIndex],\n      swappingSubtask = subtaskIndex + (direction === \"UP\" ? -1 : 1);\n\n    updateSubtasks({\n      $splice: [\n        [subtaskIndex, 1],\n        [subtaskIndex + (direction === \"UP\" ? -1 : +1), 0, subtask]\n      ],\n      $apply: mapSubtaskDependencyIdReference(id => {\n        if (id === swappingSubtask) return subtaskIndex;\n        else if (id == subtaskIndex) return swappingSubtask;\n        else return id;\n      })\n    });\n  }\n\n  // Add new subtask with the TL/ML/ST of the old\n  function onAddSubtask(subtaskIndex: number, template: Subtask) {\n    updateSubtasks({\n      $splice: [\n        [\n          subtaskIndex,\n          0,\n          {\n            uuid: uuid(),\n            scoringType: template.scoringType,\n            points: null,\n            timeLimit: template.timeLimit,\n            memoryLimit: template.memoryLimit,\n            dependencies: template.dependencies,\n            testcases: []\n          }\n        ]\n      ],\n      $apply: mapSubtaskDependencyIdReference(id => {\n        if (id >= subtaskIndex) return id + 1;\n        else return id;\n      })\n    });\n  }\n\n  function onUpdateTestcase(subtaskIndex: number, testcaseIndex: number, updateInfo: Partial<Testcase>) {\n    updateSubtasks({\n      [subtaskIndex]: {\n        testcases: {\n          [testcaseIndex]: {\n            $merge: updateInfo\n          }\n        }\n      }\n    });\n  }\n\n  function onDeleteTestcase(subtaskIndex: number, testcaseIndex: number) {\n    updateSubtasks({\n      [subtaskIndex]: {\n        testcases: {\n          $splice: [[testcaseIndex, 1]]\n        }\n      }\n    });\n  }\n\n  function onMoveTestcase(subtaskIndex: number, testcaseIndex, direction: \"UP\" | \"DOWN\") {\n    const testcase = judgeInfo.subtasks[subtaskIndex].testcases[testcaseIndex];\n    updateSubtasks({\n      [subtaskIndex]: {\n        testcases: {\n          $splice: [\n            [testcaseIndex, 1],\n            [testcaseIndex + (direction === \"UP\" ? -1 : +1), 0, testcase]\n          ]\n        }\n      }\n    });\n  }\n\n  function onAddTestcase(subtaskIndex: number, testcaseIndex: number) {\n    updateSubtasks({\n      [subtaskIndex]: {\n        testcases: {\n          $splice: [\n            [\n              testcaseIndex,\n              0,\n              {\n                uuid: uuid(),\n                inputFile: null,\n                outputFile: null,\n                userOutputFilename: null,\n                points: null,\n                timeLimit: null,\n                memoryLimit: null\n              }\n            ]\n          ]\n        }\n      }\n    });\n  }\n\n  return (\n    <>\n      <Form>\n        <Form.Group>\n          <Form.Checkbox\n            width={16}\n            label={\n              <label\n                dangerouslySetInnerHTML={{\n                  __html: _(\n                    props.options.enableOutputFile ? \".subtasks.auto_testcases\" : \".subtasks.auto_testcases_no_output\"\n                  )\n                }}\n              ></label>\n            }\n            checked={!judgeInfo.subtasks}\n            onChange={(e, { checked }) => {\n              if (checked) {\n                setSubtasksBackup(judgeInfo.subtasks);\n                props.onUpdateJudgeInfo({ subtasks: null });\n              } else {\n                props.onUpdateJudgeInfo({ subtasks: subtasksBackup });\n              }\n            }}\n          />\n        </Form.Group>\n      </Form>\n      {judgeInfo.subtasks ? (\n        <div className={style.subtasksEditor}>\n          {judgeInfo.subtasks.map((subtask, index) => (\n            <SubtaskEditor\n              key={subtask.uuid}\n              options={props.options}\n              testData={props.testData}\n              subtaskIndex={index}\n              subtaskCount={judgeInfo.subtasks.length}\n              subtask={subtask}\n              defaultPercentagePoints={defaultPercentagePoints}\n              defaultTimeLimit={judgeInfo.timeLimit}\n              defaultMemoryLimit={judgeInfo.memoryLimit}\n              onUpdate={updateInfo => onUpdateSubtask(index, updateInfo)}\n              onDelete={() => onDeleteSubtask(index)}\n              onMoveUp={() => onMoveSubtask(index, \"UP\")}\n              onMoveDown={() => onMoveSubtask(index, \"DOWN\")}\n              onAddSubtaskBefore={() => onAddSubtask(index, subtask)}\n              onAddSubtaskAfter={() => onAddSubtask(index + 1, subtask)}\n              onUpdateTestcase={(testcaseIndex, updateInfo) => onUpdateTestcase(index, testcaseIndex, updateInfo)}\n              onDeleteTestcase={testcaseIndex => onDeleteTestcase(index, testcaseIndex)}\n              onMoveTestcaseUp={testcaseIndex => onMoveTestcase(index, testcaseIndex, \"UP\")}\n              onMoveTestcaseDown={testcaseIndex => onMoveTestcase(index, testcaseIndex, \"DOWN\")}\n              onAddTestcase={testcaseIndex => onAddTestcase(index, testcaseIndex)}\n            />\n          ))}\n        </div>\n      ) : (\n        <Table textAlign=\"center\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell width={2}>#</Table.HeaderCell>\n              {props.options.enableInputFile && (\n                <Table.HeaderCell width={props.options.enableOutputFile ? 7 : 14}>\n                  {_(\".subtasks.testcase.input_file\")}\n                </Table.HeaderCell>\n              )}\n              {props.options.enableOutputFile && (\n                <Table.HeaderCell width={props.options.enableInputFile ? 7 : 14}>\n                  {_(\".subtasks.testcase.output_file\")}\n                </Table.HeaderCell>\n              )}\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {autoTestcases.length > 0 ? (\n              autoTestcases.map((testcase, i) => (\n                <Table.Row key={i}>\n                  <Table.Cell>{i + 1}</Table.Cell>\n                  <Table.Cell>{testcase.inputFile}</Table.Cell>\n                  {props.options.enableOutputFile && <Table.Cell>{testcase.outputFile}</Table.Cell>}\n                </Table.Row>\n              ))\n            ) : (\n              <Table.Row>\n                <Table.Cell colSpan={3}>{_(\".subtasks.cannot_detect_testcases_from_testdata\")}</Table.Cell>\n              </Table.Row>\n            )}\n          </Table.Body>\n        </Table>\n      )}\n    </>\n  );\n};\n\nSubtasksEditor = observer(SubtasksEditor);\n\nconst judgeInfoProcessor: JudgeInfoProcessor<JudgeInfoWithSubtasks, SubtasksEditorOptions> = {\n  parseJudgeInfo(raw, testData, options) {\n    const subtaskCount = Array.isArray(raw.subtasks) ? raw.subtasks.length : 0;\n    return {\n      subtasks:\n        Array.isArray(raw.subtasks) && raw.subtasks.length > 0\n          ? (raw.subtasks as any[])\n              .map(x => x || {})\n              .map(rawSubtask => ({\n                uuid: uuid(),\n                scoringType:\n                  rawSubtask.scoringType in SubtaskScoringType ? rawSubtask.scoringType : SubtaskScoringType.Sum,\n                points: Number.isSafeInteger(rawSubtask.points) && raw.subtasks.length > 1 ? rawSubtask.points : null,\n                timeLimit:\n                  options.enableTimeMemoryLimit && Number.isSafeInteger(rawSubtask.timeLimit)\n                    ? rawSubtask.timeLimit\n                    : null,\n                memoryLimit:\n                  options.enableTimeMemoryLimit && Number.isSafeInteger(rawSubtask.memoryLimit)\n                    ? rawSubtask.memoryLimit\n                    : null,\n                dependencies: Array.isArray(rawSubtask.dependencies)\n                  ? (rawSubtask.dependencies as any[]).filter(\n                      id => typeof id === \"number\" && id >= 0 && id < subtaskCount\n                    )\n                  : [],\n                testcases: Array.isArray(rawSubtask.testcases)\n                  ? (rawSubtask.testcases as any[])\n                      .map(x => x || {})\n                      .map(rawTestcase => ({\n                        uuid: uuid(),\n                        inputFile:\n                          options.enableInputFile && typeof rawTestcase.inputFile === \"string\"\n                            ? rawTestcase.inputFile\n                            : \"\",\n                        outputFile:\n                          options.enableOutputFile && typeof rawTestcase.outputFile === \"string\"\n                            ? rawTestcase.outputFile\n                            : \"\",\n                        userOutputFilename:\n                          options.enableUserOutputFilename && typeof rawTestcase.userOutputFilename === \"string\"\n                            ? rawTestcase.userOutputFilename\n                            : \"\",\n                        points:\n                          Number.isSafeInteger(rawTestcase.points) && rawSubtask.testcases.length > 0\n                            ? rawTestcase.points\n                            : null,\n                        timeLimit:\n                          options.enableTimeMemoryLimit && Number.isSafeInteger(rawTestcase.timeLimit)\n                            ? rawTestcase.timeLimit\n                            : null,\n                        memoryLimit:\n                          options.enableTimeMemoryLimit && Number.isSafeInteger(rawTestcase.memoryLimit)\n                            ? rawTestcase.memoryLimit\n                            : null\n                      }))\n                  : []\n              }))\n          : null\n    };\n  },\n  normalizeJudgeInfo(judgeInfo, options) {\n    if (judgeInfo.subtasks) {\n      for (const subtask of judgeInfo.subtasks) {\n        delete subtask.uuid;\n        if (subtask.points == null) delete subtask.points;\n        if (!options.enableTimeMemoryLimit || subtask.timeLimit == null) delete subtask.timeLimit;\n        if (!options.enableTimeMemoryLimit || subtask.memoryLimit == null) delete subtask.memoryLimit;\n        if (subtask.dependencies == null || subtask.dependencies.length === 0) delete subtask.dependencies;\n        for (const testcase of subtask.testcases) {\n          delete testcase.uuid;\n          if (testcase.points == null) delete testcase.points;\n\n          if (!options.enableInputFile) delete testcase.inputFile;\n          else if (!testcase.inputFile) testcase.inputFile = null;\n\n          if (!options.enableOutputFile) delete testcase.outputFile;\n          else if (!testcase.outputFile) testcase.outputFile = null;\n\n          if (!options.enableUserOutputFilename || !testcase.userOutputFilename) delete testcase.userOutputFilename;\n          if (!options.enableTimeMemoryLimit || testcase.timeLimit == null) delete testcase.timeLimit;\n          if (!options.enableTimeMemoryLimit || testcase.memoryLimit == null) delete testcase.memoryLimit;\n        }\n      }\n    } else delete judgeInfo.subtasks;\n  }\n};\n\nexport default Object.assign(SubtasksEditor, judgeInfoProcessor);\n","export function detectTestcasesByMatchingInputToOutput(testData: ApiTypes.ProblemFileDto[], outputOptional?: boolean) {\n  return testData\n    .filter(file => file.filename.toLowerCase().endsWith(\".in\"))\n    .map<[ApiTypes.ProblemFileDto, ApiTypes.ProblemFileDto, number[]]>(input => [\n      input,\n      testData.find(file =>\n        [\".out\", \".ans\"]\n          .map(ext => input.filename.slice(0, -3).toLowerCase() + ext)\n          .includes(file.filename.toLowerCase())\n      ),\n      (input.filename.match(/\\d+/g) || []).map(Number)\n    ])\n    .filter(([, outputFile]) => (outputOptional ? true : outputFile))\n    .sort(([inputA, , numbersA], [inputB, , numbersB]) => {\n      const firstNonEqualIndex = [...Array(Math.max(numbersA.length, numbersB.length)).keys()].findIndex(\n        i => numbersA[i] !== numbersB[i]\n      );\n      return firstNonEqualIndex === -1\n        ? inputA.filename < inputB.filename\n          ? -1\n          : 1\n        : numbersA[firstNonEqualIndex] - numbersB[firstNonEqualIndex];\n    })\n    .map(([input, output]) => ({\n      inputFile: input.filename,\n      outputFile: output?.filename\n    }));\n}\n\nexport function detectTestcasesByMatchingOutputToInput(testData: ApiTypes.ProblemFileDto[], inputOptional?: boolean) {\n  return testData\n    .filter(file => ((str: string) => str.endsWith(\".out\") || str.endsWith(\".ans\"))(file.filename.toLowerCase()))\n    .map<[ApiTypes.ProblemFileDto, ApiTypes.ProblemFileDto, number[]]>(input => [\n      input,\n      testData.find(file => `${input.filename.slice(0, -4).toLowerCase()}.in` === file.filename.toLowerCase()),\n      (input.filename.match(/\\d+/g) || []).map(Number)\n    ])\n    .filter(([, inputFile]) => (inputOptional ? true : inputFile))\n    .sort(([outputA, , numbersA], [outputB, , numbersB]) => {\n      const firstNonEqualIndex = [...Array(Math.max(numbersA.length, numbersB.length)).keys()].findIndex(\n        i => numbersA[i] !== numbersB[i]\n      );\n      return firstNonEqualIndex === -1\n        ? outputA.filename < outputB.filename\n          ? -1\n          : 1\n        : numbersA[firstNonEqualIndex] - numbersB[firstNonEqualIndex];\n    })\n    .map(([output, input]) => ({\n      inputFile: input?.filename,\n      outputFile: output.filename\n    }));\n}\n"],"sourceRoot":""}