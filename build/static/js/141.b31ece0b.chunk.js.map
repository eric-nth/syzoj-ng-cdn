{"version":3,"sources":["components/TableCellSearchDropdown.tsx","components/PermissionManager.tsx"],"names":["TableCellSearchDropdown","props","useState","result","setResult","noResult","setNoResult","pending","setPending","refInput","useRef","onSearch","useDebouncedCallback","input","a","trim","current","results","length","callback","Dropdown","className","style","dropdown","placeholder","fluid","value","onSearchChange","e","searchQuery","search","_","query","map","i","key","content","text","resultItem","onChange","index","onSelect","data","noResultsMessage","noResultMessage","loading","PermissionManager","useLocalizer","defaultPermissionLevel","Number","Object","keys","permissionsLevelDetails","useConfirmNavigation","modified","setModified","opened","setOpened","permissions","setPermissions","isMobile","useScreenWidthWithin","onSearchUser","api","user","searchUser","wildcard","requestError","response","toast","error","userMetas","id","userResultContainer","Header","as","image","userResult","firstRow","UserAvatar","avatar","userAvatar","imageSize","rounded","username","email","onSearchGroup","group","searchGroup","groupMetas","groupName","Icon","groupIcon","name","onClose","dialog","close","useAsyncCallbackPending","onSubmitPermissions","userPermissions","permissionLevel","userId","groupPermissions","groupId","errorObjectId","toString","pendingSubmit","onSubmit","getUsernameAndEmailColumns","Table","Cell","width","columnUsername","Content","emailInMobileView","useDialog","icon","dialogHeader","dialogHeaderInfo","objectDescription","fixed","unstackable","Body","Row","owner","textAlign","disabled","userPermission","columnDropdown","options","title","haveSubmitPermission","update","$set","changeUserPermission","onClick","$splice","deleteUser","Footer","HeaderCell","colSpan","$push","addUser","compact","noGroupGranted","groupPermission","columnGroupName","changeGroupPermission","deleteGroup","addGroup","Popup","trigger","Button","negative","on","position","positive","pendingOpen","setPendingOpen","useEffect","open","onGetInitialPermissions","initialPermissions","refOpen","element","observer"],"mappings":"6VA+EeA,EA5DyD,SAAAC,GAAU,IAAD,EACnDC,mBAAuB,IAD4B,mBACxEC,EADwE,KAChEC,EADgE,OAE/CF,oBAAS,GAFsC,mBAExEG,EAFwE,KAE9DC,EAF8D,OAKjDJ,oBAAS,GALwC,mBAKxEK,EALwE,KAK/DC,EAL+D,KAMzEC,EAAWC,iBAAO,IAClBC,EAAWC,YAAoB,uCAAC,WAAOC,GAAP,eAAAC,EAAA,yDACpCD,EAAQA,EAAME,OAEdP,GAAW,GACXC,EAASO,QAAUH,EAEdA,EAN+B,uBAOlCL,GAAW,GAPuB,0CAWdP,EAAMU,SAASE,GAXD,UAW9BI,EAX8B,OAahCR,EAASO,UAAYH,EAbW,mDAkBpCT,EAAUa,GAAW,IAChBA,GAA8B,IAAnBA,EAAQC,QAAcZ,GAAY,GAClDE,GAAW,GApByB,4CAAD,sDAqBlC,KAAKW,SAOR,OACE,cAACC,EAAA,EAAD,CACEC,UAAWC,IAAMC,SACjBC,YAAavB,EAAMuB,YACnBC,OAAK,EACLC,MAAO,KACPC,eAAgB,SAACC,EAAD,GAAyB,IAAnBC,EAAkB,EAAlBA,YACpBrB,GAAW,GACXF,GAAY,GACZK,EAASkB,IAEXC,OAAQ,SAACC,EAAGC,GAAJ,OACN7B,EAAO8B,KAAI,WAAmBC,GAAnB,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,QAAR,MAA0B,CACnCD,MACAT,MAAOQ,EACPG,KAAM,qBAAKhB,UAAWC,IAAMgB,WAAtB,SAAmCF,SAG7CG,SAAU,SAACX,EAAD,OAvBIY,EAuBEd,EAAN,EAAMA,MAAN,OAvBIc,EAuBuBd,EAtBvCzB,EAAMwC,SAAStC,EAAOqC,GAAOE,WAC7BtC,EAAU,KAsBRuC,iBAAkBtC,EAAWJ,EAAM2C,gBAAkB,KACrDC,QAAStC,K,SCPXuC,EAAsD,SAAA7C,GACxD,IAAM8B,EAAIgB,YAAa,iCAEjBC,EAAyBC,OAAOC,OAAOC,KAAKlD,EAAMmD,yBAAyB,IAHhB,EAKjCC,cALiC,mBAK1DC,EAL0D,KAKhDC,EALgD,OAOrCrD,oBAAS,GAP4B,mBAO1DsD,EAP0D,KAOlDC,EAPkD,OAS3BvD,mBAAiC,MATN,mBAS1DwD,EAT0D,KAS7CC,EAT6C,KAW3DC,EAAWC,YAAqB,EAAG,KAXwB,SAalDC,EAbkD,8EAajE,WAA4BjD,GAA5B,mBAAAC,EAAA,sEAC2CiD,IAAIC,KAAKC,WAAW,CAC3DjC,MAAOnB,EACPqD,SAAU,QAHd,mBACUC,EADV,EACUA,aAAcC,EADxB,EACwBA,UAKlBD,EANN,gBAMoBE,IAAMC,MAAMH,EAAapC,IAN7C,gDAQWqC,EAASG,UAAUtC,KAAI,SAAA+B,GAAI,MAAK,CACrC7B,IAAK6B,EAAKQ,GACV9B,KAAMsB,EACN5B,QAASwB,EACP,sBAAKvC,UAAWC,IAAMmD,oBAAtB,UACE,eAACC,EAAA,EAAD,CAAQC,GAAG,KAAKC,OAAK,EAACvD,UAAWC,IAAMuD,WAAa,IAAMvD,IAAMwD,SAAhE,UACE,cAACC,EAAA,EAAD,CACE1D,UAAWC,IAAMuD,WAAa,IAAMvD,IAAM0D,OAC1CC,WAAYjB,EAAKgB,OACjBE,UAAW,KACXC,SAAO,IAET,qBAAK9D,UAAWC,IAAMuD,WAAa,IAAMvD,IAAM8D,SAA/C,SAA0DpB,EAAKoB,cAEhEpB,EAAKqB,OAAS,qBAAKhE,UAAWC,IAAMuD,WAAa,IAAMvD,IAAM+D,MAA/C,SAAuDrB,EAAKqB,WAG7E,qCACE,cAACN,EAAA,EAAD,CACE1D,UAAWC,IAAMuD,WAAa,IAAMvD,IAAM0D,OAC1CC,WAAYjB,EAAKgB,OACjBE,UAAW,KACXC,SAAO,IAET,qBAAK9D,UAAWC,IAAMuD,WAAa,IAAMvD,IAAM8D,SAA/C,SAA0DpB,EAAKoB,WAC9DpB,EAAKqB,OAAS,8BAAMrB,EAAKqB,gBAjCpC,iCAsCS,IAtCT,6CAbiE,+BAqGlDC,EArGkD,8EAqGjE,WAA6BzE,GAA7B,mBAAAC,EAAA,sEAC2CiD,IAAIwB,MAAMC,YAAY,CAC7DxD,MAAOnB,EACPqD,SAAU,QAHd,mBACUC,EADV,EACUA,aAAcC,EADxB,EACwBA,UAKlBD,EANN,gBAMoBE,IAAMC,MAAMH,EAAapC,IAN7C,gDAQWqC,EAASqB,WAAWxD,KAAI,SAAAsD,GAAK,MAAK,CACvCpD,IAAKoD,EAAMf,GACX9B,KAAM6C,EACNnD,QACE,sBAAKf,UAAWC,IAAMoE,UAAtB,UACE,cAACC,EAAA,EAAD,CAAMtE,UAAWC,IAAMsE,UAAWC,KAAK,UACtCN,EAAMM,aAdjB,iCAmBS,IAnBT,6CArGiE,sBAyKjE,SAASC,IACPvC,GAAY,GACZE,GAAU,GACVsC,EAAOC,QA5KwD,MA+K/BC,YAAuB,sBAAC,4BAAAnF,EAAA,sEACjCb,EAAMiG,oBAC3BxC,EAAYyC,gBAAgBlE,KAAI,gBAAG+B,EAAH,EAAGA,KAAMoC,EAAT,EAASA,gBAAT,MAAgC,CAC9DC,OAAQrC,EAAKQ,GACb4B,sBAEF1C,EAAY4C,iBAAiBrE,KAAI,gBAAGsD,EAAH,EAAGA,MAAOa,EAAV,EAAUA,gBAAV,MAAiC,CAChEG,QAAShB,EAAMf,GACf4B,uBARoD,QAYvC,KAXXhC,EADkD,QAatD0B,IACS1B,EAASE,OAClBD,IAAMC,MACJvC,EAAE,iBAAD,OACkBqC,EAASE,OACzBF,EAASoC,cAEN,CACEhC,GAAIJ,EAASoC,cAAcC,YAF7B,OAnB8C,4CA/KO,mBA+K1DC,EA/K0D,KA+K3CC,EA/K2C,KA2M3DC,EAA6B,SAAC5C,GAAD,OACjC,qCACE,eAAC6C,EAAA,EAAMC,KAAP,CAAYC,MAAOnD,EAAW,EAAI,EAAGvC,UAAWC,IAAM0F,eAAtD,UACE,eAACtC,EAAA,EAAD,CAAQC,GAAG,KAAKC,OAAK,EAArB,UACE,cAACG,EAAA,EAAD,CAAY1D,UAAWC,IAAM0D,OAAQC,WAAYjB,EAAKgB,OAAQE,UAAW,KAAMC,SAAO,IACtF,cAACT,EAAA,EAAOuC,QAAR,UACGjD,EAAKoB,cAITxB,GAAYI,EAAKqB,OAAS,qBAAKhE,UAAWC,IAAM4F,kBAAtB,SAA0ClD,EAAKqB,YAE1EzB,GAAY,cAACiD,EAAA,EAAMC,KAAP,CAAYC,MAAO,EAAnB,SAAuB/C,EAAKqB,YAIxCU,EAASoB,YACb,IACA,kBACE,cAACzC,EAAA,EAAD,CACE0C,KAAK,MACL/F,UAAWC,IAAM+F,aACjBjF,QACE,qCACGL,EAAE,YACD6B,GAAY,qBAAKvC,UAAWC,IAAMgG,iBAAtB,SAAyCrH,EAAMsH,4BAKrE,kBACE,qCACE,cAAC7C,EAAA,EAAD,CAAQC,GAAG,KAAX,SAAiB5C,EAAE,2BACnB,eAAC8E,EAAA,EAAD,CAAOW,OAAK,EAACC,aAAW,EAAxB,UACE,eAACZ,EAAA,EAAMa,KAAP,WACE,eAACb,EAAA,EAAMc,IAAP,WACGf,EAA2BlD,EAAYkE,OACxC,cAACf,EAAA,EAAMC,KAAP,CAAYC,MAAOnD,EAAW,EAAI,EAAlC,SAAsC7B,EAAE,YACxC,cAAC8E,EAAA,EAAMC,KAAP,CAAYC,MAAO,EAAGc,UAAU,QAAhC,SACE,cAAClC,EAAA,EAAD,CAAMmC,UAAQ,EAACjC,KAAK,gBAGvBnC,EAAYyC,gBAAgBlE,KAAI,SAAC8F,EAAgBvF,GAAjB,OAC/B,eAACqE,EAAA,EAAMc,IAAP,WACGf,EAA2BmB,EAAe/D,MAC3C,cAAC6C,EAAA,EAAMC,KAAP,CAAYzF,UAAWC,IAAM0G,eAA7B,SACE,cAAC5G,EAAA,EAAD,CACEM,MAAOqG,EAAe3B,gBAAgBK,WACtCwB,QAAS/E,OAAOC,KAAKlD,EAAMmD,yBAAyBnB,KAAI,SAAAmE,GAAe,MAAK,CAC1EjE,IAAKiE,EACL1E,MAAO0E,EACP/D,KAAMpC,EAAMmD,wBAAyBgD,GAAmC8B,MACxEJ,UACGpE,EAAYyE,sBAAwBlF,OAAOmD,KAAqB2B,EAAe3B,oBAEpF7D,SAAU,SAACX,EAAD,OAAMF,EAAN,EAAMA,MAAN,OAvL5B,SAA8Bc,EAAe4D,GAC3C7C,GAAY,GACZI,EACEyE,IAAO1E,EAAa,CAClByC,gBAAgB,eACb3D,EAAQ,CACP4D,gBAAiB,CACfiC,KAAMjC,QAgL4BkC,CAAqB9F,EAAOS,OAAOvB,SAGnE,cAACmF,EAAA,EAAMC,KAAP,CAAYe,UAAU,QAAtB,SACE,cAAClC,EAAA,EAAD,CAAME,KAAK,SAASiC,UAAWpE,EAAYyE,qBAAsBI,QAAS,kBA5K1F,SAAoB/F,GAClBe,GAAY,GACZI,EACEyE,IAAO1E,EAAa,CAClByC,gBAAiB,CACfqC,QAAS,CAAC,CAAChG,EAAO,QAuKsEiG,CAAWjG,UAhB/EuF,EAAe/D,KAAKQ,UAqBvCd,EAAYyE,sBACX,cAACtB,EAAA,EAAM6B,OAAP,UACE,cAAC7B,EAAA,EAAMc,IAAP,UACE,cAACd,EAAA,EAAM8B,WAAP,CAAkBC,QAAS,EAAGvH,UAAWC,IAAM0G,eAA/C,SACE,cAAC,EAAD,CACExG,YAAaO,EAAE,iBACfa,gBAAiBb,EAAE,2BACnBpB,SAAUmD,EACVrB,SAAU,SAAAuB,GAAI,OA7NhC,SAAiBA,GACf,GAAIN,EAAYkE,MAAMpD,KAAOR,EAAKQ,GAAlC,CAD+B,oBAEFd,EAAYyC,iBAFV,IAE/B,2BACE,GADwD,QACrCnC,KAAKQ,KAAOR,EAAKQ,GAAI,OAHX,8BAM/BjB,GAAY,GACZI,EACEyE,IAAO1E,EAAa,CAClByC,gBAAiB,CACf0C,MAAO,CACL,CACE7E,OACAoC,gBAAiBpD,SAgNO8F,CAAQ9E,eAOtC,cAACU,EAAA,EAAD,CAAQC,GAAG,KAAX,SAAiB5C,EAAE,4BACnB,eAAC8E,EAAA,EAAD,CAAOkC,SAAO,EAACvB,OAAK,EAACC,aAAW,EAAhC,UACE,cAACZ,EAAA,EAAMa,KAAP,UAC2C,IAAxChE,EAAY4C,iBAAiBpF,OAC5B,cAAC2F,EAAA,EAAMc,IAAP,UACE,cAACd,EAAA,EAAM8B,WAAP,CAAkBC,QAAS,EAAGf,UAAU,SAASxG,UAAWC,IAAM0H,eAAlE,SACGjH,EAAE,yBAIP2B,EAAY4C,iBAAiBrE,KAAI,SAACgH,EAAiBzG,GAAlB,OAC/B,eAACqE,EAAA,EAAMc,IAAP,WACE,eAACd,EAAA,EAAMC,KAAP,CAAYzF,UAAWC,IAAM4H,gBAAiBnC,MAAO,EAArD,UACE,cAACpB,EAAA,EAAD,CAAMtE,UAAWC,IAAMsE,UAAWC,KAAK,UACtCoD,EAAgB1D,MAAMM,QAEzB,cAACgB,EAAA,EAAMC,KAAP,CAAYC,MAAO,EAAG1F,UAAWC,IAAM0G,eAAvC,SACE,cAAC5G,EAAA,EAAD,CACEM,MAAOuH,EAAgB7C,gBAAgBK,WACvCwB,QAAS/E,OAAOC,KAAKlD,EAAMmD,yBAAyBnB,KAAI,SAAAmE,GAAe,MAAK,CAC1EjE,IAAKiE,EACL1E,MAAO0E,EACP/D,KAAMpC,EAAMmD,wBAAyBgD,GAAmC8B,MACxEJ,UACGpE,EAAYyE,sBACblF,OAAOmD,KAAqB6C,EAAgB7C,oBAEhD7D,SAAU,SAACX,EAAD,OAAMF,EAAN,EAAMA,MAAN,OAtK9B,SAA+Bc,EAAe4D,GAC5C7C,GAAY,GACZI,EACEyE,IAAO1E,EAAa,CAClB4C,iBAAiB,eACd9D,EAAQ,CACP4D,gBAAiB,CACfiC,KAAMjC,QA+J8B+C,CAAsB3G,EAAOS,OAAOvB,SAGpE,cAACmF,EAAA,EAAMC,KAAP,CAAYC,MAAO,EAAGc,UAAU,QAAhC,SACE,cAAClC,EAAA,EAAD,CACEE,KAAK,SACLiC,UAAWpE,EAAYyE,qBACvBI,QAAS,kBA9J7B,SAAqB/F,GACnBe,GAAY,GACZI,EACEyE,IAAO1E,EAAa,CAClB4C,iBAAkB,CAChBkC,QAAS,CAAC,CAAChG,EAAO,QAyJS4G,CAAY5G,UAvBjByG,EAAgB1D,MAAMf,SA8B3Cd,EAAYyE,sBACX,cAACtB,EAAA,EAAM6B,OAAP,UACE,cAAC7B,EAAA,EAAMc,IAAP,UACE,cAACd,EAAA,EAAM8B,WAAP,CAAkBC,QAAS,EAAGvH,UAAWC,IAAM0G,eAA/C,SACE,cAAC,EAAD,CACExG,YAAaO,EAAE,kBACfa,gBAAiBb,EAAE,4BACnBpB,SAAU2E,EACV7C,SAAU,SAAA8C,GAAK,OAhNjC,SAAkBA,GAAmB,IAAD,gBACJ7B,EAAY4C,kBADR,IAClC,2BACE,GAD0D,QACtCf,MAAMf,KAAOe,EAAMf,GAAI,OAFX,8BAKlCjB,GAAY,GACZI,EACEyE,IAAO1E,EAAa,CAClB4C,iBAAkB,CAChBuC,MAAO,CACL,CACEtD,QACAa,gBAAiBpD,QAoMQqG,CAAS9D,qBAS5C,kBACE,qCACE,cAAC+D,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAQpH,QAASL,EAAE,WAAY+F,SAAUpB,EAAe6B,QAAS,kBAAOjF,GAAYwC,OAE7FgC,UAAWxE,EACXlB,QAAS,cAACoH,EAAA,EAAD,CAAQC,UAAQ,EAACrH,QAASL,EAAE,mBAAoBwG,QAAS,kBAAMzC,OACxE4D,GAAG,QACHC,SAAS,eAEX,cAACH,EAAA,EAAD,CACEI,UAAQ,EACRxH,QAASsB,EAAYyE,qBAAuBpG,EAAE,WAAaA,EAAE,yBAC7Dc,QAAS6D,EACToB,UAAWpE,EAAYyE,qBACvBI,QAAS,kBAAM5B,aAnW0C,EAyW3BzG,oBAAS,GAzWkB,mBAyW1D2J,EAzW0D,KAyW7CC,EAzW6C,KA+XjE,OArBAC,qBAAU,WACR,IAAMC,EAAI,uCAAG,4BAAAlJ,EAAA,0DACP0C,IAAUqG,EADH,wDAGXC,GAAe,GAHJ,SAIsB7J,EAAMgK,0BAJ5B,UAILC,EAJK,OAKXJ,GAAe,GAEVI,EAPM,0CAOqB,GAPrB,cASXzG,GAAU,GACVE,EAAeuG,GAEfnE,EAAOiE,OAZI,mBAaJ,GAbI,4CAAH,qDAgBmB,oBAAlB/J,EAAMkK,QAAwBlK,EAAMkK,QAAQH,GACjD/J,EAAMkK,QAA2DnJ,QAAUgJ,IAChF,CAAC/J,EAAMkK,QAASlK,EAAMgK,wBAAyBzG,EAAQqG,EAAa9D,IAEhEA,EAAOqE,SAGhBtH,EAAoBuH,YAASvH,GAEdA","file":"static/js/141.b31ece0b.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { Dropdown } from \"semantic-ui-react\";\nimport { useDebouncedCallback } from \"use-debounce\";\n\nimport style from \"./TableCellSearchDropdown.module.less\";\n\ninterface ResultItem {\n  key: React.ReactText;\n  data: any;\n  content: React.ReactNode;\n}\n\ninterface TableCellSearchDropdownProps {\n  placeholder: string;\n  noResultMessage: string;\n  onSearch: (input: string) => Promise<ResultItem[]>;\n  onSelect: (data: any) => void;\n}\n\nconst TableCellSearchDropdown: React.FC<TableCellSearchDropdownProps> = props => {\n  const [result, setResult] = useState<ResultItem[]>([]);\n  const [noResult, setNoResult] = useState(false);\n\n  // If the search result returns after the input changed, don't show the result\n  const [pending, setPending] = useState(false);\n  const refInput = useRef(\"\");\n  const onSearch = useDebouncedCallback(async (input: string) => {\n    input = input.trim();\n\n    setPending(true);\n    refInput.current = input;\n\n    if (!input) {\n      setPending(false);\n      return;\n    }\n\n    const results = await props.onSearch(input);\n\n    if (refInput.current !== input) {\n      // Still pending\n      return;\n    }\n\n    setResult(results || []);\n    if (!results || results.length === 0) setNoResult(true);\n    setPending(false);\n  }, 500).callback;\n\n  function onSelect(index: number) {\n    props.onSelect(result[index].data);\n    setResult([]);\n  }\n\n  return (\n    <Dropdown\n      className={style.dropdown}\n      placeholder={props.placeholder}\n      fluid\n      value={null}\n      onSearchChange={(e, { searchQuery }) => {\n        setPending(true);\n        setNoResult(false);\n        onSearch(searchQuery);\n      }}\n      search={(_, query) =>\n        result.map(({ key, content }, i) => ({\n          key,\n          value: i,\n          text: <div className={style.resultItem}>{content}</div>\n        }))\n      }\n      onChange={(e, { value }) => onSelect(value as number)}\n      noResultsMessage={noResult ? props.noResultMessage : null}\n      loading={pending}\n    />\n  );\n};\n\nexport default TableCellSearchDropdown;\n","import React, { useEffect, useState } from \"react\";\nimport { Table, Button, Popup, Header, Icon, Dropdown } from \"semantic-ui-react\";\nimport { observer } from \"mobx-react\";\nimport update from \"immutability-helper\";\n\nimport style from \"./PermissionManager.module.less\";\n\nimport {\n  useLocalizer,\n  useConfirmNavigation,\n  useDialog,\n  useAsyncCallbackPending,\n  useScreenWidthWithin\n} from \"@/utils/hooks\";\nimport { UserMeta } from \"@/interfaces/UserMeta\";\nimport { GroupMeta } from \"@/interfaces/GroupMeta\";\nimport api from \"@/api\";\nimport toast from \"@/utils/toast\";\nimport TableCellSearchDropdown from \"./TableCellSearchDropdown\";\nimport UserAvatar from \"./UserAvatar\";\n\ntype PermissionLevelDetails = Record<number, { title: string /* description: string; */ }>;\n\ninterface UserPermissionDtoForRequest {\n  userId: number;\n  permissionLevel: number;\n}\n\ninterface GroupPermissionDtoForRequest {\n  groupId: number;\n  permissionLevel: number;\n}\n\ninterface UserPermissionDtoForResponse {\n  user: UserMeta;\n  permissionLevel: number;\n}\n\ninterface GroupPermissionDtoForResponse {\n  group: GroupMeta;\n  permissionLevel: number;\n}\n\ninterface PermissionsForResponse {\n  owner: UserMeta;\n  userPermissions: UserPermissionDtoForResponse[];\n  groupPermissions: GroupPermissionDtoForResponse[];\n  haveSubmitPermission: boolean;\n}\n\nexport interface PermissionManagerProps {\n  objectDescription: string; // e.g. \"Problem #1\"\n  permissionsLevelDetails: PermissionLevelDetails;\n  refOpen: React.Ref<() => Promise<boolean>>;\n  onGetInitialPermissions: () => Promise<PermissionsForResponse>;\n  onSubmitPermissions: (\n    userPermissions: UserPermissionDtoForRequest[],\n    groupPermissions: GroupPermissionDtoForRequest[]\n  ) => Promise<\n    | {\n        error?: \"PERMISSION_DENIED\" | \"NO_SUCH_USER\" | \"NO_SUCH_GROUP\" | string;\n        errorObjectId?: number;\n      }\n    | true\n  >;\n}\n\nlet PermissionManager: React.FC<PermissionManagerProps> = props => {\n  const _ = useLocalizer(\"components.permission_manager\");\n\n  const defaultPermissionLevel = Number(Object.keys(props.permissionsLevelDetails)[0]);\n\n  const [modified, setModified] = useConfirmNavigation();\n\n  const [opened, setOpened] = useState(false);\n\n  const [permissions, setPermissions] = useState<PermissionsForResponse>(null);\n\n  const isMobile = useScreenWidthWithin(0, 768);\n\n  async function onSearchUser(input: string) {\n    const { requestError, response } = await api.user.searchUser({\n      query: input,\n      wildcard: \"End\"\n    });\n\n    if (requestError) toast.error(requestError(_));\n    else\n      return response.userMetas.map(user => ({\n        key: user.id,\n        data: user,\n        content: isMobile ? (\n          <div className={style.userResultContainer}>\n            <Header as=\"h4\" image className={style.userResult + \" \" + style.firstRow}>\n              <UserAvatar\n                className={style.userResult + \" \" + style.avatar}\n                userAvatar={user.avatar}\n                imageSize={27.5}\n                rounded\n              />\n              <div className={style.userResult + \" \" + style.username}>{user.username}</div>\n            </Header>\n            {user.email && <div className={style.userResult + \" \" + style.email}>{user.email}</div>}\n          </div>\n        ) : (\n          <>\n            <UserAvatar\n              className={style.userResult + \" \" + style.avatar}\n              userAvatar={user.avatar}\n              imageSize={27.5}\n              rounded\n            />\n            <div className={style.userResult + \" \" + style.username}>{user.username}</div>\n            {user.email && <div>{user.email}</div>}\n          </>\n        )\n      }));\n\n    return [];\n  }\n\n  function addUser(user: UserMeta) {\n    if (permissions.owner.id === user.id) return;\n    for (const userPermission of permissions.userPermissions) {\n      if (userPermission.user.id === user.id) return;\n    }\n\n    setModified(true);\n    setPermissions(\n      update(permissions, {\n        userPermissions: {\n          $push: [\n            {\n              user,\n              permissionLevel: defaultPermissionLevel\n            }\n          ]\n        }\n      })\n    );\n  }\n\n  function changeUserPermission(index: number, permissionLevel: number) {\n    setModified(true);\n    setPermissions(\n      update(permissions, {\n        userPermissions: {\n          [index]: {\n            permissionLevel: {\n              $set: permissionLevel\n            }\n          }\n        }\n      })\n    );\n  }\n\n  function deleteUser(index: number) {\n    setModified(true);\n    setPermissions(\n      update(permissions, {\n        userPermissions: {\n          $splice: [[index, 1]]\n        }\n      })\n    );\n  }\n\n  async function onSearchGroup(input: string) {\n    const { requestError, response } = await api.group.searchGroup({\n      query: input,\n      wildcard: \"End\"\n    });\n\n    if (requestError) toast.error(requestError(_));\n    else\n      return response.groupMetas.map(group => ({\n        key: group.id,\n        data: group,\n        content: (\n          <div className={style.groupName}>\n            <Icon className={style.groupIcon} name=\"group\" />\n            {group.name}\n          </div>\n        )\n      }));\n\n    return [];\n  }\n\n  function addGroup(group: GroupMeta) {\n    for (const groupPermission of permissions.groupPermissions) {\n      if (groupPermission.group.id === group.id) return;\n    }\n\n    setModified(true);\n    setPermissions(\n      update(permissions, {\n        groupPermissions: {\n          $push: [\n            {\n              group,\n              permissionLevel: defaultPermissionLevel\n            }\n          ]\n        }\n      })\n    );\n  }\n\n  function changeGroupPermission(index: number, permissionLevel: number) {\n    setModified(true);\n    setPermissions(\n      update(permissions, {\n        groupPermissions: {\n          [index]: {\n            permissionLevel: {\n              $set: permissionLevel\n            }\n          }\n        }\n      })\n    );\n  }\n\n  function deleteGroup(index: number) {\n    setModified(true);\n    setPermissions(\n      update(permissions, {\n        groupPermissions: {\n          $splice: [[index, 1]]\n        }\n      })\n    );\n  }\n\n  function onClose() {\n    setModified(false);\n    setOpened(false);\n    dialog.close();\n  }\n\n  const [pendingSubmit, onSubmit] = useAsyncCallbackPending(async () => {\n    const response = await props.onSubmitPermissions(\n      permissions.userPermissions.map(({ user, permissionLevel }) => ({\n        userId: user.id,\n        permissionLevel\n      })),\n      permissions.groupPermissions.map(({ group, permissionLevel }) => ({\n        groupId: group.id,\n        permissionLevel\n      }))\n    );\n\n    if (response === true) {\n      onClose();\n    } else if (response.error) {\n      toast.error(\n        _(\n          `.submit_error.${response.error}`,\n          !response.errorObjectId\n            ? null\n            : {\n                id: response.errorObjectId.toString()\n              }\n        )\n      );\n    }\n  });\n\n  const getUsernameAndEmailColumns = (user: UserMeta) => (\n    <>\n      <Table.Cell width={isMobile ? 8 : 4} className={style.columnUsername}>\n        <Header as=\"h4\" image>\n          <UserAvatar className={style.avatar} userAvatar={user.avatar} imageSize={27.5} rounded />\n          <Header.Content>\n            {user.username}\n            {/* <Header.Subheader>{user.name}</Header.Subheader> */}\n          </Header.Content>\n        </Header>\n        {isMobile && user.email && <div className={style.emailInMobileView}>{user.email}</div>}\n      </Table.Cell>\n      {!isMobile && <Table.Cell width={6}>{user.email}</Table.Cell>}\n    </>\n  );\n\n  const dialog = useDialog(\n    {},\n    () => (\n      <Header\n        icon=\"key\"\n        className={style.dialogHeader}\n        content={\n          <>\n            {_(\".header\")}\n            {!isMobile && <div className={style.dialogHeaderInfo}>{props.objectDescription}</div>}\n          </>\n        }\n      />\n    ),\n    () => (\n      <>\n        <Header as=\"h4\">{_(\".permission_for_users\")}</Header>\n        <Table fixed unstackable>\n          <Table.Body>\n            <Table.Row>\n              {getUsernameAndEmailColumns(permissions.owner)}\n              <Table.Cell width={isMobile ? 6 : 4}>{_(\".owner\")}</Table.Cell>\n              <Table.Cell width={2} textAlign=\"right\">\n                <Icon disabled name=\"delete\" />\n              </Table.Cell>\n            </Table.Row>\n            {permissions.userPermissions.map((userPermission, index) => (\n              <Table.Row key={userPermission.user.id}>\n                {getUsernameAndEmailColumns(userPermission.user)}\n                <Table.Cell className={style.columnDropdown}>\n                  <Dropdown\n                    value={userPermission.permissionLevel.toString()}\n                    options={Object.keys(props.permissionsLevelDetails).map(permissionLevel => ({\n                      key: permissionLevel,\n                      value: permissionLevel,\n                      text: props.permissionsLevelDetails[(permissionLevel as any) as number].title,\n                      disabled:\n                        !permissions.haveSubmitPermission && Number(permissionLevel) !== userPermission.permissionLevel\n                    }))}\n                    onChange={(e, { value }) => changeUserPermission(index, Number(value))}\n                  />\n                </Table.Cell>\n                <Table.Cell textAlign=\"right\">\n                  <Icon name=\"delete\" disabled={!permissions.haveSubmitPermission} onClick={() => deleteUser(index)} />\n                </Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n          {permissions.haveSubmitPermission && (\n            <Table.Footer>\n              <Table.Row>\n                <Table.HeaderCell colSpan={4} className={style.columnDropdown}>\n                  <TableCellSearchDropdown\n                    placeholder={_(\".search_users\")}\n                    noResultMessage={_(\".search_users_no_result\")}\n                    onSearch={onSearchUser}\n                    onSelect={user => addUser(user)}\n                  />\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Footer>\n          )}\n        </Table>\n        <Header as=\"h4\">{_(\".permission_for_groups\")}</Header>\n        <Table compact fixed unstackable>\n          <Table.Body>\n            {permissions.groupPermissions.length === 0 ? (\n              <Table.Row>\n                <Table.HeaderCell colSpan={3} textAlign=\"center\" className={style.noGroupGranted}>\n                  {_(\".no_group_granted\")}\n                </Table.HeaderCell>\n              </Table.Row>\n            ) : (\n              permissions.groupPermissions.map((groupPermission, index) => (\n                <Table.Row key={groupPermission.group.id}>\n                  <Table.Cell className={style.columnGroupName} width={7}>\n                    <Icon className={style.groupIcon} name=\"group\" />\n                    {groupPermission.group.name}\n                  </Table.Cell>\n                  <Table.Cell width={4} className={style.columnDropdown}>\n                    <Dropdown\n                      value={groupPermission.permissionLevel.toString()}\n                      options={Object.keys(props.permissionsLevelDetails).map(permissionLevel => ({\n                        key: permissionLevel,\n                        value: permissionLevel,\n                        text: props.permissionsLevelDetails[(permissionLevel as any) as number].title,\n                        disabled:\n                          !permissions.haveSubmitPermission &&\n                          Number(permissionLevel) !== groupPermission.permissionLevel\n                      }))}\n                      onChange={(e, { value }) => changeGroupPermission(index, Number(value))}\n                    />\n                  </Table.Cell>\n                  <Table.Cell width={5} textAlign=\"right\">\n                    <Icon\n                      name=\"delete\"\n                      disabled={!permissions.haveSubmitPermission}\n                      onClick={() => deleteGroup(index)}\n                    />\n                  </Table.Cell>\n                </Table.Row>\n              ))\n            )}\n          </Table.Body>\n          {permissions.haveSubmitPermission && (\n            <Table.Footer>\n              <Table.Row>\n                <Table.HeaderCell colSpan={3} className={style.columnDropdown}>\n                  <TableCellSearchDropdown\n                    placeholder={_(\".search_groups\")}\n                    noResultMessage={_(\".search_groups_no_result\")}\n                    onSearch={onSearchGroup}\n                    onSelect={group => addGroup(group)}\n                  />\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Footer>\n          )}\n        </Table>\n      </>\n    ),\n    () => (\n      <>\n        <Popup\n          trigger={<Button content={_(\".cancel\")} disabled={pendingSubmit} onClick={() => !modified && onClose()} />}\n          // It's safe to close if not modified, don't confirm\n          disabled={!modified}\n          content={<Button negative content={_(\".confirm_cancel\")} onClick={() => onClose()} />}\n          on=\"click\"\n          position=\"top center\"\n        />\n        <Button\n          positive\n          content={permissions.haveSubmitPermission ? _(\".submit\") : _(\".no_submit_permission\")}\n          loading={pendingSubmit}\n          disabled={!permissions.haveSubmitPermission}\n          onClick={() => onSubmit()}\n        />\n      </>\n    )\n  );\n\n  const [pendingOpen, setPendingOpen] = useState(false);\n  useEffect(() => {\n    const open = async () => {\n      if (opened || pendingOpen) return;\n\n      setPendingOpen(true);\n      const initialPermissions = await props.onGetInitialPermissions();\n      setPendingOpen(false);\n\n      if (!initialPermissions) return false;\n\n      setOpened(true);\n      setPermissions(initialPermissions);\n\n      dialog.open();\n      return true;\n    };\n\n    if (typeof props.refOpen === \"function\") props.refOpen(open);\n    else (props.refOpen as React.MutableRefObject<() => Promise<boolean>>).current = open;\n  }, [props.refOpen, props.onGetInitialPermissions, opened, pendingOpen, dialog]);\n\n  return dialog.element;\n};\n\nPermissionManager = observer(PermissionManager);\n\nexport default PermissionManager;\n"],"sourceRoot":""}