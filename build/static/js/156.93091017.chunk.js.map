{"version":3,"sources":["pages/problem/problem-set/ProblemTagManager.tsx","pages/problem/problem-set/ProblemSetPage.tsx"],"names":["Tag","props","_","useLocalizer","refClickDisabled","useRef","useState","editPromptOpened","setEditPromptOpened","Popup","open","onClose","popperModifiers","name","options","enabled","trigger","EmojiRenderer","Label","as","className","style","tag","content","color","removeIcon","deleteTagPopup","Icon","disabled","onClick","current","setTimeout","Button","negative","loading","onDelete","position","on","editing","promptEdit","onEdit","onRemove","ProblemTagManager","navigation","useNavigationChecked","useConfirmNavigation","modified","setModified","tags","setTags","tagsCount","Object","keys","length","tagLocalizedNames","fromEntries","entries","map","i","matching","localizedNames","find","localizedName","locale","appState","colors","sortTagColors","Array","from","Set","values","tagsByColor","Number","filter","x","sort","j","pendingDelete","setPendingDelete","pendingSubmit","setPendingSubmit","pending","tagId","a","api","problem","deleteProblemTag","id","requestError","response","toast","error","newTags","assign","editingTagId","initNewTag","setEditingTagId","editingTagColor","setEditingTagColor","editingTagLocalizedNames","setEditingTagLocalizedNames","editingTagDefaultLocale","setEditingTagDefaultLocale","modifyDone","setModifyDone","findIndex","defaultLocalizedName","splice","unshift","createProblemTag","success","updateProblemTag","onNewTag","onChangeName","newName","getTagLabel","onDeleteTag","existingLocales","Locale","dialog","useDialog","Header","dialogHeader","icon","dialogHeaderInfo","count","toString","tagsSegment","noTags","tagIDs","Form","headerContainer","header","Dropdown","colorDropdown","selection","inline","value","tagColors","key","text","circular","empty","onChange","e","newColor","Menu","attached","top","bottom","menu","Item","itemLocale","Flag","localeMeta","flag","itemName","Input","transparent","placeholder","itemDefault","Radio","checked","onSetDefaultLocale","label","itemIcon","deletingLocale","divAddLanguageAndSubmit","includes","onAddLocale","addButton","positive","submitButton","primary","onSubmit","closeButton","setOpened","refresh","close","opened","pendingOpen","setPendingOpen","refOpen","getAllProblemTagsOfAllLocales","element","observer","generateRequestFromSearchQuery","searchQuery","currentPage","requestBody","skipCount","PROBLEMS_PER_PAGE","takeCount","keyword","tagIds","ownerId","nonpublic","fetchData","queryProblemSet","RouteError","showRefresh","showBack","makeToBeLocalizedText","generateSearchQuery","query","substr","join","serverPreference","pagination","problemSet","ProblemSetPage","useEffect","enterNewPage","isMobileOrPad","useScreenWidthWithin","isVeryNarrowScreen","refOnOpenTagManager","searchMode","setSearchMode","searchTagKeyword","setSearchTagKeyword","changeSearchMode","newSearchMode","getTags","getAllProblemTags","tagEntires","useMemo","toLowerCase","indexOf","problems","result","sortTags","redirectWithFilter","navigate","onAddFilterTag","concat","onDelFilterTag","onAddFilterNonpublic","permissions","filterNonpublic","currentUser","getPagination","Pagination","totalCount","itemsPerPage","pageUrl","page","type","undefined","size","headerSearch","ProblemSearch","search","queryParameters","onResultSelect","getProblemUrl","meta","onEnterPress","searchKeyword","onAddFilterKeyword","Search","showNoResults","onSearchChange","input","iconPosition","fluid","UserSearch","user","searchMenu","secondary","searchMenuItem","active","title","filterByOwner","headerTagList","Segment","tagsList","Loader","filtersApplied","filterTags","filterOwner","headerSearchFilters","username","basic","headerShowTagsCheckbox","Checkbox","showTagsCheckbox","toggle","showTagsInProblemSet","useAsyncCallbackPending","openTagManagerPending","onOpenTagManager","headerButtons","manageTags","createProblem","Link","href","headerSearchRow","headerSearchFiltersRow","headerControlRow","headerRow","headerRightControls","topPagination","Inline","goBack","Table","textAlign","unstackable","Row","tableHeaderRow","HeaderCell","width","Body","row","Cell","submission","status","noMarginRight","getProblemIdString","hideHashTagOnDisplayId","problemTitleCell","getProblemDisplayName","isPublic","labelNonPublic","display","submissionCount","acceptedSubmissionCount","toFixed","defineRoute","request","parseInt","split","isSafeInteger"],"mappings":"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","file":"static/js/156.93091017.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport {\n  Header,\n  Button,\n  Popup,\n  Segment,\n  Label,\n  Icon,\n  Form,\n  Menu,\n  Flag,\n  Input,\n  Radio,\n  Dropdown\n} from \"semantic-ui-react\";\nimport { observer } from \"mobx-react\";\n\nimport style from \"./ProblemTagManager.module.less\";\n\nimport { useDialog, useLocalizer, useConfirmNavigation, useNavigationChecked } from \"@/utils/hooks\";\nimport api from \"@/api\";\nimport toast from \"@/utils/toast\";\nimport { appState } from \"@/appState\";\nimport { Locale } from \"@/interfaces/Locale\";\nimport localeMeta from \"@/locales/meta\";\nimport { tagColors, sortTagColors } from \"../problemTag\";\nimport { EmojiRenderer } from \"@/components/EmojiRenderer\";\n\ninterface TagProps {\n  disabled: boolean;\n  promptEdit: boolean;\n  editing: boolean;\n  color: string;\n  name: string;\n  onEdit: () => void;\n  onDelete: () => void;\n}\n\nconst Tag: React.FC<TagProps> = props => {\n  const _ = useLocalizer(\"problem_tag_manager\");\n\n  // Prevent the clicks on delete icon or delete icon's popup trigger an click event on the label\n  const refClickDisabled = useRef(false);\n\n  const [editPromptOpened, setEditPromptOpened] = useState(false);\n  return (\n    <Popup\n      open={editPromptOpened}\n      onClose={() => setEditPromptOpened(false)}\n      popperModifiers={[\n        {\n          name: \"preventOverflow\",\n          options: { enabled: false }\n        }\n      ]}\n      trigger={\n        <EmojiRenderer>\n          <Label\n            as=\"a\"\n            className={style.tag}\n            content={props.name}\n            color={props.color as any}\n            removeIcon={\n              <Popup\n                className={style.deleteTagPopup}\n                popperModifiers={[\n                  {\n                    name: \"preventOverflow\",\n                    options: { enabled: false }\n                  }\n                ]}\n                trigger={\n                  <Icon\n                    name=\"delete\"\n                    disabled={props.disabled}\n                    onClick={() => {\n                      refClickDisabled.current = true;\n                      setTimeout(() => (refClickDisabled.current = false), 0);\n                    }}\n                  />\n                }\n                disabled={props.disabled}\n                content={\n                  <Button\n                    negative\n                    content={_(\".confirm_delete_tag\")}\n                    loading={props.disabled}\n                    onClick={() => {\n                      refClickDisabled.current = true;\n                      setTimeout(() => (refClickDisabled.current = false), 0);\n                      props.onDelete();\n                    }}\n                  />\n                }\n                position=\"right center\"\n                on=\"click\"\n              />\n            }\n            onClick={() => {\n              if (refClickDisabled.current) return;\n              if (props.editing) return;\n              if (props.promptEdit) setEditPromptOpened(true);\n              else props.onEdit();\n            }}\n            onRemove={() => undefined}\n          />\n        </EmojiRenderer>\n      }\n      disabled={!props.promptEdit}\n      content={\n        <Button\n          negative\n          content={_(\".confirm_discard_unsaved\")}\n          onClick={() => {\n            if (props.editing) return;\n            props.onEdit();\n            setEditPromptOpened(false);\n          }}\n        />\n      }\n      position=\"bottom center\"\n      on=\"click\"\n    />\n  );\n};\n\ninterface ProblemTagManagerProps {\n  refOpen: React.MutableRefObject<() => Promise<boolean>>;\n}\n\nlet ProblemTagManager: React.FC<ProblemTagManagerProps> = props => {\n  const _ = useLocalizer(\"problem_tag_manager\");\n  const navigation = useNavigationChecked();\n\n  const [modified, setModified] = useConfirmNavigation();\n\n  const [tags, setTags] = useState<Record<number, ApiTypes.ProblemTagWithAllLocalesDto>>({});\n  const tagsCount = Object.keys(tags).length;\n\n  const tagLocalizedNames = Object.fromEntries(\n    Object.entries(tags).map(([i, tag]) => {\n      const matching = tag.localizedNames.find(localizedName => localizedName.locale === appState.locale);\n      if (matching) return [i, matching.name];\n      return [i, tag.localizedNames[0].name];\n    })\n  );\n\n  const colors = sortTagColors(Array.from(new Set(Object.values(tags).map(tag => tag.color))));\n  const tagsByColor = Object.fromEntries(\n    colors.map(color => [\n      color,\n      Object.entries(tags)\n        .map(([i, tag]) => (tag.color === color ? Number(i) : null))\n        .filter(x => x != null)\n        .sort((i, j) =>\n          tagLocalizedNames[i] < tagLocalizedNames[j] ? -1 : tagLocalizedNames[i] > tagLocalizedNames[j] ? 1 : 0\n        )\n    ])\n  );\n\n  const [pendingDelete, setPendingDelete] = useState(false);\n  const [pendingSubmit, setPendingSubmit] = useState(false);\n\n  const pending = pendingDelete || pendingSubmit;\n\n  async function onDeleteTag(tagId: number) {\n    if (pending) return;\n    setPendingDelete(true);\n\n    const { requestError, response } = await api.problem.deleteProblemTag({\n      id: tagId\n    });\n    if (requestError) toast.error(requestError(_));\n    else if (response.error) toast.error(_(`.error.${response.error}`));\n    else {\n      const newTags = Object.assign({}, tags);\n      delete newTags[tagId];\n      setTimeout(() => setTags(newTags), 0);\n      if (tagId === editingTagId) initNewTag();\n    }\n\n    setPendingDelete(false);\n  }\n\n  const [editingTagId, setEditingTagId] = useState<number>(null);\n  const [editingTagColor, setEditingTagColor] = useState<string>(\"blue\");\n  const [editingTagLocalizedNames, setEditingTagLocalizedNames] = useState<Partial<Record<Locale, string>>>({\n    [appState.locale]: \"\"\n  });\n  const [editingTagDefaultLocale, setEditingTagDefaultLocale] = useState(appState.locale);\n\n  const [modifyDone, setModifyDone] = useState(false);\n\n  async function onSubmit() {\n    if (pending) return;\n    setPendingSubmit(true);\n\n    const localizedNames: ApiTypes.ProblemTagLocalizedNameDto[] = Object.entries(editingTagLocalizedNames).map(\n      ([locale, name]) => ({\n        locale: locale as any,\n        name\n      })\n    );\n    if (localizedNames[0].locale !== editingTagDefaultLocale) {\n      const i = localizedNames.findIndex(localizedName => localizedName.locale === editingTagDefaultLocale);\n      const defaultLocalizedName = localizedNames[i];\n      localizedNames.splice(i, 1);\n      localizedNames.unshift(defaultLocalizedName);\n    }\n\n    if (editingTagId == null) {\n      const { requestError, response } = await api.problem.createProblemTag({\n        color: editingTagColor,\n        localizedNames: localizedNames\n      });\n      if (requestError) toast.error(requestError(_));\n      else if (response.error) toast.error(_(`.error.${response.error}`));\n      else {\n        setTags(\n          Object.assign({}, tags, {\n            [response.id]: {\n              id: response.id,\n              color: editingTagColor,\n              localizedNames: localizedNames\n            }\n          })\n        );\n        toast.success(_(\".success_create\"));\n        setModified(false);\n        initNewTag();\n      }\n    } else {\n      const { requestError, response } = await api.problem.updateProblemTag({\n        id: editingTagId,\n        color: editingTagColor,\n        localizedNames: localizedNames\n      });\n      if (requestError) toast.error(requestError(_));\n      else if (response.error) toast.error(_(`.error.${response.error}`));\n      else {\n        setTags(\n          Object.assign({}, tags, {\n            [editingTagId]: {\n              id: editingTagId,\n              color: editingTagColor,\n              localizedNames: localizedNames\n            }\n          })\n        );\n        toast.success(_(\".success_update\"));\n        setModified(false);\n        setModifyDone(true);\n      }\n    }\n\n    setPendingSubmit(false);\n  }\n\n  function initNewTag() {\n    setModified(false);\n    setEditingTagId(null);\n    setEditingTagColor(\"blue\");\n    setEditingTagLocalizedNames({\n      [appState.locale]: \"\"\n    });\n    setEditingTagDefaultLocale(appState.locale);\n  }\n\n  function onNewTag() {\n    if (pending) return;\n    setModified(false);\n\n    initNewTag();\n  }\n\n  function onEditTag(tagId: number) {\n    if (pending) return;\n    if (tagId === editingTagId) return;\n    setModified(false);\n\n    setEditingTagId(tagId);\n    setEditingTagColor(tags[tagId].color);\n    setEditingTagLocalizedNames(\n      Object.fromEntries(tags[tagId].localizedNames.map(({ locale, name }) => [locale, name]))\n    );\n    setEditingTagDefaultLocale(tags[tagId].localizedNames[0].locale as Locale);\n  }\n\n  function onChangeColor(newColor: string) {\n    if (pending) return;\n    setModified(true);\n\n    setEditingTagColor(newColor);\n  }\n\n  function onChangeName(locale: Locale, newName: string) {\n    if (pending) return;\n    setModified(true);\n\n    setEditingTagLocalizedNames(\n      Object.assign({}, editingTagLocalizedNames, {\n        [locale]: newName\n      })\n    );\n  }\n\n  function onAddLocale(locale: Locale) {\n    if (pending) return;\n    setModified(true);\n\n    onChangeName(locale, \"\");\n  }\n\n  function onDeleteLocale(deletingLocale: Locale) {\n    if (pending) return;\n    if (Object.keys(editingTagLocalizedNames).length === 1) return;\n    setModified(true);\n\n    if (deletingLocale === editingTagDefaultLocale)\n      setEditingTagDefaultLocale(\n        Object.keys(editingTagLocalizedNames).find(locale => locale !== deletingLocale) as Locale\n      );\n    setEditingTagLocalizedNames(\n      Object.fromEntries(Object.entries(editingTagLocalizedNames).filter(([locale]) => locale != deletingLocale))\n    );\n  }\n\n  function onSetDefaultLocale(locale: Locale) {\n    if (pending) return;\n    setModified(true);\n\n    setEditingTagDefaultLocale(locale);\n  }\n\n  const getTagLabel = (i: number) => (\n    <Tag\n      key={i}\n      name={tagLocalizedNames[i]}\n      color={tags[i].color}\n      disabled={pending}\n      promptEdit={modified}\n      editing={editingTagId === i}\n      onEdit={() => onEditTag(i)}\n      onDelete={() => onDeleteTag(i)}\n    />\n  );\n\n  const existingLocales = Object.values(Locale).filter(locale => locale in editingTagLocalizedNames);\n\n  const dialog = useDialog(\n    {},\n    <Header\n      className={style.dialogHeader}\n      icon=\"tag\"\n      content={\n        <>\n          {_(\".title\")}\n          <div className={style.dialogHeaderInfo}>{_(\".tag_count\", { count: tagsCount.toString() })}</div>\n        </>\n      }\n    />,\n    <>\n      <div className={style.tagsSegment + (tagsCount === 0 ? \" \" + style.noTags : \"\")}>\n        {tagsCount === 0 ? (\n          <div>{_(\".no_tags\")}</div>\n        ) : (\n          Object.entries(tagsByColor).map(([color, tagIDs]) => <p key={color}>{tagIDs.map(i => getTagLabel(i))}</p>)\n        )}\n      </div>\n      <Form>\n        <div className={style.headerContainer}>\n          <Header\n            className={style.header}\n            content={\n              editingTagId == null ? (\n                _(\".new_tag\")\n              ) : (\n                <>\n                  {_(\".edit_tag\")}\n                  {getTagLabel(editingTagId)}\n                </>\n              )\n            }\n          />\n          <Form.Dropdown\n            className={style.colorDropdown}\n            selection\n            inline\n            value={editingTagColor}\n            options={tagColors.map(color => ({\n              key: color,\n              value: color,\n              text: (\n                <>\n                  <Label circular empty color={color as any} />\n                  {color}\n                </>\n              )\n            }))}\n            onChange={(e, { value }) => onChangeColor(value as string)}\n          />\n        </div>\n      </Form>\n      {existingLocales.map((locale, i) => (\n        <Menu\n          key={locale}\n          attached={(() => {\n            let top = true,\n              bottom = true;\n            if (i === 0) top = false;\n            if (i === existingLocales.length - 1) bottom = false;\n            if (top && bottom) return true;\n            if (top && !bottom) return \"bottom\";\n            if (!top && bottom) return \"top\";\n            if (!top && !bottom) return false;\n          })()}\n          className={style.menu}\n        >\n          <Menu.Item className={style.itemLocale}>\n            <Flag name={localeMeta[locale].flag as any} />\n            {_(`language.${locale}`)}\n          </Menu.Item>\n          <Menu.Item className={style.itemName}>\n            <Input\n              transparent\n              placeholder={_(\".name_placeholder\")}\n              value={editingTagLocalizedNames[locale]}\n              onChange={(e, { value }) => onChangeName(locale, value)}\n            />\n          </Menu.Item>\n          {existingLocales.length > 1 && (\n            <>\n              <Menu.Item className={style.itemDefault}>\n                <Radio\n                  disabled={pending}\n                  checked={editingTagDefaultLocale === locale}\n                  onChange={(e, { checked }) => checked && onSetDefaultLocale(locale)}\n                  label={_(\".default_language\")}\n                />\n              </Menu.Item>\n              <Popup\n                trigger={<Menu.Item as=\"a\" icon=\"delete\" className={style.itemIcon} disabled={pending} />}\n                disabled={pending}\n                content={\n                  <Button negative content={_(\".confirm_delete_language\")} onClick={() => onDeleteLocale(locale)} />\n                }\n                on=\"click\"\n                position=\"bottom center\"\n              />\n            </>\n          )}\n        </Menu>\n      ))}\n      <div className={style.divAddLanguageAndSubmit}>\n        <Dropdown disabled={existingLocales.length === Object.keys(localeMeta).length} text={_(\".add_language\")}>\n          <Dropdown.Menu>\n            {Object.values(Locale)\n              .filter(locale => !existingLocales.includes(locale))\n              .map(locale => (\n                <Dropdown.Item\n                  key={locale}\n                  flag={localeMeta[locale].flag}\n                  text={_(`language.${locale}`)}\n                  onClick={() => onAddLocale(locale)}\n                />\n              ))}\n          </Dropdown.Menu>\n        </Dropdown>\n        {editingTagId != null && (\n          <Popup\n            trigger={\n              <Button\n                className={style.addButton}\n                positive\n                content={_(\".new_tag_button\")}\n                onClick={() => !modified && onNewTag()}\n              />\n            }\n            disabled={!modified}\n            content={<Button negative content={_(\".confirm_discard_unsaved\")} onClick={() => onNewTag()} />}\n            position=\"bottom center\"\n            on=\"click\"\n          />\n        )}\n        <Button\n          className={style.submitButton}\n          primary\n          loading={pendingSubmit}\n          disabled={pending}\n          content={_(\".submit\")}\n          onClick={() => !pending && onSubmit()}\n        />\n      </div>\n    </>,\n    <>\n      <Popup\n        trigger={\n          <Button\n            className={style.closeButton}\n            content={_(\".close\")}\n            onClick={() => {\n              if (pending) return;\n              if (!modified) {\n                setOpened(false);\n                if (modifyDone) navigation.refresh();\n                dialog.close();\n              }\n            }}\n          />\n        }\n        disabled={!modified}\n        content={\n          <Button\n            negative\n            content={_(\".confirm_discard_unsaved\")}\n            onClick={() => {\n              if (pending) return;\n              setModified(false);\n              setOpened(false);\n              if (modifyDone) navigation.refresh();\n              dialog.close();\n            }}\n          />\n        }\n        position=\"bottom center\"\n        on=\"click\"\n      />\n    </>\n  );\n\n  const [opened, setOpened] = useState(false);\n  const [pendingOpen, setPendingOpen] = useState(false);\n  props.refOpen.current = async () => {\n    if (opened || pendingOpen) return;\n\n    setPendingOpen(true);\n\n    const { requestError, response } = await api.problem.getAllProblemTagsOfAllLocales();\n    if (requestError) toast.error(requestError(_));\n    else if (response.error) toast.error(_(`.error.${response.error}`));\n\n    setPendingOpen(false);\n\n    if (!response || !response.tags) return false;\n\n    setOpened(true);\n    setModified(false);\n    setTags(Object.fromEntries(response.tags.map(tag => [tag.id, tag])));\n    initNewTag();\n\n    dialog.open();\n    return true;\n  };\n\n  return dialog.element;\n};\n\nProblemTagManager = observer(ProblemTagManager);\n\nexport default ProblemTagManager;\n","import React, { useEffect, useState, useRef, useMemo } from \"react\";\nimport { Search, Checkbox, Table, Label, Button, Header, Menu, Segment, Loader, Icon } from \"semantic-ui-react\";\nimport { observer } from \"mobx-react\";\n\nimport style from \"./ProblemSetPage.module.less\";\n\nimport api from \"@/api\";\nimport { appState } from \"@/appState\";\nimport { useAsyncCallbackPending, useLocalizer, useScreenWidthWithin, useNavigationChecked, Link } from \"@/utils/hooks\";\nimport toast from \"@/utils/toast\";\nimport { sortTags, sortTagColors } from \"../problemTag\";\nimport { Pagination } from \"@/components/Pagination\";\nimport ProblemTagManager from \"./ProblemTagManager\";\nimport UserSearch from \"@/components/UserSearch\";\nimport { defineRoute, RouteError } from \"@/AppRouter\";\nimport { StatusIcon } from \"@/components/StatusText\";\nimport ProblemSearch from \"@/components/ProblemSearch\";\nimport { getProblemDisplayName, getProblemIdString, getProblemUrl } from \"../utils\";\nimport { makeToBeLocalizedText } from \"@/locales\";\nimport { EmojiRenderer } from \"@/components/EmojiRenderer\";\n\n// Parsed from querystring, without pagination\ninterface ProblemSetPageSearchQuery {\n  keyword: string;\n  tagIds: number[];\n  ownerId: number;\n  nonpublic: boolean;\n}\n\nfunction generateRequestFromSearchQuery(\n  searchQuery: ProblemSetPageSearchQuery,\n  currentPage = 1\n): ApiTypes.QueryProblemSetRequestDto {\n  const requestBody: ApiTypes.QueryProblemSetRequestDto = {\n    locale: appState.locale,\n    skipCount: PROBLEMS_PER_PAGE * (currentPage - 1),\n    takeCount: PROBLEMS_PER_PAGE\n  };\n  if (searchQuery.keyword) requestBody.keyword = searchQuery.keyword;\n  if (searchQuery.tagIds.length > 0) requestBody.tagIds = searchQuery.tagIds;\n  if (searchQuery.ownerId) requestBody.ownerId = searchQuery.ownerId;\n  if (searchQuery.nonpublic) requestBody.nonpublic = true;\n\n  return requestBody;\n}\n\nasync function fetchData(\n  searchQuery: ProblemSetPageSearchQuery,\n  currentPage: number\n): Promise<ApiTypes.QueryProblemSetResponseDto> {\n  const { requestError, response } = await api.problem.queryProblemSet(\n    generateRequestFromSearchQuery(searchQuery, currentPage)\n  );\n\n  if (requestError) throw new RouteError(requestError, { showRefresh: true, showBack: true });\n  else if (response.error) throw new RouteError(makeToBeLocalizedText(`problem_set.error.${response.error}`));\n\n  return response;\n}\n\nfunction parseSearchQuery(query: Record<string, string>): ProblemSetPageSearchQuery {\n  const searchQuery: ProblemSetPageSearchQuery = {\n    keyword: query[\"keyword\"] || \"\",\n    tagIds: (query[\"tagIds\"] || \"\")\n      .split(\",\")\n      .map(Number)\n      .filter(x => x && Number.isSafeInteger(x))\n      .sort(),\n    ownerId: Number.isSafeInteger(Number(query[\"ownerId\"])) ? Number(query[\"ownerId\"]) : null,\n    nonpublic: query[\"nonpublic\"] != null\n  };\n  return searchQuery;\n}\n\nfunction generateSearchQuery(searchQuery: ProblemSetPageSearchQuery): Record<string, string> {\n  const query: Record<string, string> = {};\n  if (searchQuery.keyword) query.keyword = searchQuery.keyword.substr(0, 100);\n  if (searchQuery.tagIds.length > 0) query.tagIds = searchQuery.tagIds.join(\",\");\n  if (searchQuery.ownerId) query.ownerId = searchQuery.ownerId.toString();\n  if (searchQuery.nonpublic) query.nonpublic = \"\";\n  return query;\n}\n\nconst PROBLEMS_PER_PAGE = appState.serverPreference.pagination.problemSet;\n\ninterface ProblemSetPageProps {\n  searchQuery: ProblemSetPageSearchQuery;\n  currentPage: number;\n  response: ApiTypes.QueryProblemSetResponseDto;\n}\n\nlet ProblemSetPage: React.FC<ProblemSetPageProps> = props => {\n  const _ = useLocalizer(\"problem_set\");\n\n  useEffect(() => {\n    appState.enterNewPage(_(\".title\"), \"problem_set\");\n  }, [appState.locale]);\n\n  const navigation = useNavigationChecked();\n\n  const isMobileOrPad = useScreenWidthWithin(0, 1024);\n  const isVeryNarrowScreen = useScreenWidthWithin(0, 640);\n\n  const refOnOpenTagManager = useRef<() => Promise<boolean>>();\n\n  // Begin search\n  type SearchMode = \"title\" | \"tag\" | \"user\";\n  const [searchMode, setSearchMode] = useState<SearchMode>(\"title\");\n  const [searchTagKeyword, setSearchTagKeyword] = useState(\"\");\n  function changeSearchMode(newSearchMode: SearchMode) {\n    setSearchTagKeyword(\"\");\n    setSearchMode(newSearchMode);\n    if (newSearchMode === \"tag\") getTags();\n  }\n\n  const [tags, setTags] = useState<Record<number, ApiTypes.LocalizedProblemTagDto>>();\n  async function getTags() {\n    if (tags) return;\n\n    const { requestError, response } = await api.problem.getAllProblemTags({\n      locale: appState.locale\n    });\n    if (requestError) toast.error(requestError(_));\n    else setTags(Object.fromEntries(response.tags.map(tag => [tag.id, tag])));\n  }\n\n  const tagEntires = useMemo(\n    () =>\n      !tags || searchMode !== \"tag\"\n        ? []\n        : !searchTagKeyword\n        ? Object.entries(tags)\n        : Object.entries(tags).filter(\n            ([tagId, tag]) => tag.name.toLowerCase().indexOf(searchTagKeyword.toLowerCase()) !== -1\n          ),\n    [tags, searchMode, searchTagKeyword]\n  );\n  const tagsCount = tagEntires.length;\n  const colors = useMemo(() => sortTagColors(Array.from(new Set(tagEntires.map(([tagId, tag]) => tag.color)))), [tags]);\n  const tagsByColor = useMemo(\n    () =>\n      Object.fromEntries(\n        colors.map(color => [\n          color,\n          tagEntires\n            .map(([i, tag]) => (tag.color === color ? Number(i) : null))\n            .filter(x => x != null)\n            .sort((i, j) => (tags[i].name < tags[j].name ? -1 : tags[i].name > tags[j].name ? 1 : 0))\n        ])\n      ),\n    [tagEntires]\n  );\n\n  const problems = useMemo(\n    () =>\n      props.response.result.map(problem => ({\n        ...problem,\n        tags: sortTags(problem.tags)\n      })),\n    [props.response]\n  );\n\n  function redirectWithFilter(filter: Partial<ProblemSetPageSearchQuery>) {\n    navigation.navigate({\n      query: generateSearchQuery(Object.assign({}, props.searchQuery, filter))\n    });\n    if (searchMode !== \"tag\") setSearchTagKeyword(\"\");\n  }\n\n  function onAddFilterKeyword(searchKeyword: string) {\n    redirectWithFilter({\n      keyword: searchKeyword.substr(0, 100)\n    });\n  }\n\n  function onDelFilterKeyword() {\n    redirectWithFilter({\n      keyword: \"\"\n    });\n  }\n\n  function onAddFilterOwner(ownerId: number) {\n    redirectWithFilter({\n      ownerId: ownerId\n    });\n  }\n\n  function onAddFilterTag(tagId: number) {\n    if (props.searchQuery.tagIds.includes(tagId) && props.searchQuery.tagIds.length < 20) return;\n    redirectWithFilter({\n      tagIds: props.searchQuery.tagIds.concat(tagId).sort()\n    });\n  }\n\n  function onDelFilterTag(tagId: number) {\n    if (!props.searchQuery.tagIds.includes(tagId)) return;\n    redirectWithFilter({\n      tagIds: props.searchQuery.tagIds.filter(x => x !== tagId).sort()\n    });\n  }\n\n  function onDelFilterOwner() {\n    // A non-privileged user can only filter \"nonpublic\" if the \"owner\" itself is applied.\n    // If the \"owner\" filter is removed, the \"nonpublic\" filter should also be removed.\n    if (!props.response.permissions.filterNonpublic && props.searchQuery.nonpublic) {\n      redirectWithFilter({\n        ownerId: null,\n        nonpublic: false\n      });\n    } else {\n      redirectWithFilter({\n        ownerId: null\n      });\n    }\n  }\n\n  function onAddFilterNonpublic() {\n    // A non-privileged user can only filter \"nonpublic\" if the \"owner\" itself is applied.\n    // If the \"owner\" filter is not applied, it should be applied.\n    if (props.searchQuery.nonpublic) return;\n    if (!props.response.permissions.filterNonpublic && appState.currentUser) {\n      redirectWithFilter({\n        ownerId: appState.currentUser.id,\n        nonpublic: true\n      });\n    } else {\n      redirectWithFilter({\n        nonpublic: true\n      });\n    }\n  }\n\n  function onDelFilterNonpublic() {\n    redirectWithFilter({\n      nonpublic: false\n    });\n  }\n  // End search\n\n  const getPagination = (className: string) =>\n    props.response.count <= PROBLEMS_PER_PAGE ? null : (\n      <div className={className}>\n        <Pagination\n          totalCount={props.response.count}\n          currentPage={props.currentPage}\n          itemsPerPage={PROBLEMS_PER_PAGE}\n          pageUrl={page => ({\n            query: Object.assign(\n              {\n                page: page.toString()\n              },\n              generateSearchQuery(props.searchQuery)\n            )\n          })}\n        />\n      </div>\n    );\n\n  const getTagLabel = (tag: ApiTypes.LocalizedProblemTagDto, type: \"add\" | \"del\" = \"add\") => (\n    <EmojiRenderer key={tag.id}>\n      <Label\n        as={type === \"add\" ? \"a\" : undefined}\n        className={style.tag}\n        size=\"small\"\n        content={tag.name}\n        color={tag.color as any}\n        removeIcon={type === \"del\" ? <Icon name=\"delete\" /> : undefined}\n        onClick={type === \"add\" ? () => onAddFilterTag(tag.id) : undefined}\n        onRemove={type === \"del\" ? () => onDelFilterTag(tag.id) : undefined}\n      />\n    </EmojiRenderer>\n  );\n\n  /**\n   * Search title: while user typing, results are listed below, when user select a result, redirect to that problem\n   * Search tag: while user typing, tags below in the tag list are filtered, when user click a tag, it's added to the filters\n   * Search user: while user typing, users are listed below, when user select a user, it's added to the filters\n   * Nonpublic: click to filter nonpublic problems only, not a mode\n   */\n  const headerSearch = (\n    <>\n      {searchMode === \"title\" ? (\n        <ProblemSearch\n          className={style.search}\n          queryParameters={generateRequestFromSearchQuery(props.searchQuery)}\n          onResultSelect={problem => navigation.navigate(getProblemUrl(problem.meta))}\n          onEnterPress={searchKeyword => onAddFilterKeyword(searchKeyword)}\n        />\n      ) : searchMode === \"tag\" ? (\n        // Search tag\n        <Search\n          className={style.search}\n          placeholder={_(\".search_tag_placeholder\")}\n          value={searchTagKeyword}\n          showNoResults={false}\n          onSearchChange={(e, { value }) => setSearchTagKeyword(value)}\n          input={{ iconPosition: \"left\", fluid: isMobileOrPad }}\n        />\n      ) : (\n        // Search user\n        <UserSearch className={style.search} onResultSelect={user => onAddFilterOwner(user.id)} />\n      )}\n      <Menu className={style.searchMenu} secondary>\n        <Menu.Item\n          className={style.searchMenuItem}\n          icon=\"tag\"\n          active={searchMode === \"tag\"}\n          title={_(\".search_icon.tag\")}\n          onClick={() => (searchMode === \"tag\" ? changeSearchMode(\"title\") : changeSearchMode(\"tag\"))}\n        />\n        {props.response.permissions.filterByOwner && (\n          <Menu.Item\n            className={style.searchMenuItem}\n            icon=\"user\"\n            active={searchMode === \"user\"}\n            title={_(\".search_icon.user\")}\n            onClick={() => (searchMode === \"user\" ? changeSearchMode(\"title\") : changeSearchMode(\"user\"))}\n          />\n        )}\n        {(props.response.permissions.filterNonpublic ||\n          (appState.currentUser && props.searchQuery.ownerId === appState.currentUser.id)) && (\n          <Menu.Item\n            className={style.searchMenuItem}\n            icon=\"eye slash\"\n            active={false}\n            title={_(\".search_icon.nonpublic\")}\n            onClick={() => onAddFilterNonpublic()}\n          />\n        )}\n      </Menu>\n    </>\n  );\n\n  const headerTagList = searchMode === \"tag\" && (\n    <Segment className={style.tagsList + (!tags ? \" \" + style.loading : \"\")}>\n      {!tags ? (\n        <Loader active size=\"medium\" />\n      ) : tagsCount === 0 ? (\n        searchTagKeyword === \"\" ? (\n          <div className={style.placeholder}>{_(\".no_matching_tags\")}</div>\n        ) : (\n          <div className={style.placeholder}>{_(\".no_tags\")}</div>\n        )\n      ) : (\n        Object.entries(tagsByColor).map(([color, tagIDs]) => <p key={color}>{tagIDs.map(i => getTagLabel(tags[i]))}</p>)\n      )}\n    </Segment>\n  );\n\n  // To display the current search filters applied on the search result.\n  const filtersApplied =\n    props.searchQuery.keyword || props.response.filterTags || props.response.filterOwner || props.searchQuery.nonpublic;\n  const headerSearchFilters = filtersApplied && (\n    <>\n      <strong>{_(\".search_filters\")}</strong>\n      {props.searchQuery.keyword && (\n        <EmojiRenderer>\n          <Label size=\"small\" color=\"grey\">\n            <Icon name=\"file alternate\" />\n            {props.searchQuery.keyword}\n            <Icon name=\"delete\" onClick={() => onDelFilterKeyword()} />\n          </Label>\n        </EmojiRenderer>\n      )}\n      {props.response.filterOwner && (\n        <Label size=\"small\" color=\"pink\">\n          <Icon name=\"user\" />\n          {props.response.filterOwner.username}\n          <Icon name=\"delete\" onClick={() => onDelFilterOwner()} />\n        </Label>\n      )}\n      {props.searchQuery.nonpublic && (\n        <Label size=\"small\" color=\"red\" basic>\n          <Icon name=\"eye slash\" />\n          {_(\".non_public\")}\n          <Icon name=\"delete\" onClick={() => onDelFilterNonpublic()} />\n        </Label>\n      )}\n      {props.response.filterTags && sortTags(props.response.filterTags).map(tag => getTagLabel(tag, \"del\"))}\n    </>\n  );\n\n  const headerShowTagsCheckbox = (\n    <>\n      <Checkbox\n        className={style.showTagsCheckbox}\n        toggle\n        checked={appState.showTagsInProblemSet}\n        onChange={() => (appState.showTagsInProblemSet = !appState.showTagsInProblemSet)}\n        label={_(\".show_tags\")}\n      />\n    </>\n  );\n\n  // The tag manager couldn't display correctly without 540px screen width\n  const [openTagManagerPending, onOpenTagManager] = useAsyncCallbackPending(\n    async () => await refOnOpenTagManager.current()\n  );\n  const headerButtons = (\n    <div className={style.headerButtons}>\n      {props.response.permissions.manageTags && !isVeryNarrowScreen && (\n        <Button\n          primary\n          className=\"labeled icon\"\n          icon=\"tag\"\n          content={_(\".manage_tags\")}\n          loading={openTagManagerPending}\n          onClick={onOpenTagManager}\n        />\n      )}\n      {props.response.permissions.createProblem && (\n        <Button className=\"labeled icon\" icon=\"plus\" content={_(\".add_problem\")} as={Link} href=\"/p/new\" />\n      )}\n    </div>\n  );\n\n  return (\n    <>\n      <ProblemTagManager refOpen={refOnOpenTagManager} />\n      {isMobileOrPad ? (\n        <>\n          <div className={style.headerSearchRow}>{headerSearch}</div>\n          <div className={style.headerSearchFiltersRow}>{headerSearchFilters}</div>\n          {headerTagList}\n          <div className={style.headerControlRow}>\n            {headerShowTagsCheckbox}\n            {headerButtons}\n          </div>\n        </>\n      ) : (\n        <>\n          <div className={style.headerRow}>\n            {headerSearch}\n            <div className={style.headerRightControls}>\n              {headerShowTagsCheckbox}\n              {headerButtons}\n            </div>\n          </div>\n          <div className={style.headerSearchFiltersRow}>{headerSearchFilters}</div>\n          {headerTagList}\n        </>\n      )}\n      {getPagination(style.topPagination + \" \" + style.pagination)}\n      {problems.length === 0 ? (\n        filtersApplied ? (\n          <Segment placeholder>\n            <Header icon>\n              <Icon name=\"search\" />\n              {_(\".no_problem.message_search\")}\n            </Header>\n            <Segment.Inline>\n              <Button primary onClick={() => navigation.goBack()}>\n                {_(\".no_problem.back\")}\n              </Button>\n              <Button as={Link} href=\"/p\">\n                {_(\".no_problem.clear_filters\")}\n              </Button>\n            </Segment.Inline>\n          </Segment>\n        ) : (\n          <Segment placeholder>\n            <Header icon>\n              <Icon name=\"file\" />\n              {_(\".no_problem.message_no_search\")}\n            </Header>\n            {props.response.permissions.createProblem && (\n              <Segment.Inline>\n                <Button primary as={Link} href=\"/p/new\">\n                  {_(\".no_problem.create\")}\n                </Button>\n              </Segment.Inline>\n            )}\n          </Segment>\n        )\n      ) : (\n        <Table basic=\"very\" textAlign=\"center\" unstackable>\n          <Table.Header>\n            <Table.Row className={style.tableHeaderRow}>\n              {appState.currentUser && <Table.HeaderCell width={1}>{_(\".column_status\")}</Table.HeaderCell>}\n              <Table.HeaderCell width={1}>#</Table.HeaderCell>\n              <Table.HeaderCell textAlign=\"left\">{_(\".column_title\")}</Table.HeaderCell>\n              <Table.HeaderCell width={1}>{_(\".column_submission_count\")}</Table.HeaderCell>\n              {!isVeryNarrowScreen && <Table.HeaderCell width={1}>{_(\".column_accepted_rate\")}</Table.HeaderCell>}\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {problems.map(problem => (\n              <Table.Row className={style.row} key={problem.meta.id}>\n                {appState.currentUser && (\n                  <Table.Cell>\n                    {problem.submission && (\n                      <Link href={`/s/${problem.submission.id}`}>\n                        <StatusIcon status={problem.submission.status} noMarginRight />\n                      </Link>\n                    )}\n                  </Table.Cell>\n                )}\n                <Table.Cell>\n                  <b>{getProblemIdString(problem.meta, { hideHashTagOnDisplayId: true })}</b>\n                </Table.Cell>\n                <Table.Cell textAlign=\"left\" className={style.problemTitleCell}>\n                  <EmojiRenderer>\n                    <Link href={getProblemUrl(problem.meta)}>{getProblemDisplayName(null, problem.title, _)}</Link>\n                  </EmojiRenderer>\n                  {!problem.meta.isPublic && (\n                    <Label\n                      className={style.labelNonPublic}\n                      icon=\"eye slash\"\n                      size=\"small\"\n                      color=\"red\"\n                      basic\n                      content={_(\".non_public\")}\n                      as=\"a\"\n                      // As long as a user can see the \"nonpublic\" label, it has the permission to filter the\n                      // nonpublic problems\n                      onClick={() => onAddFilterNonpublic()}\n                    />\n                  )}\n                  <div className={style.tags} style={{ display: appState.showTagsInProblemSet ? null : \"none\" }}>\n                    {problem.tags.map(tag => getTagLabel(tag))}\n                  </div>\n                </Table.Cell>\n                <Table.Cell>{problem.meta.submissionCount}</Table.Cell>\n                {!isVeryNarrowScreen && (\n                  <Table.Cell>\n                    {((problem.meta.acceptedSubmissionCount / problem.meta.submissionCount) * 100 || 0).toFixed(1)}%\n                  </Table.Cell>\n                )}\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      )}\n      {getPagination(style.pagination)}\n    </>\n  );\n};\n\nProblemSetPage = observer(ProblemSetPage);\n\nexport default defineRoute(async request => {\n  const page = parseInt(request.query.page) || 1;\n  const searchQuery = parseSearchQuery(request.query);\n  const response = await fetchData(searchQuery, page);\n\n  return <ProblemSetPage searchQuery={searchQuery} currentPage={page} response={response} />;\n});\n"],"sourceRoot":""}