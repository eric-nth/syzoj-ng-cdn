{"version":3,"sources":["pages/problem/view/types/InteractionProblemView.tsx"],"names":["InteractionProblemSubmitView","props","showSkipSamples","judgeInfo","runSamples","mainContent","EditorWrapper","language","submissionContent","value","code","onChange","newValue","onUpdateSubmissionContent","sidebarContent","objectPath","submitDisabled","interactionProblemViews","Labels","React","memo","timeLimit","getLimit","memoryLimit","size","color","name","SubmitView","observer","getDefaultSubmissionContent","Object","assign","CodeLanguageAndOptions","getDefault","isSubmittable","hasAnySubtaskTestcase","enableStatistics"],"mappings":"+NA8CIA,EAA4E,SAAAC,GAC9E,OACE,mCACE,cAAC,IAAD,2BACMA,GADN,IAEEC,gBAAiBD,EAAME,UAAUC,WACjCC,YACE,cAAC,IAAgBC,cAAjB,UACE,cAAC,IAAD,CACEC,SAAUN,EAAMO,kBAAkBD,SAClCE,MAAOR,EAAMO,kBAAkBE,KAC/BC,SAAU,SAAAC,GAAQ,OAAIX,EAAMY,0BAA0B,OAAQD,QAIpEE,eACE,mCACE,cAAC,IAAD,aAAwBC,WAAW,IAAOd,MAG9Ce,gBAAiBf,EAAMO,kBAAkBE,WAQ3CO,EAAiE,CACrEC,OA5DwEC,IAAMC,MAAK,SAAAnB,GACnF,IAAMoB,EAAYC,YAASrB,EAAME,UAAW,aACtCoB,EAAcD,YAASrB,EAAME,UAAW,eAE9C,OACE,qCACGkB,GACC,eAAC,IAAD,CAAOG,KAAMvB,EAAMuB,KAAMC,MAAM,OAA/B,UACE,cAAC,IAAD,CAAMC,KAAK,UACVL,EAAY,SAGhBE,GACC,eAAC,IAAD,CAAOC,KAAMvB,EAAMuB,KAAMC,MAAM,OAA/B,UACE,cAAC,IAAD,CAAMC,KAAK,cACVH,EAAc,gBA8CvBI,WAJF3B,EAA+B4B,YAAS5B,GAKtC6B,4BAA6B,kBAC3BC,OAAOC,OACL,CACErB,KAAM,IAERsB,IAAuBC,eAE3BC,cAAeC,IACfC,iBAAkB,kBAAM,IAGXnB","file":"static/js/157.bea0d531.chunk.js","sourcesContent":["import React from \"react\";\nimport { Icon, Label } from \"semantic-ui-react\";\nimport { observer } from \"mobx-react\";\n\nimport { CodeLanguage } from \"@/interfaces/CodeLanguage\";\nimport CodeEditor from \"@/components/LazyCodeEditor\";\n\nimport { JudgeInfoInteraction } from \"../../judge-settings/types/InteractionProblemEditor\";\nimport { ProblemTypeLabelsProps, ProblemTypeSubmitViewProps, ProblemTypeView } from \"../common/interface\";\nimport SubmitViewFrame from \"../common/SubmitViewFrame\";\nimport CodeLanguageAndOptions from \"../common/CodeLanguageAndOptions\";\nimport { getLimit, hasAnySubtaskTestcase } from \"../common\";\n\ntype InteractionProblemLabelsProps = ProblemTypeLabelsProps<JudgeInfoInteraction>;\n\nconst InteractionProblemLabels: React.FC<InteractionProblemLabelsProps> = React.memo(props => {\n  const timeLimit = getLimit(props.judgeInfo, \"timeLimit\");\n  const memoryLimit = getLimit(props.judgeInfo, \"memoryLimit\");\n\n  return (\n    <>\n      {timeLimit && (\n        <Label size={props.size} color=\"pink\">\n          <Icon name=\"clock\" />\n          {timeLimit + \" ms\"}\n        </Label>\n      )}\n      {memoryLimit && (\n        <Label size={props.size} color=\"blue\">\n          <Icon name=\"microchip\" />\n          {memoryLimit + \" MiB\"}\n        </Label>\n      )}\n    </>\n  );\n});\n\ninterface SubmissionContent {\n  language: CodeLanguage;\n  code: string;\n  compileAndRunOptions: any;\n  skipSamples?: boolean;\n}\n\ntype InteractionProblemSubmitViewProps = ProblemTypeSubmitViewProps<JudgeInfoInteraction, SubmissionContent>;\n\nlet InteractionProblemSubmitView: React.FC<InteractionProblemSubmitViewProps> = props => {\n  return (\n    <>\n      <SubmitViewFrame\n        {...props}\n        showSkipSamples={props.judgeInfo.runSamples}\n        mainContent={\n          <SubmitViewFrame.EditorWrapper>\n            <CodeEditor\n              language={props.submissionContent.language}\n              value={props.submissionContent.code}\n              onChange={newValue => props.onUpdateSubmissionContent(\"code\", newValue)}\n            />\n          </SubmitViewFrame.EditorWrapper>\n        }\n        sidebarContent={\n          <>\n            <CodeLanguageAndOptions objectPath=\"\" {...props} />\n          </>\n        }\n        submitDisabled={!props.submissionContent.code}\n      />\n    </>\n  );\n};\n\nInteractionProblemSubmitView = observer(InteractionProblemSubmitView);\n\nconst interactionProblemViews: ProblemTypeView<JudgeInfoInteraction> = {\n  Labels: InteractionProblemLabels,\n  SubmitView: InteractionProblemSubmitView,\n  getDefaultSubmissionContent: () =>\n    Object.assign(\n      {\n        code: \"\"\n      },\n      CodeLanguageAndOptions.getDefault()\n    ),\n  isSubmittable: hasAnySubtaskTestcase,\n  enableStatistics: () => true\n};\n\nexport default interactionProblemViews;\n"],"sourceRoot":""}