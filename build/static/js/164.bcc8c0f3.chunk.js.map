{"version":3,"sources":["pages/submission/submission/types/TraditionalProblemSubmissionView.tsx"],"names":["helper","getAnswerInfo","content","_","entires","Object","entries","compileAndRunOptions","length","className","style","map","name","value","align","compileAndRunOptionsName","language","getHighlightLanguageList","assign","props","useLocalizer","code","ref","refDefaultCopyCodeBox","getCompilationMessage","getSystemMessage","getSubtasksView","testcaseResult","title","ansiMessage","checkerMessage"],"mappings":"qMA2DMA,EAAwE,CAC5EC,cAD4E,SAC9DC,EAASC,GACrB,IAAMC,EAAUC,OAAOC,QAAQJ,EAAQK,sBACvC,OAAOH,EAAQI,OACb,mCACE,uBAAOC,UAAWC,IAAMH,qBAAxB,SACE,gCACGH,EAAQO,KAAI,mCAAEC,EAAF,KAAQC,EAAR,YACX,+BACE,oBAAIC,MAAM,QAAQL,UAAWC,IAAMK,yBAAnC,SACE,iCAASZ,EAAE,iBAAD,OAAkBD,EAAQc,SAA1B,oBAA8CJ,EAA9C,cAEZ,6BAAKT,EAAE,iBAAD,OAAkBD,EAAQc,SAA1B,oBAA8CJ,EAA9C,mBAA6DC,QAJ5DD,YAUf,MAENK,yBApB4E,SAoBnDf,GACvB,MAAO,CAACA,EAAQc,YAILX,iBAAOa,QA5CoE,SAAAC,GACxF,IAAMhB,EAAIiB,YAAa,cAEvB,OACE,qCACE,cAAC,IAAD,CACEC,KAAMF,EAAMjB,QAAQmB,KACpBL,SAAUG,EAAMjB,QAAQc,SACxBM,IAAKH,EAAMI,wBAEZJ,EAAMK,wBACNL,EAAMM,mBACNN,EAAMO,iBAAgB,SAAAC,GAAc,OACnC,cAAC,IAAD,CAAsBC,MAAOzB,EAAE,6BAA8B0B,YAAaF,EAAeG,yBA+BlC9B","file":"static/js/164.bcc8c0f3.chunk.js","sourcesContent":["import React from \"react\";\n\nimport style from \"../SubmissionPage.module.less\";\n\nimport { useLocalizer } from \"@/utils/hooks\";\nimport { CodeLanguage } from \"@/interfaces/CodeLanguage\";\nimport { OmittableAnsiCodeBox, OmittableString } from \"@/components/CodeBox\";\nimport { ProblemTypeSubmissionViewProps, ProblemTypeSubmissionViewHelper } from \"../common/interface\";\nimport FormattableCodeBox from \"../common/FormattableCodeBox\";\n\ninterface SubmissionTestcaseResultTraditional {\n  testcaseInfo: {\n    timeLimit: number;\n    memoryLimit: number;\n    inputFile: string;\n    outputFile: string;\n  };\n  status: string;\n  score: number;\n  time?: number;\n  memory?: number;\n  input?: OmittableString;\n  output?: OmittableString;\n  userOutput?: OmittableString;\n  userError?: OmittableString;\n  checkerMessage?: OmittableString;\n  systemMessage?: OmittableString;\n}\n\ninterface SubmissionContentTraditional {\n  language: CodeLanguage;\n  code: string;\n  compileAndRunOptions: Record<string, string>;\n}\n\ntype TraditionalProblemSubmissionViewProps = ProblemTypeSubmissionViewProps<\n  SubmissionTestcaseResultTraditional,\n  SubmissionContentTraditional\n>;\n\nconst TraditionalProblemSubmissionView: React.FC<TraditionalProblemSubmissionViewProps> = props => {\n  const _ = useLocalizer(\"submission\");\n\n  return (\n    <>\n      <FormattableCodeBox\n        code={props.content.code}\n        language={props.content.language}\n        ref={props.refDefaultCopyCodeBox}\n      />\n      {props.getCompilationMessage()}\n      {props.getSystemMessage()}\n      {props.getSubtasksView(testcaseResult => (\n        <OmittableAnsiCodeBox title={_(\".testcase.checker_message\")} ansiMessage={testcaseResult.checkerMessage} />\n      ))}\n    </>\n  );\n};\n\nconst helper: ProblemTypeSubmissionViewHelper<SubmissionContentTraditional> = {\n  getAnswerInfo(content, _) {\n    const entires = Object.entries(content.compileAndRunOptions);\n    return entires.length ? (\n      <>\n        <table className={style.compileAndRunOptions}>\n          <tbody>\n            {entires.map(([name, value]) => (\n              <tr key={name}>\n                <td align=\"right\" className={style.compileAndRunOptionsName}>\n                  <strong>{_(`code_language.${content.language}.options.${name}.name`)}</strong>\n                </td>\n                <td>{_(`code_language.${content.language}.options.${name}.values.${value}`)}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </>\n    ) : null;\n  },\n  getHighlightLanguageList(content) {\n    return [content.language];\n  }\n};\n\nexport default Object.assign(TraditionalProblemSubmissionView, helper);\n"],"sourceRoot":""}