{"version":3,"sources":["utils/callApiWithFileUpload.ts","utils/openUploadDialog.ts","utils/zip.ts","utils/pipeStream.ts","pages/problem/files/ProblemFilesPage.tsx"],"names":["callApiWithFileUpload","api","request","getRecaptchaToken","file","progressCallback","cancelFunctionReceiver","a","status","progress","uploadInfo","size","uuid","result","requestError","response","signedUploadRequest","onUploadProgress","e","setTimeout","error","loaded","total","cancelTokenSource","Axios","CancelToken","source","isCancelled","cancelFunction","cancel","method","put","url","cancelToken","token","formData","FormData","Object","entries","extraFormData","forEach","key","value","append","fileFieldName","post","uploadCancelled","uploadError","openUploadDialog","callback","accept","input","document","createElement","type","multiple","onchange","Array","from","files","click","createZipStream","window","ZIP","createZipBlob","underlyingSource","Response","blob","pipeStream","readableStream","writableStream","abortCallbackReceiver","WritableStream","pipeTo","abortController","AbortController","abort","bind","writer","getWriter","reader","getReader","read","readResult","done","close","write","downloadProblemFile","problemId","filename","_","toast","problem","downloadProblemFiles","filenameList","downloadInfo","length","downloadFile","downloadUrl","downloadProblemFilesAsArchive","filenames","stopDownload","onBeforeUnload","isBeforeUnloadTriggeredByLibrary","returnValue","fileStream","streamsaver","i","zipStream","pull","ctrl","fetch","ok","statusText","enqueue","name","stream","body","toString","isSecureContext","addEventListener","removeEventListener","apiEndpoint","toLowerCase","startsWith","fetchData","idType","id","getProblem","RouteError","showRefresh","showBack","makeToBeLocalizedText","FileTableRow","props","useLocalizer","useState","renameOpen","setRenameOpen","deleteOpen","setDeleteOpen","newFilename","setNewFilename","onRename","onDelete","formatProgress","str","toFixed","useDebounce","upload","maxWait","debouncedUploadProgress","debouncedUploadProgressControlFunctions","flush","isMobile","useScreenWidthWithin","Table","Row","Cell","className","style","fileTableColumnFilename","Progress","percent","indicating","EmojiRenderer","Checkbox","fileTableCheckbox","checked","selected","disabled","onChange","onSelect","Icon","getFileIcon","textAlign","formatFileSize","fileTableColumnOperations","progressType","Popup","trigger","hoverable","content","on","position","Button","onClick","getUploadStatus","fileTableOperationIcon","onDownload","hasPermission","pending","open","onOpen","onClose","Form","Input","width","placeholder","onKeyPress","onEnterPress","primary","loading","negative","observer","FileTable","Set","selectedFiles","setSelectedFiles","nonUploadingFiles","filter","useEffect","fileUuids","map","newSelectedFiles","fileUuid","includes","add","lodashIsEqual","selectedFilesArray","has","pendingFiles","setPendingFiles","setPending","newPendingFiles","delete","onRenameFile","some","onDeleteFiles","uploadingCount","overridingFiles","setOverridingFiles","refDoUpload","useRef","isValidFilename","doUpload","onUploadFiles","currentFilenames","overriding","current","refSelectedInfoDropdown","setRefSelectedInfoDropdown","selectedInfoDropdownOpen","setSelectedInfoDropdownOpen","popupDeleteSelectedOpen","setPopupDeleteSelectedOpen","useAsyncCallbackPending","deleteSelectedPending","onDeleteSelected","compact","color","fileTable","noManagePermission","unstackable","Header","HeaderCell","indeterminate","onSelectAll","fileTableColumnSize","Body","colSpan","filesTableNoFiles","onDownloadFile","Footer","fullWidth","fileTableFooterInfo","tableFooterText","Ref","innerRef","Dropdown","pointing","text","count","totalSize","reduce","sum","Menu","fileTableSelectedFilesDropdownMenu","Item","icon","onDownloadFilesAsArchive","context","tableFooterButton","labelPosition","List","button","requestAnimationFrame","focus","ProblemFilesPage","idString","getProblemIdString","meta","appState","enterNewPage","locale","recaptcha","useRecaptcha","transformResponseToFileTableItems","fileList","testData","fileListTestData","setFileListTestData","additionalFiles","fileListAdditionalFiles","setFileListAdditionalFiles","setFileList","renameProblemFile","assign","removeProblemFiles","updateFileUploadInfo","newFileList","uploadingFilenames","uploadingFileList","push","concat","uploadTasks","item","addProblemFile","console","log","String","pAll","concurrency","isWideScreen","Infinity","fileTableTestdata","header","as","backToProblem","Link","href","getProblemUrl","permissionOfCurrentUser","fileTableAdditionalFile","Grid","Column","byId","defineRoute","parseInt","params","byDisplayId","displayId"],"mappings":"uNAgBO,SAAeA,EAAtB,4C,4CAAO,WAILC,EACAC,EACAC,EACAC,EACAC,EACAC,GATK,2BAAAC,EAAA,6DAWDF,GAAkBA,EAAiB,CAAEG,OAAQ,aAAcC,SAAU,IAXpE,SAagBR,EAAI,2BAElBC,GAFiB,IAGpBQ,WAAYN,EACR,CACEO,KAAMP,EAAKO,KACXC,KAAM,MAER,OAENT,KAvBG,YAaCU,EAbD,QAyBMC,aAzBN,yCAyB2BD,GAzB3B,WA2BDA,EAAOE,SAASC,oBA3Bf,oBAyCMC,EAAT,SAA0BC,GAGpBb,GACFc,YAAW,WACLC,GAEJf,EAAiB,CAAEG,OAAQ,YAAaC,SAAUS,EAAEG,OAASH,EAAEI,UAC9D,IAnBDC,EAAoBC,IAAMC,YAAYC,SACxCC,GAAc,EACZC,EAAiB,WACjBD,IACJA,GAAc,EACdJ,EAAkBM,WAGhBvB,GAAwBA,EAAuBsB,GAE/CR,GAAQ,EAxCT,UAqDkD,QAA/CP,EAAOE,SAASC,oBAAoBc,OArDvC,kCAsDON,IAAMO,IAAIlB,EAAOE,SAASC,oBAAoBgB,IAAK5B,EAAM,CAC7D6B,YAAaV,EAAkBW,MAC/BjB,qBAxDH,uCA2DOkB,EAAW,IAAIC,SACrBC,OAAOC,QAAQzB,EAAOE,SAASC,oBAAoBuB,eAAeC,SAAQ,mCAAEC,EAAF,KAAOC,EAAP,YACxEP,EAASQ,OAAOF,EAAKC,MAGvBP,EAASQ,OAAO9B,EAAOE,SAASC,oBAAoB4B,cAAexC,GAhEpE,UAiEOoB,IAAMqB,KAAKhC,EAAOE,SAASC,oBAAoBgB,IAAKG,EAAU,CAClEF,YAAaV,EAAkBW,MAC/BjB,qBAnEH,8DAuEDG,GAAQ,GACJO,EAxEH,0CAwEuB,CAAEmB,iBAAiB,IAxE1C,iCAyEM,CAAEC,YAAY,EAAD,KAzEnB,eA4EC1C,GAAkBA,EAAiB,CAAEG,OAAQ,aAAcC,SAAU,IA5EtE,UA8EUR,EAAI,2BAEVC,GAFS,IAGZQ,WAAY,CACVC,KAAMP,EAAKO,KACXC,KAAMC,EAAOE,SAASC,oBAAoBJ,QAG9CT,KAtFC,0EA0FOU,GA1FP,4D,0DChBQ,SAASmC,EAAiBC,EAAmCC,GAC1E,IAAMC,EAAQC,SAASC,cAAc,SACrCF,EAAMD,OAASA,EACfC,EAAMG,KAAO,OACbH,EAAMI,UAAW,EACjBJ,EAAMK,SAAW,kBAAMP,EAASQ,MAAMC,KAAKP,EAAMQ,SACjDR,EAAMS,QANR,mC,mICUaC,G,QAAqFC,OAAeC,KAE1G,SAAeC,EAAtB,kC,4CAAO,WAA6BC,GAA7B,SAAA1D,EAAA,sEACQ,IAAI2D,SAASL,EAAgBI,IAAmBE,OADxD,oF,siBCZQ,SAAeC,EAA9B,sC,4CAAe,WACbC,EACAC,EACAC,GAHa,qBAAAhE,EAAA,0DAKTuD,OAAOU,iBAAkBH,EAAeI,OAL/B,uBAMLC,EAAkB,IAAIC,gBACxBJ,IAAuBA,EAAsBK,MAAQF,EAAgBE,MAAMC,KAAKH,IAPzE,SAQLL,EAAeI,OAAOH,EAAgBI,GARjC,8BAULI,EAASR,EAAeS,YAC1BR,IAAuBA,EAAsBK,MAAQE,EAAOF,MAAMC,KAAKC,IACrEE,EAASX,EAAeY,YAZnB,yBAcgBD,EAAOE,OAdvB,aAcHC,EAdG,QAeMC,KAfN,wBAgBPN,EAAOO,QAhBA,6BAmBPP,EAAOQ,MAAMH,EAAWzC,OAnBjB,qE,2GCkDR,SAAe6C,EAAtB,wC,4CAAO,WACLC,EACAlC,EACAmC,EACAC,GAJK,mBAAAnF,EAAA,yDAMAkF,EANA,yCAMiBE,IAAMvE,MAAMsE,EAAE,sCAN/B,uBAQoCzF,IAAI2F,QAAQC,qBAAqB,CACxEL,YACAlC,OACAwC,aAAc,CAACL,KAXZ,mBAQG3E,EARH,EAQGA,aAAcC,EARjB,EAQiBA,UAKlBD,EAbC,0CAaoB6E,IAAMvE,MAAMN,EAAa4E,KAb7C,WAcqC,IAAjC3E,EAASgF,aAAaC,OAd1B,0CAc+CL,IAAMvE,MAAMsE,EAAE,sCAd7D,QAgBLO,YAAalF,EAASgF,aAAa,GAAGG,aAhBjC,6C,sBAmBA,SAAeC,GAAtB,2C,8CAAO,WACLX,EACAC,EACAnC,EACA8C,EACAV,GALK,oBAmDIW,EAnDJ,EA0DIC,EA1DJ,SAAA/F,EAAA,6DA0DI+F,EA1DJ,SA0DmBpF,GAClBqF,EACFA,GAAmC,EAGrCrF,EAAEsF,YAAc,IAZTH,EAnDJ,WAoDH9B,EAAsBK,SApDnB,SAOoC3E,IAAI2F,QAAQC,qBAAqB,CACxEL,YACAlC,OACAwC,aAAcM,IAVX,mBAOGtF,EAPH,EAOGA,aAAcC,EAPjB,EAOiBA,UAKlBD,EAZC,yCAYoB6E,IAAMvE,MAAMN,EAAa4E,KAZ7C,WAaD3E,EAASK,MAbR,0CAasBuE,IAAMvE,MAAMsE,EAAE,uBAAD,OAAwB3E,EAASK,UAbpE,WAiBuB,KAFpB2E,EAAiBhF,EAAjBgF,cAESC,OAjBZ,0CAiBiCL,IAAMvE,MAAMsE,EAAE,wCAjB/C,eAmBCe,EAAaC,oBAA8BjB,GAC7CkB,EAAI,EACFC,EAAY/C,YAAgB,CAC1BgD,KAD0B,SACrBC,GAAO,OAAD,6GACXH,GAAKZ,EAAaC,OADP,yCACsBc,EAAKzB,SAD3B,gCAIU0B,MAAMhB,EAAaY,GAAGT,aAJhC,WAIPnF,EAJO,QAKCiG,GALD,sBAMLjG,EAASkG,WANJ,OASbH,EAAKI,QAAQ,CACXC,KAAMpB,EAAaY,GAAGlB,SACtB2B,OAAQ,kBAAMrG,EAASsG,QAXZ,kDAcbhB,IACAV,IAAMvE,MACJsE,EAAE,0CAA2C,CAC3CD,SAAUM,EAAaY,GAAGlB,SAC1BrE,MAAO,KAAEkG,cAlBA,QAuBfX,IAvBe,+DA2BbpC,EAAgD,GAQlDgC,GAAoCzC,OAAOyD,gBAS/CzD,OAAO0D,iBAAiB,SAAUnB,GAClCvC,OAAO0D,iBAAiB,eAAgBlB,GAnEnC,UAqEClC,EAAWwC,EAAWH,EAAYlC,GArEnC,QAuELT,OAAO2D,oBAAoB,SAAUpB,GACrCvC,OAAO2D,oBAAoB,eAAgBnB,GAxEtC,6C,sBAxBFxC,OAAOU,iBAAiBkC,iBAAqClC,KAC9DV,OAAO4D,YAAYC,cAAcC,WAAW,cAC7ClB,OAAD,UAA+B5C,OAAO4D,YAAtC,mC,SAmGaG,G,mFAAf,WAAyBC,EAA4BC,GAArD,qBAAAxH,EAAA,sEAC2CN,IAAI2F,QAAQoC,YAAZ,mBACtCF,EAASC,GAD6B,0BAE7B,GAF6B,iCAGtB,GAHsB,yCAId,GAJc,IAD3C,mBACUjH,EADV,EACUA,aAAcC,EADxB,EACwBA,UAOlBD,EARN,sBAQ0B,IAAImH,IAAWnH,EAAc,CAAEoH,aAAa,EAAMC,UAAU,IARtF,WASWpH,EAASK,MATpB,uBASiC,IAAI6G,IAAWG,YAAsB,uBAAD,OAAwBrH,EAASK,SATtG,iCAWSL,GAXT,6C,sBAwCA,IAAIsH,GAA4C,SAAAC,GAC9C,IAAM5C,EAAI6C,YAAa,iBADgC,EAGnBC,oBAAS,GAHU,mBAGhDC,EAHgD,KAGpCC,EAHoC,OAInBF,oBAAS,GAJU,mBAIhDG,EAJgD,KAIpCC,EAJoC,OAMjBJ,mBAASF,EAAMlI,KAAKqF,UANH,mBAMhDoD,EANgD,KAMnCC,EANmC,cAQxCC,IARwC,2EAQvD,sBAAAxI,EAAA,sEACQ+H,EAAMS,SAASF,GADvB,OAEEH,GAAc,GAFhB,4CARuD,kEAavD,sBAAAnI,EAAA,sEACQ+H,EAAMU,WADd,OAEEJ,GAAc,GAFhB,4CAbuD,sBAkBvD,SAASK,EAAexI,GACtB,IAAMyI,EAAMzI,EAAS0I,QAAQ,GAC7B,MAAY,UAARD,EAAwB,MACrBA,EArB8C,MAwBoBE,YACxEd,EAAMlI,KAAKiJ,QAAUf,EAAMlI,KAAKiJ,OAAO5I,UAAa,EACrD,GACA,CACE6I,QAAS,KA5B0C,mBAwBhDC,EAxBgD,KAwBvBC,EAxBuB,KA+BnDlB,EAAMlI,KAAKiJ,QAAyC,MAA/Bf,EAAMlI,KAAKiJ,OAAO5I,UAAkB+I,EAAwCC,QAkFrG,IAAMC,EAAWC,YAAqB,EAAG,KAEzC,OACE,mCACE,eAACC,EAAA,EAAMC,IAAP,WACE,eAACD,EAAA,EAAME,KAAP,CAAYC,UAAWC,IAAMC,wBAA7B,UACG3B,EAAMlI,KAAKiJ,QAAwC,MAA9Bf,EAAMlI,KAAKiJ,OAAO5I,UACtC,cAACyJ,EAAA,EAAD,CAAUC,QAASZ,EAAyBa,YAAU,IAExD,cAACC,EAAA,EAAD,UACE,sBAAKN,UAAWC,IAAMvE,SAAtB,UACE,cAAC6E,EAAA,EAAD,CACEP,UAAWC,IAAMO,kBACjBC,QAASlC,EAAMmC,SACfC,WAAYpC,EAAMlI,KAAKiJ,OACvBsB,SAAU,SAACzJ,EAAD,OAAMsJ,EAAN,EAAMA,QAAN,OAAoBlC,EAAMsC,SAASJ,MAE/C,cAACK,EAAA,EAAD,CAAM1D,KAAM2D,YAAYxC,EAAMlI,KAAKqF,YAClC,IAAW6C,EAAMlI,KAAKqF,kBAI3BiE,GAAY,cAACE,EAAA,EAAME,KAAP,CAAYiB,UAAU,SAAtB,SAAgCC,YAAe1C,EAAMlI,KAAKO,KAAM,KAC9E,cAACiJ,EAAA,EAAME,KAAP,CAAYC,UAAWC,IAAMiB,0BAA2BF,UAAU,SAAlE,SACGzC,EAAMlI,KAAKiJ,OAxGpB,WACE,IAAM7I,EAAU,WACd,OAAQ8H,EAAMlI,KAAKiJ,OAAO6B,cACxB,IAAK,UACH,OACE,qCACE,cAACL,EAAA,EAAD,CAAM1D,KAAK,mBACVzB,EAAE,wBAGT,IAAK,UACH,OACE,qCACE,cAACmF,EAAA,EAAD,CAAM1D,KAAK,YACVzB,EAAE,oBAAqB,CACtBjF,SAAUwI,EAAeM,QAIjC,IAAK,YACH,OACE,qCACE,cAACsB,EAAA,EAAD,CAAM1D,KAAK,iBACVzB,EAAE,sBAAuB,CACxBjF,SAAUwI,EAAeM,QAIjC,IAAK,aACH,OACE,qCACE,cAACsB,EAAA,EAAD,CAAM1D,KAAK,YACVzB,EAAE,2BAGT,IAAK,QACH,OACE,qCACE,cAACmF,EAAA,EAAD,CAAM1D,KAAK,iBACVzB,EAAE,sBAGT,IAAK,YACH,OACE,qCACE,cAACmF,EAAA,EAAD,CAAM1D,KAAK,mBACVzB,EAAE,2BA7CG,GAmDhB,MAAuC,UAAnC4C,EAAMlI,KAAKiJ,OAAO6B,aAElB,mCACE,cAACC,EAAA,EAAD,CACEC,QAAS,+BAAO5K,IAChB6K,WAAS,EACTC,QAAShD,EAAMlI,KAAKiJ,OAAOjI,MAC3BmK,GAAG,QACHC,SAAS,iBAINlD,EAAMlI,KAAKiJ,OAAOxH,OAEzB,mCACE,cAACsJ,EAAA,EAAD,CACEC,QAAS,+BAAO5K,IAChB8K,QAAS,cAACG,EAAA,EAAD,CAAQC,QAASpD,EAAMlI,KAAKiJ,OAAOxH,OAAnC,SAA4C6D,EAAE,oBACvD6F,GAAG,QACHF,WAAS,EACTG,SAAS,iBAKVhL,EA4BCmL,GAEA,qCACE,cAACd,EAAA,EAAD,CAAMd,UAAWC,IAAM4B,uBAAwBzE,KAAK,WAAWuE,QAAS,kBAAMpD,EAAMuD,gBACnFvD,EAAMwD,eACL,qCACE,cAACX,EAAA,EAAD,CACEC,QACE,cAACP,EAAA,EAAD,CAAMH,SAAUpC,EAAMyD,QAAShC,UAAWC,IAAM4B,uBAAwBzE,KAAK,qBAE/EuD,SAAUpC,EAAMyD,QAChBC,KAAMvD,EACNwD,OAAQ,kBAAMvD,GAAc,IAC5BwD,QAAS,kBAAO5D,EAAMyD,SAAWrD,GAAc,IAC/C4C,QACE,eAACa,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,MAAN,CACEpC,MAAO,CAAEqC,MAAO,KAChBC,YAAa5G,EAAE,iBACfhD,MAAOmG,EACP8B,SAAU,SAACzJ,EAAD,OAAMwB,EAAN,EAAMA,MAAN,OAAkBoG,EAAepG,IAC3C6J,WAAYC,aAAa,kBAAMzD,SAEjC,cAAC0C,EAAA,EAAD,CAAQgB,SAAO,EAACC,QAASpE,EAAMyD,QAASL,QAAS3C,EAAjD,SACGrD,EAAE,gBAIT6F,GAAG,QACHC,SAAS,eAEX,cAACL,EAAA,EAAD,CACEC,QAAS,cAACP,EAAA,EAAD,CAAMH,SAAUpC,EAAMyD,QAAShC,UAAWC,IAAM4B,uBAAwBzE,KAAK,WACtFuD,SAAUpC,EAAMyD,QAChBC,KAAMrD,EACNsD,OAAQ,kBAAMrD,GAAc,IAC5BsD,QAAS,kBAAO5D,EAAMyD,SAAWnD,GAAc,IAC/C0C,QACE,cAACG,EAAA,EAAD,CAAQkB,UAAQ,EAACD,QAASpE,EAAMyD,QAASL,QAhLN,2CAgLnC,SACGhG,EAAE,qBAGP6F,GAAG,QACHC,SAAS,6BAY7BnD,GAAeuE,YAASvE,IAaxB,IAAIwE,GAAsC,SAAAvE,GACxC,IAAM5C,EAAI6C,YAAa,iBAD0B,EAGPC,mBAAS,IAAIsE,KAHN,mBAG1CC,EAH0C,KAG3BC,EAH2B,KAK3CC,EAAoB3E,EAAM3E,MAAMuJ,QAAO,SAAA9M,GAAI,OAAKA,EAAKiJ,UAC3D8D,qBAAU,WACR,IADc,EACRC,EAAYH,EAAkBI,KAAI,SAAAjN,GAAI,OAAIA,EAAKQ,QAC/C0M,EAAmB,IAAIR,IAFf,cAGSC,GAHT,IAGd,2BAAsC,CAAC,IAA5BQ,EAA2B,QAChCH,EAAUI,SAASD,IAAWD,EAAiBG,IAAIF,IAJ3C,8BAOTG,IAAcX,EAAeO,IAAmBN,EAAiBM,KACrE,CAAChF,EAAM3E,QAaV,IAAMgK,EAAqBrF,EAAM3E,MAAMuJ,QAAO,SAAA9M,GAAI,OAAI2M,EAAca,IAAIxN,EAAKQ,SA3B5B,EA6BT4H,mBAAS,IAAIsE,KA7BJ,mBA6B1Ce,EA7B0C,KA6B5BC,EA7B4B,KA8BjD,SAASC,EAAWX,EAA8BrB,GAChD,IAAMiC,EAAkB,IAAIlB,IAAIe,GAEP,kBAAdT,IAAwBA,EAAY,CAACA,IAHkB,oBAK3CA,GAL2C,IAKlE,2BAAkC,CAAC,IAAxBG,EAAuB,QAC5BxB,EAASiC,EAAgBP,IAAIF,GAC5BS,EAAgBC,OAAOV,IAPoC,8BAUlEO,EAAgBE,GAxC+B,4CA2CjD,WAAwBT,EAAkB9H,EAAkBoD,GAA5D,SAAAtI,EAAA,0DACMsN,EAAaD,IAAIL,GADvB,wDAEEQ,EAAWR,GAAU,GAFvB,SAGQjF,EAAM4F,aAAazI,EAAUoD,GAHrC,OAIEkF,EAAWR,GAAU,GAJvB,4CA3CiD,kEAkDjD,WAAwBH,EAAqBhH,GAA7C,SAAA7F,EAAA,0DACM6M,EAAUe,MAAK,SAAAZ,GAAQ,OAAIM,EAAaD,IAAIL,MADlD,wDAEEQ,EAAWX,GAAW,GAFxB,SAGQ9E,EAAM8F,cAAchI,GAH5B,OAIE2H,EAAWX,GAAW,GAJxB,4CAlDiD,sBAyDjD,IAAMiB,EAAiB/F,EAAM3E,MAAMuJ,QACjC,SAAA9M,GAAI,OAAIA,EAAKiJ,QAAuC,UAA7BjJ,EAAKiJ,OAAO6B,cAAyD,cAA7B9K,EAAKiJ,OAAO6B,gBAC3ElF,OA3D+C,EA6DHwC,mBAAmB,IA7DhB,mBA6D1C8F,EA7D0C,KA6DzBC,EA7DyB,KA8D3CC,EAAcC,mBA9D6B,4CA+DjD,sBAAAlO,EAAA,0DACM8N,EADN,iDAGErL,aAAiB,SAAAW,GACf,GAAIA,EAAMwK,MAAK,SAAA/N,GAAI,OAAKsO,YAAgBtO,EAAK+G,SAE3CxB,IAAMvE,MAAMsE,EAAE,0BAFhB,CAMA,IAAMiJ,EAAW,kBAAMrG,EAAMsG,cAAcjL,IAGrCkL,EAAmBvG,EAAM3E,MAAMuJ,QAAO,SAAA9M,GAAI,OAAKA,EAAKiJ,UAAQgE,KAAI,SAAAjN,GAAI,OAAIA,EAAKqF,YAC7EqJ,EAAanL,EAAM0J,KAAI,SAAAjN,GAAI,OAAIA,EAAK+G,QAAM+F,QAAO,SAAAzH,GAAQ,OAAIoJ,EAAiBrB,SAAS/H,MACzFqJ,EAAW9I,OAAS,GACtBuI,EAAmBO,GACnBN,EAAYO,QAAUJ,GACjBA,QAlBX,4CA/DiD,4BAqFanG,mBAAsB,MArFnC,mBAqF1CwG,EArF0C,KAqFjBC,EArFiB,OAsFezG,oBAAS,GAtFxB,mBAsF1C0G,EAtF0C,KAsFhBC,EAtFgB,OAuFa3G,oBAAS,GAvFtB,oBAuF1C4G,GAvF0C,MAuFjBC,GAvFiB,SAwFCC,YAAuB,sBAAC,sBAAA/O,EAAA,sEAClE+H,EAAM8F,cAAcT,EAAmBN,KAAI,SAAAjN,GAAI,OAAIA,EAAKqF,aADU,OAExE4J,IAA2B,GAF6C,4CAxFzB,qBAwF1CE,GAxF0C,MAwFnBC,GAxFmB,MA6F3C9F,GAAWC,YAAqB,EAAG,KAEzC,OACE,mCACE,eAACC,EAAA,EAAD,CACE6F,SAAO,EACPC,MAAOpH,EAAMoH,MACb3F,UAAWC,IAAM2F,WAAcrH,EAAMwD,cAAiD,GAAjC,IAAM9B,IAAM4F,oBACjEC,aAAW,EAJb,UAME,cAACjG,EAAA,EAAMkG,OAAP,UACE,eAAClG,EAAA,EAAMC,IAAP,WACE,eAACD,EAAA,EAAMmG,WAAP,WACE,cAACzF,EAAA,EAAD,CACEP,UAAWC,IAAMO,kBACjBC,QAASuC,EAAcpM,KAAO,EAC9BqP,cAAejD,EAAcpM,KAAO,GAAKoM,EAAcpM,KAAOsM,EAAkBjH,OAChF0E,SAAU6E,GACV5E,SAAU,SAACzJ,EAAD,UA/FxB,SAAqBsJ,GACnBwC,EAAiB,IAAIF,IAAItC,EAAUyC,EAAkBI,KAAI,SAAAjN,GAAI,OAAIA,EAAKQ,QAAQ,KA8FpCqP,CAApB,EAAMzF,YAEjB9E,EAAE,iBAEHgE,IACA,cAACE,EAAA,EAAMmG,WAAP,CAAkBhG,UAAWC,IAAMkG,oBAAqBnF,UAAU,SAAlE,SACGrF,EAAE,WAGP,cAACkE,EAAA,EAAMmG,WAAP,CAAkBhF,UAAU,SAAShB,UAAWC,IAAMiB,0BAAtD,SACG3C,EAAMwD,cAAgBpG,EAAE,0BAA4BA,EAAE,sBAI7D,cAACkE,EAAA,EAAMuG,KAAP,UAC0B,IAAvB7H,EAAM3E,MAAMqC,OACX,cAAC4D,EAAA,EAAMC,IAAP,UACE,cAACD,EAAA,EAAMmG,WAAP,CAAkBK,QAAS1G,GAAW,EAAI,EAAGqB,UAAU,SAAShB,UAAWC,IAAMqG,kBAAjF,SACE,cAACP,EAAA,EAAD,UAASpK,EAAE,mBAIf4C,EAAM3E,MAAM0J,KAAI,SAAAjN,GAAI,OAClB,cAAC,GAAD,CAEEA,KAAMA,EACN0L,cAAexD,EAAMwD,cACrBrB,SAAUsC,EAAca,IAAIxN,EAAKQ,MACjCmL,QAAS8B,EAAaD,IAAIxN,EAAKQ,MAC/BgK,SAAU,SAAAJ,GAAO,OAxH/B,SAAkB+C,EAAkB/C,GAClC,IAAM8C,EAAmB,IAAIR,IAAIC,GAC7BvC,EAAS8C,EAAiBG,IAAIF,GAC7BD,EAAiBW,OAAOV,GAC7BP,EAAiBM,GAoHgB1C,CAASxK,EAAKQ,KAAM4J,IACzCqB,WAAY,kBAAMvD,EAAMgI,eAAelQ,EAAKqF,WAC5CsD,SAAU,SAAAF,GAAW,OA9Ic,+CA8IVE,CAAS3I,EAAKQ,KAAMR,EAAKqF,SAAUoD,IAC5DG,SAAU,kBA/IyB,6CA+InBA,CAAS,CAAC5I,EAAKQ,MAAO,CAACR,EAAKqF,aARvCrF,EAAKQ,WAalB,cAACgJ,EAAA,EAAM2G,OAAP,CAAcC,WAAS,EAAvB,SACE,cAAC5G,EAAA,EAAMC,IAAP,UACE,cAACD,EAAA,EAAMmG,WAAP,CAAkBK,QAAS1G,GAAW,EAAI,EAA1C,SACE,sBAAKK,UAAWC,IAAMyG,oBAAtB,UACE,qBAAK1G,UAAWC,IAAM0G,gBAAtB,SACG/C,EAAmB3H,OAAS,EAC3B,cAAC2K,EAAA,EAAD,CAAKC,SAAU3B,EAAf,SACE,cAAC4B,EAAA,EAAD,CACE7E,KAAMkD,EACNjD,OAAQ,kBAAOmD,IAA2BD,GAA4B,IACtEjD,QAAS,kBAAMiD,GAA4B,IAC3C2B,UAAQ,EACRC,KAAMrL,EAAEgE,GAAW,wCAA0C,iCAAkC,CAC7FsH,MAAOrD,EAAmB3H,OAAOsB,WACjC2J,UAAWjG,YACT2C,EAAmBuD,QAAO,SAACC,EAAK/Q,GAAN,OAAe+Q,EAAM/Q,EAAKO,OAAM,GAC1D,KATN,SAaE,eAACkQ,EAAA,EAASO,KAAV,CAAerH,UAAWC,IAAMqH,mCAAhC,UACE,cAACR,EAAA,EAASS,KAAV,CACEC,KAAK,WACLR,KAAMrL,EAAE,wBACRgG,QAAS,kBACPpD,EAAMkJ,yBAAyB7D,EAAmBN,KAAI,SAAAjN,GAAI,OAAIA,EAAKqF,gBAGtE6C,EAAMwD,eACL,cAACX,EAAA,EAAD,CACEC,QAAS,cAACyF,EAAA,EAASS,KAAV,CAAeC,KAAK,SAASR,KAAMrL,EAAE,aAC9CsG,KAAMoD,GACNnD,OAAQ,kBAAMoD,IAA2B,IACzCnD,QAAS,kBAAOqD,IAAyBF,IAA2B,IACpEoC,QAASzC,EACT1D,QACE,cAACG,EAAA,EAAD,CAAQkB,UAAQ,EAACD,QAAS6C,GAAuB7D,QAAS8D,GAA1D,SACG9J,EAAE,qBAGP6F,GAAG,QACHC,SAAS,sBAMjB6C,EACF3I,EACEgE,GAAW,8CAAgD,uCAC3D,CACEsH,MAAO1I,EAAM3E,MAAMqC,OAAOsB,WAC1B2J,UAAWjG,YACT1C,EAAM3E,MAAMuN,QAAO,SAACC,EAAK/Q,GAAN,OAAe+Q,EAAM/Q,EAAKO,OAAM,GACnD,GAEF0N,eAAgBA,EAAe/G,aAInC5B,EAAEgE,GAAW,+BAAiC,wBAAyB,CACrEsH,MAAO1I,EAAM3E,MAAMqC,OAAOsB,WAC1B2J,UAAWjG,YACT1C,EAAM3E,MAAMuN,QAAO,SAACC,EAAK/Q,GAAN,OAAe+Q,EAAM/Q,EAAKO,OAAM,GACnD,OAKP2H,EAAMwD,eACL,cAACX,EAAA,EAAD,CACEC,QACE,cAACK,EAAA,EAAD,CACE1B,UAAWC,IAAM0H,kBACjBH,KAAK,SACLjG,QAAS5F,EAAE,WACXiM,cAAc,OACdlF,SAAO,EACP9L,KAAM,QACN+L,QAA4B,IAAnB2B,EACT3C,QApO2B,6CAuO/BM,KAAiC,IAA3BsC,EAAgBtI,OACtBkG,QAAS,kBAAMqC,EAAmB,KAClCjD,QACE,qCACE,4BACE,iCAAS5F,EAAE,kCAEb,cAACkM,EAAA,EAAD,UACGtD,EAAgBjB,KAAI,SAAA5H,GAAQ,OAC3B,cAAC4E,EAAA,EAAD,UACE,cAACuH,EAAA,EAAKN,KAAN,CAAWC,KAAMzG,YAAYrF,GAAW6F,QAAS7F,KAD/BA,QAKxB,cAACkL,EAAA,EAAD,CAAKC,SAAU,SAAAiB,GAAM,OAAIA,GAAU/N,OAAOgO,uBAAsB,kBAAMD,EAAOE,YAA7E,SACE,cAACtG,EAAA,EAAD,CACEC,QAAS,WACP6C,EAAmB,IACnBC,EAAYO,WAHhB,SAMGrJ,EAAE,4BAKX6F,GAAG,QACHC,SAAS,+BAY7BqB,GAAYD,YAASC,IAOrB,IAAImF,GAAoD,SAAA1J,GACtD,IAAM5C,EAAI6C,YAAa,iBAEjB0J,EAAWC,YAAmB5J,EAAM1C,QAAQuM,MAElDhF,qBAAU,WACRiF,IAASC,aAAT,UAAyB3M,EAAE,UAA3B,YAAwCuM,GAAY,iBACnD,CAACG,IAASE,OAAQhK,EAAM1C,UAE3B,IAAM2M,EAAYC,cAElB,SAASC,EAAkCC,GACzC,OAAOA,EAASrF,KAAI,SAAAjN,GAAI,MAAK,CAC3BQ,KAAMA,cACN6E,SAAUrF,EAAKqF,SACf9E,KAAMP,EAAKO,SAfgD,MAmBf6H,mBAASiK,EAAkCnK,EAAM1C,QAAQ+M,WAnB1C,mBAmBxDC,EAnBwD,KAmBtCC,EAnBsC,OAoBDrK,mBAC5DiK,EAAkCnK,EAAM1C,QAAQkN,kBArBa,mBAoBxDC,EApBwD,KAoB/BC,EApB+B,cAwBhD9E,EAxBgD,oFAwB/D,WACE5K,EACA2P,EACAxN,EACAoD,GAJF,mBAAAtI,EAAA,yDAMOmO,YAAgB7F,GANvB,uBAOIlD,IAAMvE,MAAMsE,EAAE,sBAPlB,0CAW2CzF,IAAI2F,QAAQsN,kBAAkB,CACrE1N,UAAW8C,EAAM1C,QAAQuM,KAAKpK,GAC9BzE,OACAmC,WACAoD,gBAfJ,mBAWU/H,EAXV,EAWUA,aAAcC,EAXxB,EAWwBA,UAMlBD,EAjBN,wBAkBI6E,IAAMvE,MAAMN,EAAa4E,IAlB7B,+BAsBM3E,EAASK,MAtBf,wBAuBIuE,IAAMvE,MAAMsE,EAAE,UAAD,OAAW3E,EAASK,SAvBrC,2BA4BE6R,GAAY,SAAAP,GAAQ,OAClBA,EAASrF,KAAI,SAAAjN,GAAI,OACfA,EAAKqF,WAAaA,EACdrF,EACAiC,OAAO8Q,OAAO,GAAI/S,EAAM,CACtBqF,SAAUoD,UAjCtB,6CAxB+D,+BA+DhDuF,EA/DgD,kFA+D/D,WACE9K,EACA2P,EACA7M,GAHF,mBAAA7F,EAAA,sEAK2CN,IAAI2F,QAAQwN,mBAAmB,CACtE5N,UAAW8C,EAAM1C,QAAQuM,KAAKpK,GAC9BzE,OACA8C,UAAWA,IARf,mBAKUtF,EALV,EAKUA,aAAcC,EALxB,EAKwBA,UAKlBD,EAVN,uBAWI6E,IAAMvE,MAAMN,EAAa4E,IAX7B,8BAeM3E,EAASK,MAff,wBAgBIuE,IAAMvE,MAAMsE,EAAE,UAAD,OAAW3E,EAASK,SAhBrC,2BAqBE6R,GAAY,SAAAP,GAAQ,OAAIA,EAASxF,QAAO,SAAA9M,GAAI,OAAKgG,EAAUoH,SAASpN,EAAKqF,gBArB3E,6CA/D+D,+BAuFhDmJ,EAvFgD,oFAuF/D,WACEtL,EACAoP,EACAO,EACAtP,GAJF,gBAsBW0P,EAtBX,iBAAA9S,EAAA,sDAsBW8S,EAtBX,SAsBgC9F,EAAkB7M,GAC9CuS,GAAY,SAAAP,GACV,IAAMY,EAAc7P,MAAMC,KAAKgP,GAC/B,IAAK,IAAM/L,KAAK2M,EACd,GAAIA,EAAY3M,GAAG/F,OAAS2M,EAI1B,OAHA+F,EAAY3M,GAAKtE,OAAO8Q,OAAO,GAAIT,EAAS/L,GAAI,CAC9C0C,OAAQ3I,EAAa2B,OAAO8Q,OAAO,GAAIT,EAAS/L,GAAG0C,OAAQ3I,GAAc,OAEpE4S,EAGX,OAAOZ,MA3BLa,EAAqB5P,EAAM0J,KAAI,SAAAjN,GAAI,OAAIA,EAAK+G,QAC5CqM,EAAqC,GAP7C,cAQqB7P,GARrB,IAQE,2BAAWvD,EAAe,QACxBoT,EAAkBC,KAAK,CACrB7S,KAAMA,cACN6E,SAAUrF,EAAK+G,KACfxG,KAAMP,EAAKO,KACX0I,OAAQ,CACNjJ,KAAMA,EACN8K,aAAc,aAftB,8BAsCE,IAnBMoI,EAAcZ,EAASxF,QAAO,SAAA9M,GAAI,OAAKmT,EAAmB/F,SAASpN,EAAKqF,aAAWiO,OAAOF,GAChGP,EAAYK,GAiBNK,EAA0C,GArClD,aAsCO,IAAMC,EAAI,KACbD,EAAYF,KAAZ,sBAAiB,oCAAAlT,EAAA,sEACwDP,YACrEC,IAAI2F,QAAQiO,eACZ,CACErO,UAAW8C,EAAM1C,QAAQuM,KAAKpK,GAC9BzE,OACAmC,SAAUmO,EAAKnO,WAEjB,kBAAM8M,EAAU,oBAChBqB,EAAKvK,OAAOjJ,MACZ,SAAAK,GAAQ,OACN4S,EAAqBO,EAAKhT,KAAM,CAC9BsK,aAAczK,EAASD,OACvBC,SAA8B,IAApBA,EAASA,cAEvB,SAAAmB,GAAc,OACZyR,EAAqBO,EAAKhT,KAAM,CAC9BiB,OAAQD,OAjBC,gBACPkB,EADO,EACPA,gBAAiBC,EADV,EACUA,YAAajC,EADvB,EACuBA,aAAcC,EADrC,EACqCA,SAoBhD+B,EACFuQ,EAAqBO,EAAKhT,KAAM,CAC9BsK,aAAc,YACdrJ,OAAQ,OAEDkB,GACT+Q,QAAQC,IAAI,uBAAwBhR,GACpCsQ,EAAqBO,EAAKhT,KAAM,CAC9BsK,aAAc,QACd9J,MAAO4S,OAAOjR,MAEPjC,EACTuS,EAAqBO,EAAKhT,KAAM,CAC9BsK,aAAc,QACd9J,MAAON,EAAa4E,KAEb3E,EAASK,MAClBiS,EAAqBO,EAAKhT,KAAM,CAC9BsK,aAAc,QACd9J,MAAOsE,EAAE,UAAD,OAAW3E,EAASK,UAEzBiS,EAAqBO,EAAKhT,KAAM,MA1CxB,6CADnB,MAAmB4S,EAAnB,eAAuC,IAtCzC,iBAqFQS,IAAKN,EAAa,CACtBO,YA1rByB,IAomB7B,6CAvF+D,sBAiL/D,IAAMC,EAAexK,YAAqB,IAAKyK,KAEzCC,EACJ,qCACE,cAACvE,EAAA,EAAD,CACE/F,UAAWC,IAAMsK,OAAS,YAC1B/C,KAAK,iBACLgD,GAAG,KACHjJ,QACE,qCACG5F,EAAE,oBACH,cAAC+F,EAAA,EAAD,CACE1B,UAAWC,IAAMwK,cACjB/H,SAAO,EACP8H,GAAIE,IACJC,KAAMC,YAAcrM,EAAM1C,QAAQuM,MAClC7G,QAAS5F,EAAE,2BAKnB,cAAC,GAAD,CACEoG,cAAexD,EAAM1C,QAAQgP,wBAAwBpH,SAAS,UAC9DkC,MAAM,QACN/L,MAAOiP,EACPtC,eAAgB,SAAA7K,GAAQ,OAAIF,EAAoB+C,EAAM1C,QAAQuM,KAAKpK,GAAI,WAAYtC,EAAUC,IAC7F8L,yBAA0B,SAAApL,GAAS,OACjCD,GAA8BmC,EAAM1C,QAAQuM,KAAKpK,GAApB,mBAAoCkK,EAApC,QAAoD,WAAY7L,EAAWV,IAE1GwI,aAAc,SAACzI,EAAUoD,GAAX,OAA2BqF,EAAa,WAAY2E,EAAqBpN,EAAUoD,IACjGuF,cAAe,SAAAhI,GAAS,OAAIgI,EAAc,WAAYyE,EAAqBzM,IAC3EwI,cAAe,SAAAjL,GAAK,OAAIiL,EAAc,WAAYgE,EAAkBC,EAAqBlP,SAKzFkR,EACJ,qCACE,cAAC/E,EAAA,EAAD,CACE/F,UAAWC,IAAMsK,OAAS,YAC1B/C,KAAK,yBACLgD,GAAG,KACHjJ,QAAS5F,EAAE,8BAEb,cAAC,GAAD,CACEoG,cAAexD,EAAM1C,QAAQgP,wBAAwBpH,SAAS,UAC9DkC,MAAM,OACN/L,MAAOoP,EACPzC,eAAgB,SAAA7K,GAAQ,OAAIF,EAAoB+C,EAAM1C,QAAQuM,KAAKpK,GAAI,iBAAkBtC,EAAUC,IACnG8L,yBAA0B,SAAApL,GAAS,OACjCD,GACEmC,EAAM1C,QAAQuM,KAAKpK,GADQ,yBAETkK,EAFS,QAG3B,iBACA7L,EACAV,IAGJwI,aAAc,SAACzI,EAAUoD,GAAX,OACZqF,EAAa,iBAAkB8E,EAA4BvN,EAAUoD,IAEvEuF,cAAe,SAAAhI,GAAS,OAAIgI,EAAc,iBAAkB4E,EAA4B5M,IACxFwI,cAAe,SAAAjL,GAAK,OAClBiL,EAAc,iBAAkBmE,EAAyBC,EAA4BrP,SAM7F,OACE,mCACE,cAACmR,EAAA,EAAD,UACGX,EACC,mCACE,eAACW,EAAA,EAAKjL,IAAN,WACE,cAACiL,EAAA,EAAKC,OAAN,CAAa1I,MAAO,EAApB,SAAwBgI,IACxB,cAACS,EAAA,EAAKC,OAAN,CAAa1I,MAAO,EAApB,SAAwBwI,SAI5B,qCACE,cAACC,EAAA,EAAKjL,IAAN,UACE,cAACiL,EAAA,EAAKC,OAAN,CAAa1I,MAAO,GAApB,SAAyBgI,MAE3B,cAACS,EAAA,EAAKjL,IAAN,UACE,cAACiL,EAAA,EAAKC,OAAN,CAAa1I,MAAO,GAApB,SAAyBwI,cASvC7C,GAAmBpF,YAASoF,IAEb,WACbgD,KAAMC,YAAW,uCAAC,WAAM/U,GAAN,iBAAAK,EAAA,6DACVwH,EAAKmN,SAAShV,EAAQiV,OAAR,IADJ,SAEMtN,GAAU,KAAME,GAFtB,cAEVnC,EAFU,yBAIT,cAAC,GAAD,CAA+BkC,OAAO,KAAKlC,QAASA,GAA7BhF,gBAJd,2CAAD,uDAMjBwU,YAAaH,YAAW,uCAAC,WAAM/U,GAAN,iBAAAK,EAAA,6DACjB8U,EAAYH,SAAShV,EAAQiV,OAAR,WADJ,SAEDtN,GAAU,YAAawN,GAFtB,cAEjBzP,EAFiB,yBAIhB,cAAC,GAAD,CAA+BkC,OAAO,YAAYlC,QAASA,GAApChF,gBAJP,2CAAD","file":"static/js/45.5b39a38e.chunk.js","sourcesContent":["import Axios from \"axios\";\n\nimport { ApiResponse } from \"@/api\";\n\nexport interface ApiResponseWithUploadResult<T extends { error?: string }> {\n  uploadCancelled?: boolean;\n  uploadError?: any;\n  requestError?: ApiResponse<T>[\"requestError\"];\n  response?: Omit<T, \"signedUploadRequest\">;\n}\n\nexport interface FileUploadApiProgress {\n  status: \"Requesting\" | \"Uploading\";\n  progress: number;\n}\n\nexport async function callApiWithFileUpload<\n  Request extends { uploadInfo?: ApiTypes.FileUploadInfoDto },\n  Response extends { error?: string; signedUploadRequest?: ApiTypes.SignedFileUploadRequestDto }\n>(\n  api: (request: Request, recaptchaTokenPromise: Promise<string>) => Promise<ApiResponse<Response>>,\n  request: Omit<Request, \"uploadInfo\">,\n  getRecaptchaToken: () => Promise<string>,\n  file: Blob,\n  progressCallback?: (progress: FileUploadApiProgress) => void,\n  cancelFunctionReceiver?: (cancelFunction: () => void) => void\n): Promise<ApiResponseWithUploadResult<Response>> {\n  if (progressCallback) progressCallback({ status: \"Requesting\", progress: 0 });\n\n  const result = await api(\n    {\n      ...request,\n      uploadInfo: file\n        ? {\n            size: file.size,\n            uuid: null\n          }\n        : null\n    } as Request,\n    getRecaptchaToken()\n  );\n  if (result.requestError) return result;\n\n  if (result.response.signedUploadRequest) {\n    // Upload is required\n\n    const cancelTokenSource = Axios.CancelToken.source();\n    let isCancelled = false;\n    const cancelFunction = () => {\n      if (isCancelled) return;\n      isCancelled = true;\n      cancelTokenSource.cancel();\n    };\n\n    if (cancelFunctionReceiver) cancelFunctionReceiver(cancelFunction);\n\n    let error = false;\n    function onUploadProgress(e: ProgressEvent<EventTarget>) {\n      // setTimeout is a workaround for Axios triggers a \"progress\" event with 100% loaded after error\n\n      if (progressCallback)\n        setTimeout(() => {\n          if (error) return;\n\n          progressCallback({ status: \"Uploading\", progress: e.loaded / e.total });\n        }, 0);\n    }\n\n    try {\n      if (result.response.signedUploadRequest.method === \"PUT\") {\n        await Axios.put(result.response.signedUploadRequest.url, file, {\n          cancelToken: cancelTokenSource.token,\n          onUploadProgress\n        });\n      } else {\n        const formData = new FormData();\n        Object.entries(result.response.signedUploadRequest.extraFormData).forEach(([key, value]) =>\n          formData.append(key, value as string)\n        );\n\n        formData.append(result.response.signedUploadRequest.fileFieldName, file);\n        await Axios.post(result.response.signedUploadRequest.url, formData, {\n          cancelToken: cancelTokenSource.token,\n          onUploadProgress\n        });\n      }\n    } catch (e) {\n      error = true;\n      if (isCancelled) return { uploadCancelled: true };\n      return { uploadError: e };\n    }\n\n    if (progressCallback) progressCallback({ status: \"Requesting\", progress: 0 });\n\n    return await api(\n      {\n        ...request,\n        uploadInfo: {\n          size: file.size,\n          uuid: result.response.signedUploadRequest.uuid\n        }\n      } as Request,\n      getRecaptchaToken()\n    );\n  }\n  // Upload is not required\n  else return result;\n}\n","export default function openUploadDialog(callback: (files: File[]) => void, accept?: string) {\n  const input = document.createElement(\"input\");\n  input.accept = accept;\n  input.type = \"file\";\n  input.multiple = true;\n  input.onchange = () => callback(Array.from(input.files));\n  input.click();\n}\n","import \"streamsaver/examples/zip-stream\";\n\ninterface FileLike {\n  name: string;\n  stream(): ReadableStream;\n  lastModified?: number;\n  directory?: boolean;\n  comment?: string;\n}\n\nexport const createZipStream: (underlyingSource: UnderlyingSource<FileLike>) => ReadableStream = (window as any).ZIP;\n\nexport async function createZipBlob(underlyingSource: UnderlyingSource<FileLike>): Promise<Blob> {\n  return await new Response(createZipStream(underlyingSource)).blob();\n}\n","export default async function pipeStream(\n  readableStream: ReadableStream,\n  writableStream: WritableStream,\n  abortCallbackReceiver?: { abort?: () => void }\n) {\n  if (window.WritableStream && readableStream.pipeTo) {\n    const abortController = new AbortController();\n    if (abortCallbackReceiver) abortCallbackReceiver.abort = abortController.abort.bind(abortController);\n    await readableStream.pipeTo(writableStream, abortController);\n  } else {\n    const writer = writableStream.getWriter();\n    if (abortCallbackReceiver) abortCallbackReceiver.abort = writer.abort.bind(writer);\n    const reader = readableStream.getReader();\n    while (1) {\n      const readResult = await reader.read();\n      if (readResult.done) {\n        writer.close();\n        break;\n      } else {\n        writer.write(readResult.value);\n      }\n    }\n  }\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport {\n  Dropdown,\n  Grid,\n  Icon,\n  Header,\n  Popup,\n  Button,\n  Form,\n  Checkbox,\n  List,\n  Table,\n  SemanticCOLORS,\n  Progress,\n  Ref\n} from \"semantic-ui-react\";\nimport { v4 as uuid } from \"uuid\";\nimport lodashIsEqual from \"lodash.isequal\";\nimport { WritableStream } from \"web-streams-polyfill/ponyfill/es6\";\nimport * as streamsaver from \"streamsaver\";\nimport pAll from \"p-all\";\nimport { useDebounce } from \"use-debounce\";\n\nimport style from \"./ProblemFilesPage.module.less\";\n\nimport api from \"@/api\";\nimport { appState } from \"@/appState\";\nimport toast from \"@/utils/toast\";\nimport { useAsyncCallbackPending, useLocalizer, useRecaptcha, useScreenWidthWithin, Link } from \"@/utils/hooks\";\nimport getFileIcon from \"@/utils/getFileIcon\";\nimport formatFileSize from \"@/utils/formatFileSize\";\nimport downloadFile from \"@/utils/downloadFile\";\nimport openUploadDialog from \"@/utils/openUploadDialog\";\nimport pipeStream from \"@/utils/pipeStream\";\nimport { observer } from \"mobx-react\";\nimport { defineRoute, RouteError } from \"@/AppRouter\";\nimport { callApiWithFileUpload } from \"@/utils/callApiWithFileUpload\";\nimport { createZipStream } from \"@/utils/zip\";\nimport { getProblemIdString, getProblemUrl } from \"../utils\";\nimport { onEnterPress } from \"@/utils/onEnterPress\";\nimport { isValidFilename } from \"@/utils/validators\";\nimport { Localizer, makeToBeLocalizedText } from \"@/locales\";\nimport { EmojiRenderer } from \"@/components/EmojiRenderer\";\n\n// Firefox have no WritableStream\nif (!window.WritableStream) (streamsaver as any).WritableStream = WritableStream;\nif (window.apiEndpoint.toLowerCase().startsWith(\"https://\")) {\n  (streamsaver as any).mitm = `${window.apiEndpoint}api/cors/streamsaver/mitm.html`;\n}\n\nexport async function downloadProblemFile(\n  problemId: number,\n  type: \"TestData\" | \"AdditionalFile\",\n  filename: string,\n  _: Localizer\n) {\n  if (!filename) return toast.error(_(\"problem_files.error.NO_SUCH_FILE\"));\n\n  const { requestError, response } = await api.problem.downloadProblemFiles({\n    problemId,\n    type,\n    filenameList: [filename]\n  });\n  if (requestError) return toast.error(requestError(_));\n  else if (response.downloadInfo.length === 0) return toast.error(_(\"problem_files.error.NO_SUCH_FILE\"));\n\n  downloadFile(response.downloadInfo[0].downloadUrl);\n}\n\nexport async function downloadProblemFilesAsArchive(\n  problemId: number,\n  filename: string,\n  type: \"TestData\" | \"AdditionalFile\",\n  filenames: string[],\n  _: Localizer\n) {\n  const { requestError, response } = await api.problem.downloadProblemFiles({\n    problemId,\n    type,\n    filenameList: filenames\n  });\n  if (requestError) return toast.error(requestError(_));\n  if (response.error) return toast.error(_(`problem_files.error.${response.error}`));\n\n  const { downloadInfo } = response;\n\n  if (downloadInfo.length === 0) return toast.error(_(\"problem_files.no_files_to_download\"));\n\n  const fileStream = streamsaver.createWriteStream(filename);\n  let i = 0;\n  const zipStream = createZipStream({\n    async pull(ctrl) {\n      if (i == downloadInfo.length) return ctrl.close();\n\n      try {\n        const response = await fetch(downloadInfo[i].downloadUrl);\n        if (!response.ok) {\n          throw response.statusText;\n        }\n\n        ctrl.enqueue({\n          name: downloadInfo[i].filename,\n          stream: () => response.body\n        });\n      } catch (e) {\n        stopDownload();\n        toast.error(\n          _(\"problem_files.download_as_archive_error\", {\n            filename: downloadInfo[i].filename,\n            error: e.toString()\n          })\n        );\n      }\n\n      i++;\n    }\n  });\n\n  const abortCallbackReceiver: { abort?: () => void } = {};\n\n  function stopDownload() {\n    abortCallbackReceiver.abort();\n  }\n\n  // If we are on an insecure context, StreamSaver will use a MITM page to download the file\n  // a beforeunload event is triggered by the library (not a user), so ignore it\n  let isBeforeUnloadTriggeredByLibrary = !window.isSecureContext;\n  function onBeforeUnload(e: BeforeUnloadEvent) {\n    if (isBeforeUnloadTriggeredByLibrary) {\n      isBeforeUnloadTriggeredByLibrary = false;\n      return;\n    }\n    e.returnValue = \"\";\n  }\n\n  window.addEventListener(\"unload\", stopDownload);\n  window.addEventListener(\"beforeunload\", onBeforeUnload);\n\n  await pipeStream(zipStream, fileStream, abortCallbackReceiver);\n\n  window.removeEventListener(\"unload\", stopDownload);\n  window.removeEventListener(\"beforeunload\", onBeforeUnload);\n}\n\nconst MAX_UPLOAD_CONCURRENCY = 5;\n\nasync function fetchData(idType: \"id\" | \"displayId\", id: number) {\n  const { requestError, response } = await api.problem.getProblem({\n    [idType]: id,\n    testData: true,\n    additionalFiles: true,\n    permissionOfCurrentUser: true\n  });\n\n  if (requestError) throw new RouteError(requestError, { showRefresh: true, showBack: true });\n  else if (response.error) throw new RouteError(makeToBeLocalizedText(`problem_files.error.${response.error}`));\n\n  return response;\n}\n\ninterface FileUploadInfo {\n  file: File;\n  progressType: \"Waiting\" | \"Hashing\" | \"Uploading\" | \"Requesting\" | \"Error\" | \"Cancelled\";\n  cancel?: () => void;\n  progress?: number;\n  error?: string;\n}\n\ninterface FileTableItem {\n  uuid: string;\n  filename: string;\n  size: number;\n  upload?: FileUploadInfo;\n}\n\ninterface FileTableRowProps {\n  file: FileTableItem;\n  hasPermission: boolean;\n  selected: boolean;\n  pending: boolean;\n  onSelect: (checked: boolean) => void;\n  onDownload: () => void;\n  onRename: (newFilename: string) => Promise<void>;\n  onDelete: () => Promise<void>;\n}\n\nlet FileTableRow: React.FC<FileTableRowProps> = props => {\n  const _ = useLocalizer(\"problem_files\");\n\n  const [renameOpen, setRenameOpen] = useState(false);\n  const [deleteOpen, setDeleteOpen] = useState(false);\n\n  const [newFilename, setNewFilename] = useState(props.file.filename);\n\n  async function onRename() {\n    await props.onRename(newFilename);\n    setRenameOpen(false);\n  }\n\n  async function onDelete() {\n    await props.onDelete();\n    setDeleteOpen(false);\n  }\n\n  function formatProgress(progress: number) {\n    const str = progress.toFixed(1);\n    if (str === \"100.0\") return \"100\";\n    return str;\n  }\n\n  const [debouncedUploadProgress, debouncedUploadProgressControlFunctions] = useDebounce(\n    (props.file.upload && props.file.upload.progress) || 0,\n    24,\n    {\n      maxWait: 24\n    }\n  );\n  if (props.file.upload && props.file.upload.progress === 100) debouncedUploadProgressControlFunctions.flush();\n\n  function getUploadStatus() {\n    const status = (() => {\n      switch (props.file.upload.progressType) {\n        case \"Waiting\":\n          return (\n            <>\n              <Icon name=\"hourglass half\" />\n              {_(\".progress_waiting\")}\n            </>\n          );\n        case \"Hashing\":\n          return (\n            <>\n              <Icon name=\"hashtag\" />\n              {_(\".progress_hashing\", {\n                progress: formatProgress(debouncedUploadProgress)\n              })}\n            </>\n          );\n        case \"Uploading\":\n          return (\n            <>\n              <Icon name=\"cloud upload\" />\n              {_(\".progress_uploading\", {\n                progress: formatProgress(debouncedUploadProgress)\n              })}\n            </>\n          );\n        case \"Requesting\":\n          return (\n            <>\n              <Icon name=\"spinner\" />\n              {_(\".progress_requesting\")}\n            </>\n          );\n        case \"Error\":\n          return (\n            <>\n              <Icon name=\"warning sign\" />\n              {_(\".progress_error\")}\n            </>\n          );\n        case \"Cancelled\":\n          return (\n            <>\n              <Icon name=\"warning circle\" />\n              {_(\".progress_cancelled\")}\n            </>\n          );\n      }\n    })();\n\n    if (props.file.upload.progressType === \"Error\") {\n      return (\n        <>\n          <Popup\n            trigger={<span>{status}</span>}\n            hoverable\n            content={props.file.upload.error}\n            on=\"hover\"\n            position=\"top center\"\n          />\n        </>\n      );\n    } else if (props.file.upload.cancel) {\n      return (\n        <>\n          <Popup\n            trigger={<span>{status}</span>}\n            content={<Button onClick={props.file.upload.cancel}>{_(\".cancel_upload\")}</Button>}\n            on=\"hover\"\n            hoverable\n            position=\"top center\"\n          />\n        </>\n      );\n    }\n    return status;\n  }\n\n  const isMobile = useScreenWidthWithin(0, 425 + 1);\n\n  return (\n    <>\n      <Table.Row>\n        <Table.Cell className={style.fileTableColumnFilename}>\n          {props.file.upload && props.file.upload.progress != null && (\n            <Progress percent={debouncedUploadProgress} indicating />\n          )}\n          <EmojiRenderer>\n            <div className={style.filename}>\n              <Checkbox\n                className={style.fileTableCheckbox}\n                checked={props.selected}\n                disabled={!!props.file.upload}\n                onChange={(e, { checked }) => props.onSelect(checked)}\n              />\n              <Icon name={getFileIcon(props.file.filename)} />\n              {\"\\u200E\" + props.file.filename}\n            </div>\n          </EmojiRenderer>\n        </Table.Cell>\n        {!isMobile && <Table.Cell textAlign=\"center\">{formatFileSize(props.file.size, 1)}</Table.Cell>}\n        <Table.Cell className={style.fileTableColumnOperations} textAlign=\"center\">\n          {props.file.upload ? (\n            getUploadStatus()\n          ) : (\n            <>\n              <Icon className={style.fileTableOperationIcon} name=\"download\" onClick={() => props.onDownload()} />\n              {props.hasPermission && (\n                <>\n                  <Popup\n                    trigger={\n                      <Icon disabled={props.pending} className={style.fileTableOperationIcon} name=\"pencil alternate\" />\n                    }\n                    disabled={props.pending}\n                    open={renameOpen}\n                    onOpen={() => setRenameOpen(true)}\n                    onClose={() => !props.pending && setRenameOpen(false)}\n                    content={\n                      <Form>\n                        <Form.Input\n                          style={{ width: 230 }}\n                          placeholder={_(\".new_filename\")}\n                          value={newFilename}\n                          onChange={(e, { value }) => setNewFilename(value)}\n                          onKeyPress={onEnterPress(() => onRename())}\n                        />\n                        <Button primary loading={props.pending} onClick={onRename}>\n                          {_(\".rename\")}\n                        </Button>\n                      </Form>\n                    }\n                    on=\"click\"\n                    position=\"top center\"\n                  />\n                  <Popup\n                    trigger={<Icon disabled={props.pending} className={style.fileTableOperationIcon} name=\"delete\" />}\n                    disabled={props.pending}\n                    open={deleteOpen}\n                    onOpen={() => setDeleteOpen(true)}\n                    onClose={() => !props.pending && setDeleteOpen(false)}\n                    content={\n                      <Button negative loading={props.pending} onClick={onDelete}>\n                        {_(\".confirm_delete\")}\n                      </Button>\n                    }\n                    on=\"click\"\n                    position=\"top center\"\n                  />\n                </>\n              )}\n            </>\n          )}\n        </Table.Cell>\n      </Table.Row>\n    </>\n  );\n};\n\nFileTableRow = observer(FileTableRow);\n\ninterface FileTableProps {\n  hasPermission: boolean;\n  color: SemanticCOLORS;\n  files: FileTableItem[];\n  onDownloadFile: (filename: string) => void;\n  onDownloadFilesAsArchive: (filenames: string[]) => void;\n  onRenameFile: (filename: string, newFilename: string) => Promise<void>;\n  onDeleteFiles: (filenames: string[]) => Promise<void>;\n  onUploadFiles: (files: File[]) => void;\n}\n\nlet FileTable: React.FC<FileTableProps> = props => {\n  const _ = useLocalizer(\"problem_files\");\n\n  const [selectedFiles, setSelectedFiles] = useState(new Set<string>());\n\n  const nonUploadingFiles = props.files.filter(file => !file.upload);\n  useEffect(() => {\n    const fileUuids = nonUploadingFiles.map(file => file.uuid);\n    const newSelectedFiles = new Set<string>();\n    for (const fileUuid of selectedFiles) {\n      if (fileUuids.includes(fileUuid)) newSelectedFiles.add(fileUuid);\n    }\n\n    if (!lodashIsEqual(selectedFiles, newSelectedFiles)) setSelectedFiles(newSelectedFiles);\n  }, [props.files]);\n\n  function onSelectAll(checked: boolean) {\n    setSelectedFiles(new Set(checked ? nonUploadingFiles.map(file => file.uuid) : []));\n  }\n\n  function onSelect(fileUuid: string, checked: boolean) {\n    const newSelectedFiles = new Set(selectedFiles);\n    if (checked) newSelectedFiles.add(fileUuid);\n    else newSelectedFiles.delete(fileUuid);\n    setSelectedFiles(newSelectedFiles);\n  }\n\n  const selectedFilesArray = props.files.filter(file => selectedFiles.has(file.uuid));\n\n  const [pendingFiles, setPendingFiles] = useState(new Set<string>());\n  function setPending(fileUuids: string | string[], pending: boolean) {\n    const newPendingFiles = new Set(pendingFiles);\n\n    if (typeof fileUuids === \"string\") fileUuids = [fileUuids];\n\n    for (const fileUuid of fileUuids) {\n      if (pending) newPendingFiles.add(fileUuid);\n      else newPendingFiles.delete(fileUuid);\n    }\n\n    setPendingFiles(newPendingFiles);\n  }\n\n  async function onRename(fileUuid: string, filename: string, newFilename: string) {\n    if (pendingFiles.has(fileUuid)) return;\n    setPending(fileUuid, true);\n    await props.onRenameFile(filename, newFilename);\n    setPending(fileUuid, false);\n  }\n\n  async function onDelete(fileUuids: string[], filenames: string[]) {\n    if (fileUuids.some(fileUuid => pendingFiles.has(fileUuid))) return;\n    setPending(fileUuids, true);\n    await props.onDeleteFiles(filenames);\n    setPending(fileUuids, false);\n  }\n\n  const uploadingCount = props.files.filter(\n    file => file.upload && file.upload.progressType !== \"Error\" && file.upload.progressType !== \"Cancelled\"\n  ).length;\n\n  const [overridingFiles, setOverridingFiles] = useState<string[]>([]);\n  const refDoUpload = useRef<() => void>();\n  async function onUploadButtonClick() {\n    if (uploadingCount) return;\n\n    openUploadDialog(files => {\n      if (files.some(file => !isValidFilename(file.name))) {\n        // This shouldn't happen\n        toast.error(_(\".invalid_filename\"));\n        return;\n      }\n\n      const doUpload = () => props.onUploadFiles(files);\n\n      // Cancelled and Error uploads will not be shown as overriding\n      const currentFilenames = props.files.filter(file => !file.upload).map(file => file.filename);\n      const overriding = files.map(file => file.name).filter(filename => currentFilenames.includes(filename));\n      if (overriding.length > 0) {\n        setOverridingFiles(overriding);\n        refDoUpload.current = doUpload;\n      } else doUpload();\n    });\n  }\n\n  const [refSelectedInfoDropdown, setRefSelectedInfoDropdown] = useState<HTMLElement>(null);\n  const [selectedInfoDropdownOpen, setSelectedInfoDropdownOpen] = useState(false);\n  const [popupDeleteSelectedOpen, setPopupDeleteSelectedOpen] = useState(false);\n  const [deleteSelectedPending, onDeleteSelected] = useAsyncCallbackPending(async () => {\n    await props.onDeleteFiles(selectedFilesArray.map(file => file.filename));\n    setPopupDeleteSelectedOpen(false);\n  });\n\n  const isMobile = useScreenWidthWithin(0, 425 + 1);\n\n  return (\n    <>\n      <Table\n        compact\n        color={props.color}\n        className={style.fileTable + (!props.hasPermission ? \" \" + style.noManagePermission : \"\")}\n        unstackable\n      >\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>\n              <Checkbox\n                className={style.fileTableCheckbox}\n                checked={selectedFiles.size > 0}\n                indeterminate={selectedFiles.size > 0 && selectedFiles.size < nonUploadingFiles.length}\n                disabled={deleteSelectedPending}\n                onChange={(e, { checked }) => onSelectAll(checked)}\n              />\n              {_(\".filename\")}\n            </Table.HeaderCell>\n            {!isMobile && (\n              <Table.HeaderCell className={style.fileTableColumnSize} textAlign=\"center\">\n                {_(\".size\")}\n              </Table.HeaderCell>\n            )}\n            <Table.HeaderCell textAlign=\"center\" className={style.fileTableColumnOperations}>\n              {props.hasPermission ? _(\".operations_and_status\") : _(\".operations\")}\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {props.files.length === 0 ? (\n            <Table.Row>\n              <Table.HeaderCell colSpan={isMobile ? 2 : 3} textAlign=\"center\" className={style.filesTableNoFiles}>\n                <Header>{_(\".no_files\")}</Header>\n              </Table.HeaderCell>\n            </Table.Row>\n          ) : (\n            props.files.map(file => (\n              <FileTableRow\n                key={file.uuid}\n                file={file}\n                hasPermission={props.hasPermission}\n                selected={selectedFiles.has(file.uuid)}\n                pending={pendingFiles.has(file.uuid)}\n                onSelect={checked => onSelect(file.uuid, checked)}\n                onDownload={() => props.onDownloadFile(file.filename)}\n                onRename={newFilename => onRename(file.uuid, file.filename, newFilename)}\n                onDelete={() => onDelete([file.uuid], [file.filename])}\n              />\n            ))\n          )}\n        </Table.Body>\n        <Table.Footer fullWidth>\n          <Table.Row>\n            <Table.HeaderCell colSpan={isMobile ? 2 : 3}>\n              <div className={style.fileTableFooterInfo}>\n                <div className={style.tableFooterText}>\n                  {selectedFilesArray.length > 0 ? (\n                    <Ref innerRef={setRefSelectedInfoDropdown}>\n                      <Dropdown\n                        open={selectedInfoDropdownOpen}\n                        onOpen={() => !popupDeleteSelectedOpen && setSelectedInfoDropdownOpen(true)}\n                        onClose={() => setSelectedInfoDropdownOpen(false)}\n                        pointing\n                        text={_(isMobile ? \".selected_files_count_and_size_narrow\" : \".selected_files_count_and_size\", {\n                          count: selectedFilesArray.length.toString(),\n                          totalSize: formatFileSize(\n                            selectedFilesArray.reduce((sum, file) => sum + file.size, 0),\n                            1\n                          )\n                        })}\n                      >\n                        <Dropdown.Menu className={style.fileTableSelectedFilesDropdownMenu}>\n                          <Dropdown.Item\n                            icon=\"download\"\n                            text={_(\".download_as_archive\")}\n                            onClick={() =>\n                              props.onDownloadFilesAsArchive(selectedFilesArray.map(file => file.filename))\n                            }\n                          />\n                          {props.hasPermission && (\n                            <Popup\n                              trigger={<Dropdown.Item icon=\"delete\" text={_(\".delete\")} />}\n                              open={popupDeleteSelectedOpen}\n                              onOpen={() => setPopupDeleteSelectedOpen(true)}\n                              onClose={() => !deleteSelectedPending && setPopupDeleteSelectedOpen(false)}\n                              context={refSelectedInfoDropdown}\n                              content={\n                                <Button negative loading={deleteSelectedPending} onClick={onDeleteSelected}>\n                                  {_(\".confirm_delete\")}\n                                </Button>\n                              }\n                              on=\"click\"\n                              position=\"top center\"\n                            />\n                          )}\n                        </Dropdown.Menu>\n                      </Dropdown>\n                    </Ref>\n                  ) : uploadingCount ? (\n                    _(\n                      isMobile ? \".files_count_and_size_with_uploading_narrow\" : \".files_count_and_size_with_uploading\",\n                      {\n                        count: props.files.length.toString(),\n                        totalSize: formatFileSize(\n                          props.files.reduce((sum, file) => sum + file.size, 0),\n                          1\n                        ),\n                        uploadingCount: uploadingCount.toString()\n                      }\n                    )\n                  ) : (\n                    _(isMobile ? \".files_count_and_size_narrow\" : \".files_count_and_size\", {\n                      count: props.files.length.toString(),\n                      totalSize: formatFileSize(\n                        props.files.reduce((sum, file) => sum + file.size, 0),\n                        1\n                      )\n                    })\n                  )}\n                </div>\n                {props.hasPermission && (\n                  <Popup\n                    trigger={\n                      <Button\n                        className={style.tableFooterButton}\n                        icon=\"upload\"\n                        content={_(\".upload\")}\n                        labelPosition=\"left\"\n                        primary\n                        size={\"small\"}\n                        loading={uploadingCount !== 0}\n                        onClick={onUploadButtonClick}\n                      />\n                    }\n                    open={overridingFiles.length !== 0}\n                    onClose={() => setOverridingFiles([])}\n                    content={\n                      <>\n                        <p>\n                          <strong>{_(\".confirm_override_question\")}</strong>\n                        </p>\n                        <List>\n                          {overridingFiles.map(filename => (\n                            <EmojiRenderer key={filename}>\n                              <List.Item icon={getFileIcon(filename)} content={filename} />\n                            </EmojiRenderer>\n                          ))}\n                        </List>\n                        <Ref innerRef={button => button && window.requestAnimationFrame(() => button.focus())}>\n                          <Button\n                            onClick={() => {\n                              setOverridingFiles([]);\n                              refDoUpload.current();\n                            }}\n                          >\n                            {_(\".confirm_override\")}\n                          </Button>\n                        </Ref>\n                      </>\n                    }\n                    on=\"click\"\n                    position=\"left center\"\n                  />\n                )}\n              </div>\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Footer>\n      </Table>\n    </>\n  );\n};\n\nFileTable = observer(FileTable);\n\ninterface ProblemFilesPageProps {\n  idType?: \"id\" | \"displayId\";\n  problem?: ApiTypes.GetProblemResponseDto;\n}\n\nlet ProblemFilesPage: React.FC<ProblemFilesPageProps> = props => {\n  const _ = useLocalizer(\"problem_files\");\n\n  const idString = getProblemIdString(props.problem.meta);\n\n  useEffect(() => {\n    appState.enterNewPage(`${_(\".title\")} ${idString}`, \"problem_set\");\n  }, [appState.locale, props.problem]);\n\n  const recaptcha = useRecaptcha();\n\n  function transformResponseToFileTableItems(fileList: ApiTypes.ProblemFileDto[]): FileTableItem[] {\n    return fileList.map(file => ({\n      uuid: uuid(),\n      filename: file.filename,\n      size: file.size\n    }));\n  }\n\n  const [fileListTestData, setFileListTestData] = useState(transformResponseToFileTableItems(props.problem.testData));\n  const [fileListAdditionalFiles, setFileListAdditionalFiles] = useState(\n    transformResponseToFileTableItems(props.problem.additionalFiles)\n  );\n\n  async function onRenameFile(\n    type: \"TestData\" | \"AdditionalFile\",\n    setFileList: typeof setFileListTestData,\n    filename: string,\n    newFilename: string\n  ) {\n    if (!isValidFilename(newFilename)) {\n      toast.error(_(\".invalid_filename\"));\n      return;\n    }\n\n    const { requestError, response } = await api.problem.renameProblemFile({\n      problemId: props.problem.meta.id,\n      type,\n      filename,\n      newFilename\n    });\n    if (requestError) {\n      toast.error(requestError(_));\n      return;\n    }\n\n    if (response.error) {\n      toast.error(_(`.error.${response.error}`));\n      return;\n    }\n\n    // Unpack state object later to prevent from using a dirty value\n    setFileList(fileList =>\n      fileList.map(file =>\n        file.filename !== filename\n          ? file\n          : Object.assign({}, file, {\n              filename: newFilename\n            })\n      )\n    );\n  }\n\n  async function onDeleteFiles(\n    type: \"TestData\" | \"AdditionalFile\",\n    setFileList: typeof setFileListTestData,\n    filenames: string[]\n  ) {\n    const { requestError, response } = await api.problem.removeProblemFiles({\n      problemId: props.problem.meta.id,\n      type,\n      filenames: filenames\n    });\n    if (requestError) {\n      toast.error(requestError(_));\n      return;\n    }\n\n    if (response.error) {\n      toast.error(_(`.error.${response.error}`));\n      return;\n    }\n\n    // Unpack state object later to prevent from using a dirty value\n    setFileList(fileList => fileList.filter(file => !filenames.includes(file.filename)));\n  }\n\n  async function onUploadFiles(\n    type: \"TestData\" | \"AdditionalFile\",\n    fileList: typeof fileListTestData,\n    setFileList: typeof setFileListTestData,\n    files: File[]\n  ) {\n    const uploadingFilenames = files.map(file => file.name);\n    const uploadingFileList: FileTableItem[] = [];\n    for (const file of files) {\n      uploadingFileList.push({\n        uuid: uuid(),\n        filename: file.name,\n        size: file.size,\n        upload: {\n          file: file,\n          progressType: \"Waiting\"\n        }\n      });\n    }\n    const newFileList = fileList.filter(file => !uploadingFilenames.includes(file.filename)).concat(uploadingFileList);\n    setFileList(newFileList);\n\n    function updateFileUploadInfo(fileUuid: string, uploadInfo: Partial<FileUploadInfo>) {\n      setFileList(fileList => {\n        const newFileList = Array.from(fileList);\n        for (const i in newFileList) {\n          if (newFileList[i].uuid === fileUuid) {\n            newFileList[i] = Object.assign({}, fileList[i], {\n              upload: uploadInfo ? Object.assign({}, fileList[i].upload, uploadInfo) : null\n            });\n            return newFileList;\n          }\n        }\n        return fileList;\n      });\n    }\n\n    const uploadTasks: Array<() => Promise<void>> = [];\n    for (const item of uploadingFileList) {\n      uploadTasks.push(async () => {\n        const { uploadCancelled, uploadError, requestError, response } = await callApiWithFileUpload(\n          api.problem.addProblemFile,\n          {\n            problemId: props.problem.meta.id,\n            type,\n            filename: item.filename\n          },\n          () => recaptcha(\"AddProblemFile\"),\n          item.upload.file,\n          progress =>\n            updateFileUploadInfo(item.uuid, {\n              progressType: progress.status,\n              progress: progress.progress * 100\n            }),\n          cancelFunction =>\n            updateFileUploadInfo(item.uuid, {\n              cancel: cancelFunction\n            })\n        );\n\n        if (uploadCancelled) {\n          updateFileUploadInfo(item.uuid, {\n            progressType: \"Cancelled\",\n            cancel: null\n          });\n        } else if (uploadError) {\n          console.log(\"Error uploading file\", uploadError);\n          updateFileUploadInfo(item.uuid, {\n            progressType: \"Error\",\n            error: String(uploadError)\n          });\n        } else if (requestError) {\n          updateFileUploadInfo(item.uuid, {\n            progressType: \"Error\",\n            error: requestError(_)\n          });\n        } else if (response.error) {\n          updateFileUploadInfo(item.uuid, {\n            progressType: \"Error\",\n            error: _(`.error.${response.error}`)\n          });\n        } else updateFileUploadInfo(item.uuid, null);\n      });\n    }\n\n    await pAll(uploadTasks, {\n      concurrency: MAX_UPLOAD_CONCURRENCY\n    });\n  }\n\n  const isWideScreen = useScreenWidthWithin(960, Infinity);\n\n  const fileTableTestdata = (\n    <>\n      <Header\n        className={style.header + \" withIcon\"}\n        icon=\"file alternate\"\n        as=\"h2\"\n        content={\n          <>\n            {_(\".header_testdata\")}\n            <Button\n              className={style.backToProblem}\n              primary\n              as={Link}\n              href={getProblemUrl(props.problem.meta)}\n              content={_(\".back_to_problem\")}\n            />\n          </>\n        }\n      />\n      <FileTable\n        hasPermission={props.problem.permissionOfCurrentUser.includes(\"Modify\")}\n        color=\"green\"\n        files={fileListTestData}\n        onDownloadFile={filename => downloadProblemFile(props.problem.meta.id, \"TestData\", filename, _)}\n        onDownloadFilesAsArchive={filenames =>\n          downloadProblemFilesAsArchive(props.problem.meta.id, `TestData_${idString}.zip`, \"TestData\", filenames, _)\n        }\n        onRenameFile={(filename, newFilename) => onRenameFile(\"TestData\", setFileListTestData, filename, newFilename)}\n        onDeleteFiles={filenames => onDeleteFiles(\"TestData\", setFileListTestData, filenames)}\n        onUploadFiles={files => onUploadFiles(\"TestData\", fileListTestData, setFileListTestData, files)}\n      />\n    </>\n  );\n\n  const fileTableAdditionalFile = (\n    <>\n      <Header\n        className={style.header + \" withIcon\"}\n        icon=\"file alternate outline\"\n        as=\"h2\"\n        content={_(\".header_additional_files\")}\n      />\n      <FileTable\n        hasPermission={props.problem.permissionOfCurrentUser.includes(\"Modify\")}\n        color=\"pink\"\n        files={fileListAdditionalFiles}\n        onDownloadFile={filename => downloadProblemFile(props.problem.meta.id, \"AdditionalFile\", filename, _)}\n        onDownloadFilesAsArchive={filenames =>\n          downloadProblemFilesAsArchive(\n            props.problem.meta.id,\n            `AdditionalFile_${idString}.zip`,\n            \"AdditionalFile\",\n            filenames,\n            _\n          )\n        }\n        onRenameFile={(filename, newFilename) =>\n          onRenameFile(\"AdditionalFile\", setFileListAdditionalFiles, filename, newFilename)\n        }\n        onDeleteFiles={filenames => onDeleteFiles(\"AdditionalFile\", setFileListAdditionalFiles, filenames)}\n        onUploadFiles={files =>\n          onUploadFiles(\"AdditionalFile\", fileListAdditionalFiles, setFileListAdditionalFiles, files)\n        }\n      />\n    </>\n  );\n\n  return (\n    <>\n      <Grid>\n        {isWideScreen ? (\n          <>\n            <Grid.Row>\n              <Grid.Column width={8}>{fileTableTestdata}</Grid.Column>\n              <Grid.Column width={8}>{fileTableAdditionalFile}</Grid.Column>\n            </Grid.Row>\n          </>\n        ) : (\n          <>\n            <Grid.Row>\n              <Grid.Column width={16}>{fileTableTestdata}</Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column width={16}>{fileTableAdditionalFile}</Grid.Column>\n            </Grid.Row>\n          </>\n        )}\n      </Grid>\n    </>\n  );\n};\n\nProblemFilesPage = observer(ProblemFilesPage);\n\nexport default {\n  byId: defineRoute(async request => {\n    const id = parseInt(request.params[\"id\"]);\n    const problem = await fetchData(\"id\", id);\n\n    return <ProblemFilesPage key={uuid()} idType=\"id\" problem={problem} />;\n  }),\n  byDisplayId: defineRoute(async request => {\n    const displayId = parseInt(request.params[\"displayId\"]);\n    const problem = await fetchData(\"displayId\", displayId);\n\n    return <ProblemFilesPage key={uuid()} idType=\"displayId\" problem={problem} />;\n  })\n};\n"],"sourceRoot":""}