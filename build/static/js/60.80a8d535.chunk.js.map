{"version":3,"sources":["../node_modules/object-path/index.js","../node_modules/semantic-ui-react/dist/es/views/Statistic/StatisticGroup.js","../node_modules/semantic-ui-react/dist/es/views/Statistic/StatisticLabel.js","../node_modules/semantic-ui-react/dist/es/views/Statistic/StatisticValue.js","../node_modules/semantic-ui-react/dist/es/views/Statistic/Statistic.js"],"names":["root","factory","module","exports","define","this","toStr","Object","prototype","toString","hasOwnProperty","obj","prop","call","isEmpty","value","isArray","length","i","type","Array","getKey","key","intKey","parseInt","options","hasShallowProperty","objectPath","keys","reduce","proxy","bind","getShallowProperty","set","path","doNotReplace","split","map","currentPath","currentValue","includeInheritedProps","Error","slice","has","j","ensureExists","insert","at","arr","get","splice","empty","isBoolean","isObject","push","apply","arguments","coalesce","paths","defaultValue","len","nextObj","del","mod","create","withInheritedProps","StatisticGroup","props","children","className","color","content","horizontal","inverted","items","size","widths","classes","cx","useKeyOnly","useWidthProp","rest","getUnhandledProps","ElementType","getElementType","childrenUtils","isNil","React","createElement","_extends","_map","item","Statistic","handledProps","propTypes","StatisticLabel","createShorthandFactory","StatisticValue","text","floated","label","useValueAndKey","defaultProps","autoGenerateKey","Group","Label","Value"],"mappings":"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","file":"static/js/60.80a8d535.chunk.js","sourcesContent":["(function (root, factory){\n  'use strict';\n\n  /*istanbul ignore next:cant test*/\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else {\n    // Browser globals\n    root.objectPath = factory();\n  }\n})(this, function(){\n  'use strict';\n\n  var toStr = Object.prototype.toString;\n  function hasOwnProperty(obj, prop) {\n    if(obj == null) {\n      return false\n    }\n    //to handle objects with null prototypes (too edge case?)\n    return Object.prototype.hasOwnProperty.call(obj, prop)\n  }\n\n  function isEmpty(value){\n    if (!value) {\n      return true;\n    }\n    if (isArray(value) && value.length === 0) {\n        return true;\n    } else if (typeof value !== 'string') {\n        for (var i in value) {\n            if (hasOwnProperty(value, i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n  }\n\n  function toString(type){\n    return toStr.call(type);\n  }\n\n  function isObject(obj){\n    return typeof obj === 'object' && toString(obj) === \"[object Object]\";\n  }\n\n  var isArray = Array.isArray || function(obj){\n    /*istanbul ignore next:cant test*/\n    return toStr.call(obj) === '[object Array]';\n  }\n\n  function isBoolean(obj){\n    return typeof obj === 'boolean' || toString(obj) === '[object Boolean]';\n  }\n\n  function getKey(key){\n    var intKey = parseInt(key);\n    if (intKey.toString() === key) {\n      return intKey;\n    }\n    return key;\n  }\n\n  function factory(options) {\n    options = options || {}\n\n    var objectPath = function(obj) {\n      return Object.keys(objectPath).reduce(function(proxy, prop) {\n        if(prop === 'create') {\n          return proxy;\n        }\n\n        /*istanbul ignore else*/\n        if (typeof objectPath[prop] === 'function') {\n          proxy[prop] = objectPath[prop].bind(objectPath, obj);\n        }\n\n        return proxy;\n      }, {});\n    };\n\n    var hasShallowProperty\n    if (options.includeInheritedProps) {\n      hasShallowProperty = function () {\n        return true\n      }\n    } else {\n      hasShallowProperty = function (obj, prop) {\n        return (typeof prop === 'number' && Array.isArray(obj)) || hasOwnProperty(obj, prop)\n      }\n    }\n\n    function getShallowProperty(obj, prop) {\n      if (hasShallowProperty(obj, prop)) {\n        return obj[prop];\n      }\n    }\n\n    function set(obj, path, value, doNotReplace){\n      if (typeof path === 'number') {\n        path = [path];\n      }\n      if (!path || path.length === 0) {\n        return obj;\n      }\n      if (typeof path === 'string') {\n        return set(obj, path.split('.').map(getKey), value, doNotReplace);\n      }\n      var currentPath = path[0];\n      var currentValue = getShallowProperty(obj, currentPath);\n      if (options.includeInheritedProps && (currentPath === '__proto__' ||\n        (currentPath === 'constructor' && typeof currentValue === 'function'))) {\n        throw new Error('For security reasons, object\\'s magic properties cannot be set')\n      }\n      if (path.length === 1) {\n        if (currentValue === void 0 || !doNotReplace) {\n          obj[currentPath] = value;\n        }\n        return currentValue;\n      }\n\n      if (currentValue === void 0) {\n        //check if we assume an array\n        if(typeof path[1] === 'number') {\n          obj[currentPath] = [];\n        } else {\n          obj[currentPath] = {};\n        }\n      }\n\n      return set(obj[currentPath], path.slice(1), value, doNotReplace);\n    }\n\n    objectPath.has = function (obj, path) {\n      if (typeof path === 'number') {\n        path = [path];\n      } else if (typeof path === 'string') {\n        path = path.split('.');\n      }\n\n      if (!path || path.length === 0) {\n        return !!obj;\n      }\n\n      for (var i = 0; i < path.length; i++) {\n        var j = getKey(path[i]);\n\n        if((typeof j === 'number' && isArray(obj) && j < obj.length) ||\n          (options.includeInheritedProps ? (j in Object(obj)) : hasOwnProperty(obj, j))) {\n          obj = obj[j];\n        } else {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    objectPath.ensureExists = function (obj, path, value){\n      return set(obj, path, value, true);\n    };\n\n    objectPath.set = function (obj, path, value, doNotReplace){\n      return set(obj, path, value, doNotReplace);\n    };\n\n    objectPath.insert = function (obj, path, value, at){\n      var arr = objectPath.get(obj, path);\n      at = ~~at;\n      if (!isArray(arr)) {\n        arr = [];\n        objectPath.set(obj, path, arr);\n      }\n      arr.splice(at, 0, value);\n    };\n\n    objectPath.empty = function(obj, path) {\n      if (isEmpty(path)) {\n        return void 0;\n      }\n      if (obj == null) {\n        return void 0;\n      }\n\n      var value, i;\n      if (!(value = objectPath.get(obj, path))) {\n        return void 0;\n      }\n\n      if (typeof value === 'string') {\n        return objectPath.set(obj, path, '');\n      } else if (isBoolean(value)) {\n        return objectPath.set(obj, path, false);\n      } else if (typeof value === 'number') {\n        return objectPath.set(obj, path, 0);\n      } else if (isArray(value)) {\n        value.length = 0;\n      } else if (isObject(value)) {\n        for (i in value) {\n          if (hasShallowProperty(value, i)) {\n            delete value[i];\n          }\n        }\n      } else {\n        return objectPath.set(obj, path, null);\n      }\n    };\n\n    objectPath.push = function (obj, path /*, values */){\n      var arr = objectPath.get(obj, path);\n      if (!isArray(arr)) {\n        arr = [];\n        objectPath.set(obj, path, arr);\n      }\n\n      arr.push.apply(arr, Array.prototype.slice.call(arguments, 2));\n    };\n\n    objectPath.coalesce = function (obj, paths, defaultValue) {\n      var value;\n\n      for (var i = 0, len = paths.length; i < len; i++) {\n        if ((value = objectPath.get(obj, paths[i])) !== void 0) {\n          return value;\n        }\n      }\n\n      return defaultValue;\n    };\n\n    objectPath.get = function (obj, path, defaultValue){\n      if (typeof path === 'number') {\n        path = [path];\n      }\n      if (!path || path.length === 0) {\n        return obj;\n      }\n      if (obj == null) {\n        return defaultValue;\n      }\n      if (typeof path === 'string') {\n        return objectPath.get(obj, path.split('.'), defaultValue);\n      }\n\n      var currentPath = getKey(path[0]);\n      var nextObj = getShallowProperty(obj, currentPath)\n      if (nextObj === void 0) {\n        return defaultValue;\n      }\n\n      if (path.length === 1) {\n        return nextObj;\n      }\n\n      return objectPath.get(obj[currentPath], path.slice(1), defaultValue);\n    };\n\n    objectPath.del = function del(obj, path) {\n      if (typeof path === 'number') {\n        path = [path];\n      }\n\n      if (obj == null) {\n        return obj;\n      }\n\n      if (isEmpty(path)) {\n        return obj;\n      }\n      if(typeof path === 'string') {\n        return objectPath.del(obj, path.split('.'));\n      }\n\n      var currentPath = getKey(path[0]);\n      if (!hasShallowProperty(obj, currentPath)) {\n        return obj;\n      }\n\n      if(path.length === 1) {\n        if (isArray(obj)) {\n          obj.splice(currentPath, 1);\n        } else {\n          delete obj[currentPath];\n        }\n      } else {\n        return objectPath.del(obj[currentPath], path.slice(1));\n      }\n\n      return obj;\n    }\n\n    return objectPath;\n  }\n\n  var mod = factory();\n  mod.create = factory;\n  mod.withInheritedProps = factory({includeInheritedProps: true})\n  return mod;\n});\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useWidthProp } from '../../lib';\nimport Statistic from './Statistic';\n/**\n * A group of statistics.\n */\n\nfunction StatisticGroup(props) {\n  var children = props.children,\n      className = props.className,\n      color = props.color,\n      content = props.content,\n      horizontal = props.horizontal,\n      inverted = props.inverted,\n      items = props.items,\n      size = props.size,\n      widths = props.widths;\n  var classes = cx('ui', color, size, useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useWidthProp(widths), 'statistics', className);\n  var rest = getUnhandledProps(StatisticGroup, props);\n  var ElementType = getElementType(StatisticGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(items, function (item) {\n    return Statistic.create(item);\n  }));\n}\n\nStatisticGroup.handledProps = [\"as\", \"children\", \"className\", \"color\", \"content\", \"horizontal\", \"inverted\", \"items\", \"size\", \"widths\"];\nStatisticGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A statistic group can be formatted to be different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A statistic group can present its measurement horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** A statistic group can be formatted to fit on a dark background. */\n  inverted: PropTypes.bool,\n\n  /** Array of props for Statistic. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A statistic group can vary in size. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'big', 'massive', 'medium')),\n\n  /** A statistic group can have its items divided evenly. */\n  widths: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nexport default StatisticGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A statistic can contain a label to help provide context for the presented value.\n */\n\nfunction StatisticLabel(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('label', className);\n  var rest = getUnhandledProps(StatisticLabel, props);\n  var ElementType = getElementType(StatisticLabel, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nStatisticLabel.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nStatisticLabel.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nStatisticLabel.create = createShorthandFactory(StatisticLabel, function (content) {\n  return {\n    content: content\n  };\n});\nexport default StatisticLabel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A statistic can contain a numeric, icon, image, or text value.\n */\n\nfunction StatisticValue(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      text = props.text;\n  var classes = cx(useKeyOnly(text, 'text'), 'value', className);\n  var rest = getUnhandledProps(StatisticValue, props);\n  var ElementType = getElementType(StatisticValue, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nStatisticValue.handledProps = [\"as\", \"children\", \"className\", \"content\", \"text\"];\nStatisticValue.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Format the value with smaller font size to fit nicely beside number values. */\n  text: PropTypes.bool\n} : {};\nStatisticValue.create = createShorthandFactory(StatisticValue, function (content) {\n  return {\n    content: content\n  };\n});\nexport default StatisticValue;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useValueAndKey } from '../../lib';\nimport StatisticGroup from './StatisticGroup';\nimport StatisticLabel from './StatisticLabel';\nimport StatisticValue from './StatisticValue';\n/**\n * A statistic emphasizes the current value of an attribute.\n */\n\nfunction Statistic(props) {\n  var children = props.children,\n      className = props.className,\n      color = props.color,\n      content = props.content,\n      floated = props.floated,\n      horizontal = props.horizontal,\n      inverted = props.inverted,\n      label = props.label,\n      size = props.size,\n      text = props.text,\n      value = props.value;\n  var classes = cx('ui', color, size, useValueAndKey(floated, 'floated'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), 'statistic', className);\n  var rest = getUnhandledProps(Statistic, props);\n  var ElementType = getElementType(Statistic, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), StatisticValue.create(value, {\n    defaultProps: {\n      text: text\n    },\n    autoGenerateKey: false\n  }), StatisticLabel.create(label, {\n    autoGenerateKey: false\n  }));\n}\n\nStatistic.handledProps = [\"as\", \"children\", \"className\", \"color\", \"content\", \"floated\", \"horizontal\", \"inverted\", \"label\", \"size\", \"text\", \"value\"];\nStatistic.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A statistic can be formatted to be different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A statistic can sit to the left or right of other content. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A statistic can present its measurement horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** A statistic can be formatted to fit on a dark background. */\n  inverted: PropTypes.bool,\n\n  /** Label content of the Statistic. */\n  label: customPropTypes.contentShorthand,\n\n  /** A statistic can vary in size. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'big', 'massive', 'medium')),\n\n  /** Format the StatisticValue with smaller font size to fit nicely beside number values. */\n  text: PropTypes.bool,\n\n  /** Value content of the Statistic. */\n  value: customPropTypes.contentShorthand\n} : {};\nStatistic.Group = StatisticGroup;\nStatistic.Label = StatisticLabel;\nStatistic.Value = StatisticValue;\nStatistic.create = createShorthandFactory(Statistic, function (content) {\n  return {\n    content: content\n  };\n});\nexport default Statistic;"],"sourceRoot":""}