{"version":3,"sources":["pages/user/user/UserPage.tsx"],"names":["getTimeZone","Intl","DateTimeFormat","resolvedOptions","timeZone","fetchData","query","a","now","Date","api","user","getUserDetail","timezone","toISOString","requestError","response","RouteError","showRefresh","showBack","error","makeToBeLocalizedText","SubwayGraph","props","_","useLocalizer","dayjs","startOf","weekStart","Number","omittedBlockCount","day","data","slice","length","weeks","dataOfWeek","Array","keys","map","i","startDate","subtract","startDateOfWeek","add","monthOfWeek","date","month","className","style","subwayGraphSegment","graphWrapper","graph","label","weekData","dayData","j","data-level","count","Infinity","findIndex","x","trigger","content","subwayGraphPopup","submissions","toString","formatDate","toDate","size","inverted","on","position","footer","link","href","pathname","submitter","username","name","legend","UserPage","useEffect","appState","enterNewPage","meta","locale","isMobile","useScreenWidthWithin","avatar","userAvatar","imageSize","nickname","as","bio","serverPreference","misc","renderMarkdownInUserBio","dontUseContentFont","card","Column","cardSide","cardSideAvatar","width","cardSideMeta","hasPrivilege","editProfileButton","fluid","Link","informationList","Item","item","iconWrapper","title","fixChineseSpace","registrationTime","year","information","organization","location","url","target","rel","socialIcons","email","socialIcon","qq","telegram","github","statisticsItems","key","value","acceptedProblemCount","rating","rank","contents","submissionCountPerDay","attached","firstStatisticsSegment","statictics","ratingSegment","placeholder","observer","byId","defineRoute","request","userId","parseInt","params","byUsername","isValidUsername"],"mappings":"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","file":"static/js/173.a3747d5a.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Grid, Header, Button, List, Icon, Segment, Popup, Divider } from \"semantic-ui-react\";\nimport { observer } from \"mobx-react\";\nimport dayjs from \"dayjs\";\n\nimport style from \"./UserPage.module.less\";\n\nimport { appState } from \"@/appState\";\nimport api from \"@/api\";\nimport { useLocalizer, useScreenWidthWithin, Link } from \"@/utils/hooks\";\nimport fixChineseSpace from \"@/utils/fixChineseSpace\";\nimport UserAvatar from \"@/components/UserAvatar\";\nimport { defineRoute, RouteError } from \"@/AppRouter\";\nimport { isValidUsername } from \"@/utils/validators\";\nimport { makeToBeLocalizedText } from \"@/locales\";\nimport { EmojiRenderer } from \"@/components/EmojiRenderer\";\nimport MarkdownContent from \"@/markdown/MarkdownContent\";\n\nfunction getTimeZone() {\n  try {\n    return Intl.DateTimeFormat().resolvedOptions().timeZone || \"\";\n  } catch {\n    return \"\";\n  }\n}\n\nasync function fetchData(query: { userId?: number; username?: string }): Promise<[Date, Required<typeof response>]> {\n  const now = new Date();\n  const { requestError, response } = await api.user.getUserDetail({\n    ...query,\n    timezone: getTimeZone(),\n    now: now.toISOString()\n  });\n\n  if (requestError) throw new RouteError(requestError, { showRefresh: true, showBack: true });\n  else if (response.error) throw new RouteError(makeToBeLocalizedText(`user.error.${response.error}`));\n\n  return [now, response as Required<typeof response>];\n}\n\ninterface SubwayGraphProps {\n  username: string;\n  now: Date;\n  data: number[];\n}\n\nconst SubwayGraph: React.FC<SubwayGraphProps> = props => {\n  const _ = useLocalizer(\"user\");\n\n  const now = dayjs(props.now).startOf(\"day\");\n\n  const weeks = 53;\n\n  // A week starts from Monday\n  const weekStart = Number(_(\".subway_graph.start_of_week\")) || 1;\n\n  // If the last column is NOT a full week, the later at most 6 days' blocks will be omitted\n  const omittedBlockCount = (((7 - (now.day() - weekStart + 1)) % 7) + 7) % 7;\n\n  // The earliest x days' data is discarded\n  const data = props.data.slice(props.data.length - (weeks * 7 - omittedBlockCount));\n\n  const dataOfWeek = [...new Array(weeks).keys()].map(i => data.slice(i * 7, (i + 1) * 7));\n\n  const startDate = now.subtract(weeks * 7 - omittedBlockCount - 1, \"day\");\n  const startDateOfWeek = [...new Array(weeks).keys()].map(i => startDate.add(i * 7, \"day\"));\n\n  // The month label for each week is the month of the first day of the week\n  const monthOfWeek = startDateOfWeek.map(date => date.month() + 1);\n\n  const getLevel = (count: number) => [1, 10, 20, 25, Infinity].findIndex(x => count < x);\n\n  return (\n    <Segment className={style.subwayGraphSegment}>\n      <div className={style.graphWrapper}>\n        <div className={style.graph}>\n          <div className={style.weeks}>\n            <div />\n            {[...new Array(7).keys()].map(i => (\n              <div key={i} className={style.label}>\n                {_(`.subway_graph.week.${(i + weekStart) % 7 || 7}`)}\n              </div>\n            ))}\n          </div>\n          {dataOfWeek.map((weekData, i) => (\n            <div key={i}>\n              <div className={style.label}>\n                {\n                  // If the first month has too less weeks (less than 3), omit its month label\n                  // since the space is not enough\n                  (i === 0 ? monthOfWeek[2] == monthOfWeek[0] : monthOfWeek[i] != monthOfWeek[i - 1]) &&\n                    _(`.subway_graph.month.${monthOfWeek[i]}`)\n                }\n              </div>\n              {weekData.map((dayData, j) => (\n                <div key={j} data-level={getLevel(dayData)}>\n                  <Popup\n                    trigger={<div />}\n                    content={\n                      <span className={style.subwayGraphPopup}>\n                        <span className={style.submissions}>\n                          {dayData\n                            ? _(dayData === 1 ? \".subway_graph.popup.submission\" : \".subway_graph.popup.submissions\", {\n                                count: dayData.toString()\n                              })\n                            : _(\".subway_graph.popup.no_submissions\")}\n                        </span>\n                        <span className={style.date}>{_.formatDate(startDateOfWeek[i].add(j, \"day\").toDate())}</span>\n                      </span>\n                    }\n                    size=\"small\"\n                    inverted\n                    on=\"hover\"\n                    position=\"top center\"\n                  />\n                </div>\n              ))}\n            </div>\n          ))}\n        </div>\n        <div className={style.footer}>\n          <Link\n            className={style.link}\n            href={{\n              pathname: \"/s\",\n              query: {\n                submitter: props.username\n              }\n            }}\n          >\n            <Icon name=\"search\" />\n            {_(\".subway_graph.link\")}\n          </Link>\n          <div className={style.legend}>\n            <span>{_(\".subway_graph.legend.less\")}</span>\n            <div data-level=\"0\">\n              <div />\n            </div>\n            <div data-level=\"1\">\n              <div />\n            </div>\n            <div data-level=\"2\">\n              <div />\n            </div>\n            <div data-level=\"3\">\n              <div />\n            </div>\n            <div data-level=\"4\">\n              <div />\n            </div>\n            <span>{_(\".subway_graph.legend.more\")}</span>\n          </div>\n        </div>\n      </div>\n    </Segment>\n  );\n};\n\ntype UserPageProps = ApiTypes.GetUserDetailResponseDto & {\n  now: Date;\n};\n\nlet UserPage: React.FC<UserPageProps> = props => {\n  const _ = useLocalizer(\"user\");\n\n  useEffect(() => {\n    appState.enterNewPage(`${props.meta.username}`, \"members\");\n  }, [appState.locale, props.meta]);\n\n  const isMobile = useScreenWidthWithin(0, 768);\n\n  const avatar = (\n    <div className={style.avatar}>\n      <div>\n        <UserAvatar userAvatar={props.meta.avatar} imageSize={260} />\n      </div>\n    </div>\n  );\n  const meta = (\n    <>\n      {props.meta.nickname ? (\n        <EmojiRenderer>\n          <Header as=\"h1\" className={style.nickname} content={props.meta.nickname} />\n        </EmojiRenderer>\n      ) : null}\n      <div className={style.username}>{props.meta.username}</div>\n      {props.meta.bio && (\n        <EmojiRenderer>\n          <p className={style.bio}>\n            {appState.serverPreference.misc.renderMarkdownInUserBio ? (\n              <MarkdownContent content={props.meta.bio} dontUseContentFont />\n            ) : (\n              props.meta.bio\n            )}\n          </p>\n        </EmojiRenderer>\n      )}\n    </>\n  );\n\n  const card = (\n    <>\n      {!isMobile ? (\n        <>\n          {avatar}\n          {meta}\n        </>\n      ) : (\n        <Grid>\n          <Grid.Column className={style.cardSide + \" \" + style.cardSideAvatar} width={5}>\n            {avatar}\n          </Grid.Column>\n          <Grid.Column className={style.cardSide + \" \" + style.cardSideMeta} width={11}>\n            <div>{meta}</div>\n          </Grid.Column>\n        </Grid>\n      )}\n      {props.hasPrivilege ? (\n        <Button className={style.editProfileButton} fluid content={_(\".edit_profile\")} as={Link} href=\"edit/profile\" />\n      ) : (\n        !isMobile && <Divider className={style.editProfileButton} />\n      )}\n      <List className={style.informationList}>\n        <List.Item className={style.item}>\n          <div className={style.iconWrapper}>\n            <Icon name=\"time\" />\n          </div>\n          <span title={\"\"}>\n            {_(\".joined\")}\n            {fixChineseSpace(\n              _.formatDate(props.meta.registrationTime, { year: \"numeric\", month: \"long\", day: \"numeric\" })\n            )}\n          </span>\n        </List.Item>\n        {props.information.organization && (\n          <List.Item className={style.item}>\n            <div className={style.iconWrapper}>\n              <Icon name=\"users\" />\n            </div>\n            <span title={props.information.organization}>{props.information.organization}</span>\n          </List.Item>\n        )}\n        {props.information.location && (\n          <List.Item className={style.item}>\n            <div className={style.iconWrapper}>\n              <Icon name=\"map marker alternate\" />\n            </div>\n            <span title={props.information.location}>{props.information.location}</span>\n          </List.Item>\n        )}\n        {props.information.url && (\n          <List.Item className={style.item}>\n            <div className={style.iconWrapper}>\n              <Icon name=\"linkify\" />\n            </div>\n            <a href={props.information.url} title={props.information.url} target=\"_blank\" rel=\"noreferrer noopener\">\n              {props.information.url}\n            </a>\n          </List.Item>\n        )}\n      </List>\n      <div className={style.socialIcons}>\n        {props.meta.email && (\n          <a\n            className={style.socialIcon}\n            href={`mailto:${props.meta.email}`}\n            title={_(\".social.email\")}\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            <Icon name=\"mail\" />\n          </a>\n        )}\n        {props.information.qq && (\n          <a\n            className={style.socialIcon}\n            href={`https://wpa.qq.com/msgrd?V=3&Uin=${props.information.qq}`}\n            title={_(\".social.qq\")}\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            <Icon name=\"qq\" />\n          </a>\n        )}\n        {props.information.telegram && (\n          <a\n            className={style.socialIcon}\n            href={`https://t.me/${props.information.telegram}`}\n            title={_(\".social.telegram\")}\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            <Icon name=\"telegram\" />\n          </a>\n        )}\n        {props.information.github && (\n          <a\n            className={style.socialIcon}\n            href={`https://github.com/${props.information.github}`}\n            title={_(\".social.github\")}\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            <Icon name=\"github\" />\n          </a>\n        )}\n      </div>\n    </>\n  );\n\n  const statisticsItems = [\n    <div className={style.item}>\n      <div className={style.iconWrapper}>\n        <Icon name=\"checkmark\" />\n      </div>\n      <span className={style.key}>{_(\".statictics.ac_count\")}</span>\n      <span className={style.value}>{props.meta.acceptedProblemCount}</span>\n    </div>,\n    <div className={style.item}>\n      <div className={style.iconWrapper}>\n        <Icon name=\"calendar\" />\n      </div>\n      <span className={style.key}>{_(\".statictics.contest_take_part_count\")}</span>\n      <span className={style.value}>{0}</span>\n    </div>,\n    <div className={style.item}>\n      <div className={style.iconWrapper}>\n        <Icon name=\"star\" />\n      </div>\n      <span className={style.key}>{_(\".statictics.rating\")}</span>\n      <span className={style.value}>{props.meta.rating}</span>\n    </div>,\n    <div className={style.item}>\n      <div className={style.iconWrapper}>\n        <Icon name=\"signal\" />\n      </div>\n      <span className={style.key}>{_(\".statictics.rank\")}</span>\n      <span className={style.value}>{props.rank}</span>\n    </div>\n  ];\n  const contents = (\n    <>\n      {!isMobile && <SubwayGraph username={props.meta.username} now={props.now} data={props.submissionCountPerDay} />}\n      {!isMobile ? (\n        <Segment attached=\"top\">\n          <div className={style.statictics}>\n            {statisticsItems[0]}\n            {statisticsItems[1]}\n            {statisticsItems[2]}\n            {statisticsItems[3]}\n          </div>\n        </Segment>\n      ) : (\n        <>\n          <Segment attached=\"top\" className={style.firstStatisticsSegment}>\n            <div className={style.statictics}>\n              {statisticsItems[0]}\n              {statisticsItems[1]}\n            </div>\n          </Segment>\n          <Segment attached>\n            <div className={style.statictics}>\n              {statisticsItems[2]}\n              {statisticsItems[3]}\n            </div>\n          </Segment>\n        </>\n      )}\n      <Segment className={style.ratingSegment} attached=\"bottom\">\n        <Segment placeholder className={style.placeholder}>\n          Rating Graph\n        </Segment>\n      </Segment>\n    </>\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <>\n          {card}\n          {contents}\n        </>\n      ) : (\n        <Grid>\n          <Grid.Column width={4}>{card}</Grid.Column>\n          <Grid.Column width={12}>{contents}</Grid.Column>\n        </Grid>\n      )}\n    </>\n  );\n};\n\nUserPage = observer(UserPage);\n\nexport default {\n  byId: defineRoute(async request => {\n    const userId = parseInt(request.params.userId) || 0;\n    const [now, response] = await fetchData({ userId });\n\n    return <UserPage now={now} {...response} />;\n  }),\n  byUsername: defineRoute(async request => {\n    const username = request.params.username;\n    if (!isValidUsername(username)) throw new RouteError(makeToBeLocalizedText(\"user.error.NO_SUCH_USER\"));\n    const [now, response] = await fetchData({ username });\n\n    return <UserPage now={now} {...response} />;\n  })\n};\n"],"sourceRoot":""}