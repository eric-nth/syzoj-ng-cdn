{"version":3,"sources":["pages/user/index.ts"],"names":["redirectToUsernameRoute","defineRoute","request","a","userId","Number","params","RouteError","makeToBeLocalizedText","api","user","getUserMeta","requestError","response","showRefresh","showBack","error","splitted","originalUrl","split","meta","username","redirect","join","groups","lazy","mount","legacyRoutes","edit","u","getRoute"],"mappings":"4MAOMA,EAA0BC,YAAW,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,yDACpCC,EAASC,OAAOH,EAAQI,OAAOF,QADK,sBAEvB,IAAIG,IAAWC,YAAsB,kCAFd,uBAIDC,IAAIC,KAAKC,YAAY,CAC5DP,WALwC,mBAIlCQ,EAJkC,EAIlCA,aAAcC,EAJoB,EAIpBA,UAGlBD,EAPsC,uBAOlB,IAAIL,IAAWK,EAAc,CAAEE,aAAa,EAAMC,UAAU,IAP1C,YAQjCF,EAASG,MARwB,uBAQX,IAAIT,IAAWC,YAAsB,oBAAD,OAAqBK,EAASG,SARvD,eAepCC,EAAWf,EAAQgB,YAAYC,MAAM,MAClC,GAAK,IACdF,EAAS,GAAKJ,EAASO,KAAKC,SAjBc,kBAkBnCC,YAASL,EAASM,KAAK,OAlBY,4CAAD,uDAqB5B,WACbC,OAAQC,aAAK,kBAAM,oNACnBf,KAAMgB,YAAM,CACV,WAAYA,YAAM,2BACbC,YAAa,CACdC,KAAMN,aAAS,SAAApB,GAAO,sBAAaA,EAAQI,OAAOF,OAA5B,uBAFT,IAIf,cAAeJ,EACf,IAAKA,OAGT6B,EAAGH,YAAM,CACP,aAAcI,aAAS,kBAAM,wNAA2B,cACxD,wBAAyBL,aAAK,kBAAM,mFACpC,IAAKA,aAAK,kBAAM","file":"static/js/83.164d57d5.chunk.js","sourcesContent":["import { mount, lazy, redirect } from \"navi\";\n\nimport { defineRoute, legacyRoutes, RouteError } from \"@/AppRouter\";\nimport getRoute from \"@/utils/getRoute\";\nimport { makeToBeLocalizedText } from \"@/locales\";\nimport api from \"@/api\";\n\nconst redirectToUsernameRoute = defineRoute(async request => {\n  const userId = Number(request.params.userId);\n  if (!userId) throw new RouteError(makeToBeLocalizedText(`user_edit.errors.NO_SUCH_USER`));\n\n  const { requestError, response } = await api.user.getUserMeta({\n    userId\n  });\n  if (requestError) throw new RouteError(requestError, { showRefresh: true, showBack: true });\n  else if (response.error) throw new RouteError(makeToBeLocalizedText(`user_edit.errors.${response.error}`));\n\n  // /user/:userId/edit/profile\n  // [\"\", \"user\", \":userId\", \"edit\", \"profile\"]\n  // =>\n  // /u/:username/edit/profile\n  // [\"\", \"u\", \":username\", \"edit\", \"profile\"]\n  const splitted = request.originalUrl.split(\"/\");\n  splitted[1] = \"u\";\n  splitted[2] = response.meta.username;\n  return redirect(splitted.join(\"/\"));\n});\n\nexport default {\n  groups: lazy(() => import(\"./groups/GroupsPage\")),\n  user: mount({\n    \"/:userId\": mount({\n      ...legacyRoutes({\n        edit: redirect(request => `/user/${request.params.userId}/edit/profile`)\n      }),\n      \"/edit/:type\": redirectToUsernameRoute,\n      \"/\": redirectToUsernameRoute\n    })\n  }),\n  u: mount({\n    \"/:username\": getRoute(() => import(\"./user/UserPage\"), \"byUsername\"),\n    \"/:username/edit/:type\": lazy(() => import(\"./edit/UserEditPage\")),\n    \"/\": lazy(() => import(\"./users/UsersPage\"))\n  })\n};\n"],"sourceRoot":""}