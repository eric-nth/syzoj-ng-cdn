{"version":3,"sources":["../node_modules/string-replace-to-array/string-replace-to-array.js","../node_modules/lodash.isstring/index.js","../node_modules/lodash.flatten/index.js","../node_modules/semantic-ui-react/dist/es/views/Comment/CommentAction.js","../node_modules/semantic-ui-react/dist/es/views/Comment/CommentActions.js","../node_modules/semantic-ui-react/dist/es/views/Comment/CommentAuthor.js","../node_modules/semantic-ui-react/dist/es/views/Comment/CommentAvatar.js","../node_modules/semantic-ui-react/dist/es/views/Comment/CommentContent.js","../node_modules/semantic-ui-react/dist/es/views/Comment/CommentGroup.js","../node_modules/semantic-ui-react/dist/es/views/Comment/CommentMetadata.js","../node_modules/semantic-ui-react/dist/es/views/Comment/CommentText.js","../node_modules/semantic-ui-react/dist/es/views/Comment/Comment.js"],"names":["invariant","require","isString","flatten","replace","string","regexpOrSubstr","newValueOrFn","RegExp","replaceUsingString","replaceUsingRegexp","patternString","index","indexOf","arr","endIndex","length","push","substring","regexp","result","output","replacerIsFn","storedLastIndex","lastIndex","exec","out","apply","this","concat","input","global","module","exports","newSubStrOrFn","Array","isArray","map","TypeError","objectToString","Object","prototype","toString","value","isObjectLike","call","MAX_SAFE_INTEGER","argsTag","funcTag","genTag","freeGlobal","freeSelf","self","root","Function","arrayPush","array","values","offset","objectProto","hasOwnProperty","Symbol","propertyIsEnumerable","spreadableSymbol","isConcatSpreadable","undefined","baseFlatten","depth","predicate","isStrict","isFlattenable","isLength","tag","type","isObject","isFunction","isArrayLike","isArrayLikeObject","isArguments","CommentAction","props","active","className","children","content","classes","cx","useKeyOnly","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","childrenUtils","isNil","handledProps","defaultProps","as","propTypes","CommentActions","CommentAuthor","CommentAvatar","src","_partitionHTMLProps","partitionHTMLProps","htmlProps","htmlImageProps","imageProps","rootProps","createHTMLImage","autoGenerateKey","CommentContent","CommentGroup","collapsed","minimal","size","threaded","CommentMetadata","CommentText","Comment","Author","Action","Actions","Avatar","Content","Group","Metadata","Text"],"mappings":"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","file":"static/js/121.37bdd705.chunk.js","sourcesContent":["// Inspiration: https://github.com/facebook/react/issues/3386\n\nvar invariant = require('invariant'),\n\tisString = require('lodash.isstring'),\n\tflatten = require('lodash.flatten')\n\nfunction replace (string, regexpOrSubstr, newValueOrFn) {\n\tinvariant(typeof string === 'string', 'First param must be a string')\n\tinvariant(typeof regexpOrSubstr === 'string' || regexpOrSubstr instanceof RegExp, 'Second param must be a string pattern or a regular expression')\n\n\tvar fn = (typeof regexpOrSubstr === 'string') ? replaceUsingString : replaceUsingRegexp\n\n\treturn fn(string, regexpOrSubstr, newValueOrFn)\n}\n\nfunction replaceUsingString (string, patternString, newValueOrFn) {\n\tvar index = string.indexOf(patternString)\n\n\tif (index >= 0) {\n\t\tvar arr = []\n\t\tvar endIndex = index + patternString.length\n\n\t\tif (index > 0) {\n\t\t\tarr.push(string.substring(0, index))\n\t\t}\n\n\t\tarr.push(\n\t\t\t(typeof newValueOrFn === 'function') ?\n\t\t\t\tnewValueOrFn(\n\t\t\t\t\tstring.substring(index, endIndex),\n\t\t\t\t\tindex,\n\t\t\t\t\tstring\n\t\t\t\t) :\n\t\t\t\tnewValueOrFn\n\t\t)\n\n\t\tif (endIndex < string.length) {\n\t\t\tarr.push(string.substring(endIndex))\n\t\t}\n\n\t\treturn arr\n\t} else {\n\t\treturn [string]\n\t}\n}\n\nfunction replaceUsingRegexp (string, regexp, newValueOrFn) {\n\tvar output = []\n\n\tvar replacerIsFn = (typeof newValueOrFn === 'function')\n\n\tvar storedLastIndex = regexp.lastIndex\n\tregexp.lastIndex = 0\n\n\tvar result\n\tvar lastIndex = 0\n\twhile (result = regexp.exec(string)) {\n\t\tvar index = result.index\n\n\t\tif (result[0] === '') {\n\t\t\t// When the regexp is an empty string\n\t\t\t// we still want to advance our cursor to the next item.\n\t\t\t// This is the behavior of String.replace.\n\t\t\tregexp.lastIndex++\n\t\t}\n\n\t\tif (index !== lastIndex) {\n\t\t\toutput.push(string.substring(lastIndex, index))\n\t\t}\n\n\t\tvar match = result[0]\n\t\tlastIndex = index + match.length\n\t\t\n\t\tvar out = replacerIsFn ?\n\t\t\tnewValueOrFn.apply(this, result.concat(index, result.input)) :\n\t\t\tnewValueOrFn\n\t\toutput.push(out)\n\n\t\tif (!regexp.global) {\n\t\t\tbreak\n\t\t}\n\t}\n\n\tif (lastIndex < string.length) {\n\t\toutput.push(string.substring(lastIndex))\n\t}\n\n\tregexp.lastIndex = storedLastIndex\n\treturn output\n}\n\nmodule.exports = function stringReplaceToArray (string, regexpOrSubstr, newSubStrOrFn) {\n\tif (isString(string)) {\n\t\treturn replace(string, regexpOrSubstr, newSubStrOrFn)\n\t} else if (!Array.isArray(string) || !string[0]) {\n\t\tthrow new TypeError('First argument must be an array or non-empty string');\n\t} else {\n\t\treturn flatten(string.map(function (string) {\n\t\t\tif (!isString(string)) return string\n\t\t\treturn replace(string, regexpOrSubstr, newSubStrOrFn)\n\t\t}))\n\t}\n}","/**\n * lodash 4.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\nmodule.exports = isString;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array ? array.length : 0;\n  return length ? baseFlatten(array, 1) : [];\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = flatten;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A comment can contain an action.\n */\n\nfunction CommentAction(props) {\n  var active = props.active,\n      className = props.className,\n      children = props.children,\n      content = props.content;\n  var classes = cx(useKeyOnly(active, 'active'), className);\n  var rest = getUnhandledProps(CommentAction, props);\n  var ElementType = getElementType(CommentAction, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCommentAction.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\"];\nCommentAction.defaultProps = {\n  as: 'a'\n};\nCommentAction.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Style as the currently active action. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default CommentAction;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A comment can contain an list of actions a user may perform related to this comment.\n */\n\nfunction CommentActions(props) {\n  var className = props.className,\n      children = props.children,\n      content = props.content;\n  var classes = cx('actions', className);\n  var rest = getUnhandledProps(CommentActions, props);\n  var ElementType = getElementType(CommentActions, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCommentActions.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nCommentActions.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default CommentActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A comment can contain an author.\n */\n\nfunction CommentAuthor(props) {\n  var className = props.className,\n      children = props.children,\n      content = props.content;\n  var classes = cx('author', className);\n  var rest = getUnhandledProps(CommentAuthor, props);\n  var ElementType = getElementType(CommentAuthor, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCommentAuthor.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nCommentAuthor.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default CommentAuthor;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { createHTMLImage, getElementType, getUnhandledProps, htmlImageProps, partitionHTMLProps } from '../../lib';\n/**\n * A comment can contain an image or avatar.\n */\n\nfunction CommentAvatar(props) {\n  var className = props.className,\n      src = props.src;\n  var classes = cx('avatar', className);\n  var rest = getUnhandledProps(CommentAvatar, props);\n\n  var _partitionHTMLProps = partitionHTMLProps(rest, {\n    htmlProps: htmlImageProps\n  }),\n      imageProps = _partitionHTMLProps[0],\n      rootProps = _partitionHTMLProps[1];\n\n  var ElementType = getElementType(CommentAvatar, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rootProps, {\n    className: classes\n  }), createHTMLImage(src, {\n    autoGenerateKey: false,\n    defaultProps: imageProps\n  }));\n}\n\nCommentAvatar.handledProps = [\"as\", \"className\", \"src\"];\nCommentAvatar.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Specifies the URL of the image. */\n  src: PropTypes.string\n} : {};\nexport default CommentAvatar;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A comment can contain content.\n */\n\nfunction CommentContent(props) {\n  var className = props.className,\n      children = props.children,\n      content = props.content;\n  var classes = cx(className, 'content');\n  var rest = getUnhandledProps(CommentContent, props);\n  var ElementType = getElementType(CommentContent, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCommentContent.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nCommentContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default CommentContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\n/**\n * Comments can be grouped.\n */\n\nfunction CommentGroup(props) {\n  var className = props.className,\n      children = props.children,\n      collapsed = props.collapsed,\n      content = props.content,\n      minimal = props.minimal,\n      size = props.size,\n      threaded = props.threaded;\n  var classes = cx('ui', size, useKeyOnly(collapsed, 'collapsed'), useKeyOnly(minimal, 'minimal'), useKeyOnly(threaded, 'threaded'), 'comments', className);\n  var rest = getUnhandledProps(CommentGroup, props);\n  var ElementType = getElementType(CommentGroup, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCommentGroup.handledProps = [\"as\", \"children\", \"className\", \"collapsed\", \"content\", \"minimal\", \"size\", \"threaded\"];\nCommentGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Comments can be collapsed, or hidden from view. */\n  collapsed: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Comments can hide extra information unless a user shows intent to interact with a comment. */\n  minimal: PropTypes.bool,\n\n  /** Comments can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** A comment list can be threaded to showing the relationship between conversations. */\n  threaded: PropTypes.bool\n} : {};\nexport default CommentGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A comment can contain metadata about the comment, an arbitrary amount of metadata may be defined.\n */\n\nfunction CommentMetadata(props) {\n  var className = props.className,\n      children = props.children,\n      content = props.content;\n  var classes = cx('metadata', className);\n  var rest = getUnhandledProps(CommentMetadata, props);\n  var ElementType = getElementType(CommentMetadata, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCommentMetadata.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nCommentMetadata.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default CommentMetadata;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A comment can contain text.\n */\n\nfunction CommentText(props) {\n  var className = props.className,\n      children = props.children,\n      content = props.content;\n  var classes = cx(className, 'text');\n  var rest = getUnhandledProps(CommentText, props);\n  var ElementType = getElementType(CommentText, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCommentText.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nCommentText.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default CommentText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport CommentAction from './CommentAction';\nimport CommentActions from './CommentActions';\nimport CommentAuthor from './CommentAuthor';\nimport CommentAvatar from './CommentAvatar';\nimport CommentContent from './CommentContent';\nimport CommentGroup from './CommentGroup';\nimport CommentMetadata from './CommentMetadata';\nimport CommentText from './CommentText';\n/**\n * A comment displays user feedback to site content.\n */\n\nfunction Comment(props) {\n  var className = props.className,\n      children = props.children,\n      collapsed = props.collapsed,\n      content = props.content;\n  var classes = cx(useKeyOnly(collapsed, 'collapsed'), 'comment', className);\n  var rest = getUnhandledProps(Comment, props);\n  var ElementType = getElementType(Comment, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nComment.handledProps = [\"as\", \"children\", \"className\", \"collapsed\", \"content\"];\nComment.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Comment can be collapsed, or hidden from view. */\n  collapsed: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nComment.Author = CommentAuthor;\nComment.Action = CommentAction;\nComment.Actions = CommentActions;\nComment.Avatar = CommentAvatar;\nComment.Content = CommentContent;\nComment.Group = CommentGroup;\nComment.Metadata = CommentMetadata;\nComment.Text = CommentText;\nexport default Comment;"],"sourceRoot":""}