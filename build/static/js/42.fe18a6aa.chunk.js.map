{"version":3,"sources":["components/UserSearch.tsx"],"names":["UserSearch","props","_","useLocalizer","className","placeholder","noResultsMessage","onGetResultKey","result","id","onSearch","input","a","wildcardStart","startsWith","substr","api","user","searchUser","query","wildcard","requestError","response","toast","error","userMetas","onRenderResult","style","avatar","userAvatar","imageSize","rounded","username","onResultSelect"],"mappings":"+NAmDeA,IAnC6B,SAAAC,GAC1C,IAAMC,EAAIC,YAAa,0BAEvB,OACE,cAAC,IAAD,CACEC,UAAWH,EAAMG,UACjBC,YAAaJ,EAAMI,aAAeH,EAAE,gBACpCI,iBAAkBJ,EAAE,cACpBK,eAAgB,SAAAC,GAAM,OAAIA,EAAOC,IACjCC,SAAQ,uCAAE,WAAMC,GAAN,qBAAAC,EAAA,0DACFC,EAAgBF,EAAMG,WAAW,QACpBH,EAAQA,EAAMI,OAAO,IACnCJ,EAHG,yCAGW,IAHX,uBAKiCK,IAAIC,KAAKC,WAAW,CAC3DC,MAAOR,EACPS,SAAUP,EAAgB,OAAS,QAP7B,mBAKAQ,EALA,EAKAA,aAAcC,EALd,EAKcA,UAKlBD,EAVI,iBAUUE,IAAMC,MAAMH,EAAanB,IAVnC,iDAWIoB,EAASG,WAXb,iCAaD,IAbC,4CAAF,sDAeRC,eAAgB,SAAAlB,GAAM,OACpB,sBAAKJ,UAAWuB,IAAMnB,OAAtB,UACE,cAAC,IAAD,CAAYJ,UAAWuB,IAAMC,OAAQC,WAAYrB,EAAOoB,OAAQE,UAAW,KAAMC,SAAO,IACxF,qBAAK3B,UAAWuB,IAAMK,SAAtB,SAAiCxB,EAAOwB,eAG5CC,eAAgBhC,EAAMgC","file":"static/js/42.fe18a6aa.chunk.js","sourcesContent":["import React from \"react\";\n\nimport style from \"./UserSearch.module.less\";\n\nimport api from \"@/api\";\nimport { useLocalizer } from \"@/utils/hooks\";\nimport toast from \"@/utils/toast\";\nimport UserAvatar from \"./UserAvatar\";\nimport PreviewSearch from \"./PreviewSearch\";\n\ninterface UserSearchProps {\n  className?: string;\n  placeholder?: string;\n  onResultSelect: (user: ApiTypes.UserMetaDto) => void;\n}\n\nlet UserSearch: React.FC<UserSearchProps> = props => {\n  const _ = useLocalizer(\"components.user_search\");\n\n  return (\n    <PreviewSearch\n      className={props.className}\n      placeholder={props.placeholder || _(\".placeholder\")}\n      noResultsMessage={_(\".no_result\")}\n      onGetResultKey={result => result.id}\n      onSearch={async input => {\n        const wildcardStart = input.startsWith(\"*\");\n        if (wildcardStart) input = input.substr(1);\n        if (!input) return [];\n\n        const { requestError, response } = await api.user.searchUser({\n          query: input,\n          wildcard: wildcardStart ? \"Both\" : \"End\"\n        });\n\n        if (requestError) toast.error(requestError(_));\n        else return response.userMetas;\n\n        return [];\n      }}\n      onRenderResult={result => (\n        <div className={style.result}>\n          <UserAvatar className={style.avatar} userAvatar={result.avatar} imageSize={27.5} rounded />\n          <div className={style.username}>{result.username}</div>\n        </div>\n      )}\n      onResultSelect={props.onResultSelect}\n    />\n  );\n};\n\nexport default UserSearch;\n"],"sourceRoot":""}