{"version":3,"sources":["components/StatusText.tsx"],"names":["icons","Pending","ConfigurationError","SystemError","CompilationError","Canceled","FileError","RuntimeError","TimeLimitExceeded","MemoryLimitExceeded","OutputLimitExceeded","PartiallyCorrect","WrongAnswer","Accepted","JudgementFailed","Waiting","Preparing","Compiling","Running","Skipped","StatusIcon","props","className","style","status","icon","noMarginRight","loading","name","StatusText","text","statusText","replace","trimStart"],"mappings":"oMAOMA,EAAoD,CACxDC,QAAS,iBACTC,mBAAoB,OACpBC,YAAa,SACbC,iBAAkB,OAClBC,SAAU,SACVC,UAAW,eACXC,aAAc,OACdC,kBAAmB,QACnBC,oBAAqB,YACrBC,oBAAqB,QACrBC,iBAAkB,QAClBC,YAAa,SACbC,SAAU,YACVC,gBAAiB,SACjBC,QAAS,iBACTC,UAAW,UACXC,UAAW,UACXC,QAAS,UACTC,QAAS,gBAQEC,EAAwC,SAAAC,GAAK,OACxD,sBAAMC,UAAW,eAAiBC,IAAMF,EAAMG,QAA9C,SACE,cAAC,IAAD,CACEF,UAAW,cAAqBC,IAAME,MAAQJ,EAAMK,cAAgB,IAAMH,IAAMG,cAAgB,IAChGC,QAAiC,YAAxB3B,EAAMqB,EAAMG,QACrBI,KAAM5B,EAAMqB,EAAMG,aA2BTK,IAd+B,SAAAR,GAC5C,IAAMS,EAAOT,EAAMU,YAAcV,EAAMG,OAAOQ,QAAQ,WAAY,OAAOC,YACzE,OACE,uBAAMX,UAAW,eAAiBC,IAAMF,EAAMG,QAA9C,UACE,cAAC,IAAD,CACEF,UAAW,cAAqBC,IAAME,KACtCE,QAAiC,YAAxB3B,EAAMqB,EAAMG,QACrBI,KAAM5B,EAAMqB,EAAMG,UAEpB,sBAAMF,UAAU,aAAhB,SAA8BQ","file":"static/js/29.cb9d416e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Icon, SemanticICONS } from \"semantic-ui-react\";\n\nimport style from \"./StatusText.module.less\";\n\nimport { SubmissionStatusAll } from \"@/interfaces/SubmissionStatus\";\n\nconst icons: Record<SubmissionStatusAll, SemanticICONS> = {\n  Pending: \"hourglass half\",\n  ConfigurationError: \"code\",\n  SystemError: \"server\",\n  CompilationError: \"code\",\n  Canceled: \"remove\",\n  FileError: \"file outline\",\n  RuntimeError: \"bomb\",\n  TimeLimitExceeded: \"clock\",\n  MemoryLimitExceeded: \"microchip\",\n  OutputLimitExceeded: \"print\",\n  PartiallyCorrect: \"minus\",\n  WrongAnswer: \"remove\",\n  Accepted: \"checkmark\",\n  JudgementFailed: \"server\",\n  Waiting: \"hourglass half\",\n  Preparing: \"spinner\",\n  Compiling: \"spinner\",\n  Running: \"spinner\",\n  Skipped: \"fast forward\"\n};\n\ninterface StatusIconProps {\n  status: string;\n  noMarginRight?: boolean;\n}\n\nexport const StatusIcon: React.FC<StatusIconProps> = props => (\n  <span className={\"statuscolor \" + style[props.status]}>\n    <Icon\n      className={\"statusicon\" + \" \" + style.icon + (props.noMarginRight ? \" \" + style.noMarginRight : \"\")}\n      loading={icons[props.status] === \"spinner\"}\n      name={icons[props.status]}\n    />\n  </span>\n);\n\ninterface StatusTextProps {\n  // This is the text to display\n  statusText?: string;\n  // This is the status for icon and color, an enum value, without spaces between each work\n  // If statusText is unset, this will be transformed to the text to display\n  status: string;\n}\n\nconst StatusText: React.FC<StatusTextProps> = props => {\n  const text = props.statusText || props.status.replace(/([A-Z])/g, \" $1\").trimStart();\n  return (\n    <span className={\"statuscolor \" + style[props.status]}>\n      <Icon\n        className={\"statusicon\" + \" \" + style.icon}\n        loading={icons[props.status] === \"spinner\"}\n        name={icons[props.status]}\n      />\n      <span className=\"statustext\">{text}</span>\n    </span>\n  );\n};\n\nexport default StatusText;\n"],"sourceRoot":""}