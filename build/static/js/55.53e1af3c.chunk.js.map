{"version":3,"sources":["components/LazyCodeEditor.tsx"],"names":["CodeEditor","lazy","LazyCodeEditor","props","loading","className","style","editorContainer","active","fallback"],"mappings":"2KAMMA,EAAaC,gBAAK,kBAAM,oFAefC,IAbmC,SAAAC,GAChD,IAAMC,EACJ,qBAAKC,UAAWF,EAAME,UAAN,UAAqBC,IAAMC,gBAA3B,YAA8CJ,EAAME,WAAcC,IAAMC,gBAAxF,SACE,cAAC,IAAD,CAAQF,UAAU,aAAaG,QAAM,MAGzC,OACE,cAAC,WAAD,CAAUC,SAAUL,EAApB,SACE,cAACJ,EAAD,eAAgBG","file":"static/js/55.53e1af3c.chunk.js","sourcesContent":["import React, { lazy, Suspense } from \"react\";\nimport { Loader } from \"semantic-ui-react\";\nimport type { CodeEditorProps } from \"./CodeEditor\";\n\nimport style from \"./CodeEditor.module.less\";\n\nconst CodeEditor = lazy(() => import(\"./CodeEditor\"));\n\nconst LazyCodeEditor: React.FC<CodeEditorProps> = props => {\n  const loading = (\n    <div className={props.className ? `${style.editorContainer} ${props.className}` : style.editorContainer}>\n      <Loader className=\"workaround\" active />\n    </div>\n  );\n  return (\n    <Suspense fallback={loading}>\n      <CodeEditor {...props} />\n    </Suspense>\n  );\n};\n\nexport default LazyCodeEditor;\n"],"sourceRoot":""}