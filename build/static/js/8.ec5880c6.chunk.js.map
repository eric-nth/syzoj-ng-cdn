{"version":3,"sources":["pages/problem/utils.ts"],"names":["getProblemUrl","metaOrId","subRoute","use","displayId","id","getProblemIdString","hideHashTagOnDisplayId","getProblemDisplayName","meta","title","_","returnType","idString","titleString","trim","all"],"mappings":"oHASO,SAASA,EACdC,GAEC,IAAD,yDADqE,GAAnEC,EACF,EADEA,SAAUC,EACZ,EADYA,IAEZ,OACuB,kBAAbF,EACI,cAARE,EAAA,aACQF,GADR,gBAEWA,IACTE,GAAOF,EAASG,WAAsB,cAARD,EAAhC,aACMF,EAASG,WADf,gBAESH,EAASI,MAASH,EAAQ,WAAOA,GAAa,IAcxD,SAASI,EACdL,GAES,IAAD,yDAD0F,GAAhGM,EACM,EADNA,uBAAwBJ,EAClB,EADkBA,IAE1B,MAA2B,kBAAbF,EACF,cAARE,EAAA,UACKI,EAAyB,GAAK,KADnC,OACyCN,GADzC,WAEMA,IACJE,GAAOF,EAASG,WAAsB,cAARD,EAAhC,UACGI,EAAyB,GAAK,KADjC,OACuCN,EAASG,WADhD,WAEIH,EAASI,IAiBZ,SAASG,EACdC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAWJ,IAASA,EAAKL,UAAL,WAAqBK,EAAKL,WAA1B,WAA4CK,EAAKJ,KACrES,EAAcJ,EAAMK,QAAUJ,EAAE,wBAChCK,EAAMH,EAAQ,UAAMA,EAAN,aAAmBC,GAAgBA,EACvD,OAAQF,GACN,IAAK,QACH,MAAO,CAACC,EAAUC,EAAaE,GACjC,IAAK,YACH,OAAOF,EACT,IAAK,MACL,QACE,OAAOE,GApEb","file":"static/js/8.ec5880c6.chunk.js","sourcesContent":["import { Localizer } from \"@/locales\";\n\nexport function getProblemUrl(\n  meta: ApiTypes.ProblemMetaDto,\n  options?: { subRoute?: string; use?: \"id\" | \"displayId\" }\n): string;\n\nexport function getProblemUrl(id: number, options?: { subRoute?: string; use?: \"id\" | \"displayId\" }): string;\n\nexport function getProblemUrl(\n  metaOrId: ApiTypes.ProblemMetaDto | number,\n  { subRoute, use }: { subRoute?: string; use?: \"id\" | \"displayId\" } = {}\n) {\n  return (\n    (typeof metaOrId === \"number\"\n      ? use === \"displayId\"\n        ? `/p/${metaOrId}`\n        : `/p/id/${metaOrId}`\n      : (!use && metaOrId.displayId) || use === \"displayId\"\n      ? `/p/${metaOrId.displayId}`\n      : `/p/id/${metaOrId.id}`) + (subRoute ? `/${subRoute}` : \"\")\n  );\n}\n\nexport function getProblemIdString(\n  meta: ApiTypes.ProblemMetaDto,\n  options?: { hideHashTagOnDisplayId?: boolean; use?: \"id\" | \"displayId\" }\n): string;\n\nexport function getProblemIdString(\n  id: number,\n  options?: { hideHashTagOnDisplayId?: boolean; use?: \"id\" | \"displayId\" }\n): string;\n\nexport function getProblemIdString(\n  metaOrId: ApiTypes.ProblemMetaDto | number,\n  { hideHashTagOnDisplayId, use }: { hideHashTagOnDisplayId?: boolean; use?: \"id\" | \"displayId\" } = {}\n): string {\n  return typeof metaOrId === \"number\"\n    ? use === \"displayId\"\n      ? `${hideHashTagOnDisplayId ? \"\" : \"#\"}${metaOrId}`\n      : `P${metaOrId}`\n    : (!use && metaOrId.displayId) || use === \"displayId\"\n    ? `${hideHashTagOnDisplayId ? \"\" : \"#\"}${metaOrId.displayId}`\n    : `P${metaOrId.id}`;\n}\n\nexport function getProblemDisplayName(\n  meta: ApiTypes.ProblemMetaDto,\n  title: string,\n  _: Localizer,\n  returnType: \"tuple\"\n): [string, string, string];\n\nexport function getProblemDisplayName(\n  meta: ApiTypes.ProblemMetaDto,\n  title: string,\n  _: Localizer,\n  returnType?: \"all\" | \"titleOnly\"\n): string;\n\nexport function getProblemDisplayName(\n  meta: ApiTypes.ProblemMetaDto,\n  title: string,\n  _: Localizer,\n  returnType?: \"all\" | \"tuple\" | \"titleOnly\"\n): string | [string, string, string] {\n  const idString = meta && (meta.displayId ? `#${meta.displayId}` : `P${meta.id}`);\n  const titleString = title.trim() || _(\"problem_set.no_title\");\n  const all = idString ? `${idString}. ${titleString}` : titleString;\n  switch (returnType) {\n    case \"tuple\":\n      return [idString, titleString, all];\n    case \"titleOnly\":\n      return titleString;\n    case \"all\":\n    default:\n      return all;\n  }\n}\n"],"sourceRoot":""}