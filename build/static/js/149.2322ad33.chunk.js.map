{"version":3,"sources":["pages/home/home-settings/HomeSettingsPage.tsx"],"names":["fetchData","a","api","homepage","getHomepageSettings","requestError","response","RouteError","showRefresh","showBack","error","makeToBeLocalizedText","HomeSettingsPage","props","_","useLocalizer","useEffect","appState","enterNewPage","locale","useConfirmNavigation","setModified","useState","settings","notice","enabled","noticeEnabled","setNoticeEnabled","Object","keys","contents","length","setNotice","noticeActiveLocale","setNoticeActiveLocale","annnouncements","items","fromEntries","entries","map","id","annnouncementDiscussions","find","discussion","setAnnnouncements","annnouncementsActiveLocale","setAnnnouncementsActiveLocale","getOnAddLocale","setter","activeLocaleSetter","defaultValue","original","getOnSetDefaultLocale","filter","getOnDeleteLocale","locales","i","indexOf","yaml","dump","hitokoto","hitokotoConfig","setHitokotoConfig","countdown","countdownConfig","setCountdownConfig","friendLinks","friendLinksConfig","setFriendLinksConfig","useAsyncCallbackPending","load","annnouncementIds","updateHomepageSettings","toast","errorDiscussionId","success","pending","onSubmit","className","style","headerWrapper","as","icon","content","loading","primary","onClick","subHeader","toggle","checked","onChange","e","noticeLocalizeTab","disabled","activeLocale","onSetActiveLocale","onAddLocale","item","isDefault","isOnly","noticeTab","buttons","trigger","negative","on","position","type","onChangeContent","placeholder","unstackable","table","basic","Header","Row","HeaderCell","width","noWrap","textAlign","Body","annnouncement","Cell","href","getDiscussionUrl","target","getDiscussionDisplayTitle","title","formatDateTime","publishTime","operation","name","x","colSpan","footer","size","onResultSelect","meta","some","sort","b","space","configEditor","language","value","bottomSubmitWrapper","defineRoute","request"],"mappings":"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","file":"static/js/149.2322ad33.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Checkbox, Dropdown, Header, Icon, Popup, Table } from \"semantic-ui-react\";\nimport yaml from \"js-yaml\";\n\nimport style from \"./HomeSettingsPage.module.less\";\n\nimport api from \"@/api\";\nimport { defineRoute, RouteError } from \"@/AppRouter\";\nimport { makeToBeLocalizedText } from \"@/locales\";\nimport { Link, useAsyncCallbackPending, useConfirmNavigation, useLocalizer } from \"@/utils/hooks\";\nimport { LocalizeTab } from \"@/components/LocalizeTab\";\nimport { appState } from \"@/appState\";\nimport { Locale } from \"@/interfaces/Locale\";\nimport { DiscussionEditor } from \"@/pages/discussion/view/DiscussionViewPage\";\nimport { EmojiRenderer } from \"@/components/EmojiRenderer\";\nimport { getDiscussionDisplayTitle, getDiscussionUrl } from \"@/pages/discussion/utils\";\nimport formatDateTime from \"@/utils/formatDateTime\";\nimport { DiscussionSearch } from \"@/components/DiscussionSearch\";\nimport LazyCodeEditor from \"@/components/LazyCodeEditor\";\nimport toast from \"@/utils/toast\";\n\nasync function fetchData() {\n  const { requestError, response } = await api.homepage.getHomepageSettings();\n\n  if (requestError) throw new RouteError(requestError, { showRefresh: true, showBack: true });\n  else if (response.error)\n    throw new RouteError(makeToBeLocalizedText(`home_settings.errors.${response.error}`), {\n      showRefresh: true,\n      showBack: true\n    });\n\n  return response;\n}\n\ntype HomeSettingsPageProps = Omit<ApiTypes.GetHomepageSettingsResponseDto, \"error\">;\n\nlet HomeSettingsPage: React.FC<HomeSettingsPageProps> = props => {\n  const _ = useLocalizer(\"home_settings\");\n\n  useEffect(() => {\n    appState.enterNewPage(_(\".title\"), null, false);\n  }, [appState.locale]);\n\n  const [modified, setModified] = useConfirmNavigation();\n\n  const [noticeEnabled, setNoticeEnabled] = useState(props.settings.notice.enabled);\n  const [notice, setNotice] = useState(\n    () =>\n      (Object.keys(props.settings.notice.contents).length === 0\n        ? { [appState.locale]: \"\" }\n        : props.settings.notice.contents) as Record<Locale, string>\n  );\n  const [noticeActiveLocale, setNoticeActiveLocale] = useState(Object.keys(notice)[0] as Locale);\n\n  const [annnouncements, setAnnnouncements] = useState(\n    () =>\n      (Object.keys(props.settings.annnouncements.items).length === 0\n        ? { [appState.locale]: [] }\n        : Object.fromEntries(\n            Object.entries(props.settings.annnouncements.items).map(([locale, ids]: [Locale, number[]]) => [\n              locale,\n              ids.map(id => props.annnouncementDiscussions.find(discussion => discussion.id === id))\n            ])\n          )) as Record<Locale, ApiTypes.DiscussionMetaDto[]>\n  );\n  const [annnouncementsActiveLocale, setAnnnouncementsActiveLocale] = useState(\n    Object.keys(annnouncements)[0] as Locale\n  );\n\n  function getOnAddLocale<T>(\n    setter: React.Dispatch<React.SetStateAction<Record<Locale, T>>>,\n    activeLocaleSetter: React.Dispatch<React.SetStateAction<Locale>>,\n    defaultValue: T\n  ) {\n    return (locale: Locale) => {\n      setModified(true);\n      setter(original => ({ ...original, [locale]: defaultValue }));\n      activeLocaleSetter(locale);\n    };\n  }\n\n  function getOnSetDefaultLocale<T>(setter: React.Dispatch<React.SetStateAction<Record<Locale, T>>>, locale: Locale) {\n    return () => {\n      setter(original => {\n        const entries = Object.entries(original);\n        return Object.fromEntries([\n          entries.find(([l]) => l === locale),\n          ...entries.filter(([l]) => l !== locale)\n        ]) as typeof original;\n      });\n    };\n  }\n\n  function getOnDeleteLocale<T>(\n    setter: React.Dispatch<React.SetStateAction<Record<Locale, T>>>,\n    activeLocaleSetter: React.Dispatch<React.SetStateAction<Locale>>,\n    locale: Locale\n  ) {\n    return () => {\n      setter(original => {\n        const locales = Object.keys(original) as Locale[];\n        const i = locales.indexOf(locale);\n        if (i === locales.length - 1) activeLocaleSetter(locales[i - 1]);\n        else activeLocaleSetter(locales[i + 1]);\n        return Object.fromEntries(Object.entries(original).filter(([l]) => l !== locale)) as typeof original;\n      });\n    };\n  }\n\n  const [hitokotoConfig, setHitokotoConfig] = useState(() => yaml.dump(props.settings.hitokoto));\n  const [countdownConfig, setCountdownConfig] = useState(() => yaml.dump(props.settings.countdown));\n  const [friendLinksConfig, setFriendLinksConfig] = useState(() => yaml.dump(props.settings.friendLinks));\n\n  const [pending, onSubmit] = useAsyncCallbackPending(async () => {\n    const hitokoto = yaml.load(hitokotoConfig) as any;\n    const countdown = yaml.load(countdownConfig) as any;\n    const friendLinks = yaml.load(friendLinksConfig) as any;\n    const annnouncementIds = Object.fromEntries(\n      Object.entries(annnouncements).map(([locale, discussions]) => [locale, discussions.map(({ id }) => id)])\n    );\n\n    const { requestError, response } = await api.homepage.updateHomepageSettings({\n      settings: {\n        notice: {\n          enabled: noticeEnabled,\n          contents: notice\n        },\n        annnouncements: {\n          items: annnouncementIds\n        },\n        hitokoto,\n        countdown,\n        friendLinks\n      }\n    });\n\n    if (requestError) toast.error(requestError(_));\n    else if (response.error) toast.error(_(`.errors.${response.error}`, { id: response.errorDiscussionId }));\n    else {\n      setModified(false);\n      toast.success(_(\".success\"));\n    }\n  });\n\n  return (\n    <>\n      <div className={style.headerWrapper}>\n        <Header as=\"h1\" icon=\"setting\" content={_(\".header\")} className=\"withIcon\" />\n        <Button loading={pending} primary content={_(\".submit\")} onClick={onSubmit} />\n      </div>\n      <Header\n        className={style.subHeader}\n        as=\"h3\"\n        content={\n          <>\n            {_(\".notice.header\")}\n            <Checkbox toggle checked={noticeEnabled} onChange={(e, { checked }) => setNoticeEnabled(checked)} />\n          </>\n        }\n      />\n      <LocalizeTab\n        className={style.noticeLocalizeTab + (!noticeEnabled ? \" \" + style.disabled : \"\")}\n        locales={Object.keys(notice) as Locale[]}\n        activeLocale={noticeActiveLocale}\n        onSetActiveLocale={setNoticeActiveLocale}\n        onAddLocale={getOnAddLocale(setNotice, setNoticeActiveLocale, \"\")}\n        item={(locale, isDefault, isOnly) => (\n          <div className={style.noticeTab}>\n            <div className={style.buttons}>\n              {!isDefault && (\n                <Button content={_(\".set_default_locale\")} onClick={getOnSetDefaultLocale(setNotice, locale)} />\n              )}\n              {!isOnly && (\n                <Popup\n                  trigger={<Button negative content={_(\".delete_locale\")} />}\n                  content={\n                    <Button\n                      negative\n                      content={_(\".confirm_delete_locale\")}\n                      onClick={getOnDeleteLocale(setNotice, setNoticeActiveLocale, locale)}\n                    />\n                  }\n                  on=\"click\"\n                  position=\"top center\"\n                />\n              )}\n            </div>\n            <div>\n              <DiscussionEditor\n                type=\"RawEditor\"\n                content={notice[locale]}\n                onChangeContent={content => {\n                  setModified(true);\n                  setNotice(notice => ({\n                    ...notice,\n                    [locale]: content\n                  }));\n                }}\n                placeholder={_(\".notice.placeholder\")}\n              />\n            </div>\n          </div>\n        )}\n      />\n      <Header as=\"h3\" content={_(\".annnouncements.header\")} />\n      <LocalizeTab\n        locales={Object.keys(annnouncements) as Locale[]}\n        activeLocale={annnouncementsActiveLocale}\n        onSetActiveLocale={setAnnnouncementsActiveLocale}\n        onAddLocale={getOnAddLocale(setAnnnouncements, setAnnnouncementsActiveLocale, [])}\n        item={(locale, isDefault, isOnly) => (\n          <>\n            <Table unstackable className={style.table} basic>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell width={1} className={style.noWrap} textAlign=\"center\">\n                    #\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>{_(\".annnouncements.title\")}</Table.HeaderCell>\n                  <Table.HeaderCell width={1} className={style.noWrap} textAlign=\"center\">\n                    {_(\".annnouncements.date\")}\n                  </Table.HeaderCell>\n                  <Table.HeaderCell width={1} className={style.noWrap} textAlign=\"center\">\n                    {_(\".annnouncements.operations\")}\n                  </Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {annnouncements[locale].map(annnouncement => (\n                  <Table.Row key={annnouncement.id}>\n                    <Table.Cell textAlign=\"center\" className={style.noWrap}>\n                      {annnouncement.id}\n                    </Table.Cell>\n                    <Table.Cell>\n                      <EmojiRenderer>\n                        <Link href={getDiscussionUrl(annnouncement)} target=\"_blank\">\n                          {getDiscussionDisplayTitle(annnouncement.title, _)}\n                        </Link>\n                      </EmojiRenderer>\n                    </Table.Cell>\n                    <Table.Cell width={1} className={style.noWrap}>\n                      {formatDateTime(annnouncement.publishTime, true)[1]}\n                    </Table.Cell>\n                    <Table.Cell className={style.noWrap} textAlign=\"center\">\n                      <Icon\n                        className={style.operation}\n                        name=\"delete\"\n                        onClick={() => {\n                          setModified(true);\n                          setAnnnouncements(annnouncements => ({\n                            ...annnouncements,\n                            [locale]: annnouncements[locale].filter(x => x.id !== annnouncement.id)\n                          }));\n                        }}\n                      />\n                    </Table.Cell>\n                  </Table.Row>\n                ))}\n                <Table.Row>\n                  <Table.Cell colSpan={4}>\n                    <div className={style.footer}>\n                      <Header size=\"tiny\">{_(\".annnouncements.add\")}</Header>\n                      <DiscussionSearch\n                        onResultSelect={({ meta }) => {\n                          setModified(true);\n                          setAnnnouncements(annnouncements =>\n                            annnouncements[locale].some(x => x.id === meta.id)\n                              ? annnouncements\n                              : {\n                                  ...annnouncements,\n                                  [locale]: [...annnouncements[locale], meta].sort((a, b) => b.id - a.id)\n                                }\n                          );\n                        }}\n                      />\n                      <div className={style.space} />\n                      {!isDefault && (\n                        <Button\n                          content={_(\".set_default_locale\")}\n                          onClick={getOnSetDefaultLocale(setAnnnouncements, locale)}\n                        />\n                      )}\n                      {!isOnly && (\n                        <Popup\n                          trigger={<Button negative content={_(\".delete_locale\")} />}\n                          content={\n                            <Button\n                              negative\n                              content={_(\".confirm_delete_locale\")}\n                              onClick={getOnDeleteLocale(setAnnnouncements, setAnnnouncementsActiveLocale, locale)}\n                            />\n                          }\n                          on=\"click\"\n                          position=\"top center\"\n                        />\n                      )}\n                    </div>\n                  </Table.Cell>\n                </Table.Row>\n              </Table.Body>\n            </Table>\n          </>\n        )}\n      />\n      <Header as=\"h3\" content={_(\".hitokoto\")} />\n      <LazyCodeEditor\n        className={style.configEditor}\n        language=\"yaml\"\n        value={hitokotoConfig}\n        onChange={value => setHitokotoConfig(value)}\n      />\n      <Header as=\"h3\" content={_(\".countdown\")} />\n      <LazyCodeEditor\n        className={style.configEditor}\n        language=\"yaml\"\n        value={countdownConfig}\n        onChange={value => setCountdownConfig(value)}\n      />\n      <Header as=\"h3\" content={_(\".friend_links\")} />\n      <LazyCodeEditor\n        className={style.configEditor}\n        language=\"yaml\"\n        value={friendLinksConfig}\n        onChange={value => setFriendLinksConfig(value)}\n      />\n      <div className={style.bottomSubmitWrapper}>\n        <Button loading={pending} primary content={_(\".submit\")} onClick={onSubmit} />\n      </div>\n    </>\n  );\n};\n\nexport default defineRoute(async request => <HomeSettingsPage {...await fetchData()} />);\n"],"sourceRoot":""}